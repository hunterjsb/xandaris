name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25.2'

      - name: Build
        run: |
          mkdir dist
          GOOS=js GOARCH=wasm go build -o dist/main.wasm .
          cp $(go env GOROOT)/lib/wasm/wasm_exec.js dist/
          cp -r assets dist/
          cat > dist/index.html <<'EOF'
          <!DOCTYPE html>
          <html>
          <head>
          <meta charset="utf-8">
          <title>Xandaris II</title>
          <style>
            body, html {
              margin: 0;
              padding: 0;
              width: 100%;
              height: 100%;
              background-color: #111;
              display: flex;
              justify-content: center;
              align-items: center;
              overflow: hidden;
            }
            #game-container {
              width: 100vw;
              height: calc(100vw * 9 / 16);
              max-width: 100%;
              max-height: 100vh;
              aspect-ratio: 16 / 9;
              position: relative;
            }
            canvas {
              width: 100%;
              height: 100%;
              display: block;
            }
          </style>
          </head>
          <body>
          <div id="game-container">
            <!-- Canvas will be inserted here by wasm_exec.js -->
          </div>
          <script src="wasm_exec.js"></script>
          <script>
            if (!WebAssembly.instantiateStreaming) { // polyfill
                WebAssembly.instantiateStreaming = async (resp, importObject) => {
                    const source = await (await resp).arrayBuffer();
                    return await WebAssembly.instantiate(source, importObject);
                };
            }
            const go = new Go();
            WebAssembly.instantiateStreaming(fetch("main.wasm"), go.importObject).then((result) => {
                go.run(result.instance);
                // Ebitengine appends the canvas to the body, so we move it.
                const canvas = document.querySelector('canvas');
                if (canvas) {
                  document.getElementById('game-container').appendChild(canvas);
                }
            });
          </script>
          </body>
          </html>
          EOF

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
