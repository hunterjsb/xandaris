(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();class I extends Error{constructor(e){var t,i,s,n;super("ClientResponseError"),this.url="",this.status=0,this.response={},this.isAbort=!1,this.originalError=null,Object.setPrototypeOf(this,I.prototype),e!==null&&typeof e=="object"&&(this.url=typeof e.url=="string"?e.url:"",this.status=typeof e.status=="number"?e.status:0,this.isAbort=!!e.isAbort,this.originalError=e.originalError,e.response!==null&&typeof e.response=="object"?this.response=e.response:e.data!==null&&typeof e.data=="object"?this.response=e.data:this.response={}),this.originalError||e instanceof I||(this.originalError=e),typeof DOMException<"u"&&e instanceof DOMException&&(this.isAbort=!0),this.name="ClientResponseError "+this.status,this.message=(t=this.response)==null?void 0:t.message,this.message||(this.isAbort?this.message="The request was autocancelled. You can find more info in https://github.com/pocketbase/js-sdk#auto-cancellation.":(n=(s=(i=this.originalError)==null?void 0:i.cause)==null?void 0:s.message)!=null&&n.includes("ECONNREFUSED ::1")?this.message="Failed to connect to the PocketBase server. Try changing the SDK URL from localhost to 127.0.0.1 (https://github.com/pocketbase/js-sdk/issues/21).":this.message="Something went wrong while processing your request.")}get data(){return this.response}toJSON(){return{...this}}}const M=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;function ae(d,e){const t={};if(typeof d!="string")return t;const i=Object.assign({},{}).decode||le;let s=0;for(;s<d.length;){const n=d.indexOf("=",s);if(n===-1)break;let o=d.indexOf(";",s);if(o===-1)o=d.length;else if(o<n){s=d.lastIndexOf(";",n-1)+1;continue}const r=d.slice(s,n).trim();if(t[r]===void 0){let l=d.slice(n+1,o).trim();l.charCodeAt(0)===34&&(l=l.slice(1,-1));try{t[r]=i(l)}catch{t[r]=l}}s=o+1}return t}function Y(d,e,t){const i=Object.assign({},t||{}),s=i.encode||ce;if(!M.test(d))throw new TypeError("argument name is invalid");const n=s(e);if(n&&!M.test(n))throw new TypeError("argument val is invalid");let o=d+"="+n;if(i.maxAge!=null){const r=i.maxAge-0;if(isNaN(r)||!isFinite(r))throw new TypeError("option maxAge is invalid");o+="; Max-Age="+Math.floor(r)}if(i.domain){if(!M.test(i.domain))throw new TypeError("option domain is invalid");o+="; Domain="+i.domain}if(i.path){if(!M.test(i.path))throw new TypeError("option path is invalid");o+="; Path="+i.path}if(i.expires){if(!function(l){return Object.prototype.toString.call(l)==="[object Date]"||l instanceof Date}(i.expires)||isNaN(i.expires.valueOf()))throw new TypeError("option expires is invalid");o+="; Expires="+i.expires.toUTCString()}if(i.httpOnly&&(o+="; HttpOnly"),i.secure&&(o+="; Secure"),i.priority)switch(typeof i.priority=="string"?i.priority.toLowerCase():i.priority){case"low":o+="; Priority=Low";break;case"medium":o+="; Priority=Medium";break;case"high":o+="; Priority=High";break;default:throw new TypeError("option priority is invalid")}if(i.sameSite)switch(typeof i.sameSite=="string"?i.sameSite.toLowerCase():i.sameSite){case!0:o+="; SameSite=Strict";break;case"lax":o+="; SameSite=Lax";break;case"strict":o+="; SameSite=Strict";break;case"none":o+="; SameSite=None";break;default:throw new TypeError("option sameSite is invalid")}return o}function le(d){return d.indexOf("%")!==-1?decodeURIComponent(d):d}function ce(d){return encodeURIComponent(d)}const de=typeof navigator<"u"&&navigator.product==="ReactNative"||typeof global<"u"&&global.HermesInternal;let Z;function z(d){if(d)try{const e=decodeURIComponent(Z(d.split(".")[1]).split("").map(function(t){return"%"+("00"+t.charCodeAt(0).toString(16)).slice(-2)}).join(""));return JSON.parse(e)||{}}catch{}return{}}function Q(d,e=0){let t=z(d);return!(Object.keys(t).length>0&&(!t.exp||t.exp-e>Date.now()/1e3))}Z=typeof atob!="function"||de?d=>{let e=String(d).replace(/=+$/,"");if(e.length%4==1)throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");for(var t,i,s=0,n=0,o="";i=e.charAt(n++);~i&&(t=s%4?64*t+i:i,s++%4)?o+=String.fromCharCode(255&t>>(-2*s&6)):0)i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(i);return o}:atob;const H="pb_auth";class he{constructor(){this.baseToken="",this.baseModel=null,this._onChangeCallbacks=[]}get token(){return this.baseToken}get model(){return this.baseModel}get isValid(){return!Q(this.token)}get isAdmin(){return z(this.token).type==="admin"}get isAuthRecord(){return z(this.token).type==="authRecord"}save(e,t){this.baseToken=e||"",this.baseModel=t||null,this.triggerChange()}clear(){this.baseToken="",this.baseModel=null,this.triggerChange()}loadFromCookie(e,t=H){const i=ae(e||"")[t]||"";let s={};try{s=JSON.parse(i),(typeof s===null||typeof s!="object"||Array.isArray(s))&&(s={})}catch{}this.save(s.token||"",s.model||null)}exportToCookie(e,t=H){var l,a;const i={secure:!0,sameSite:!0,httpOnly:!0,path:"/"},s=z(this.token);i.expires=s!=null&&s.exp?new Date(1e3*s.exp):new Date("1970-01-01"),e=Object.assign({},i,e);const n={token:this.token,model:this.model?JSON.parse(JSON.stringify(this.model)):null};let o=Y(t,JSON.stringify(n),e);const r=typeof Blob<"u"?new Blob([o]).size:o.length;if(n.model&&r>4096){n.model={id:(l=n==null?void 0:n.model)==null?void 0:l.id,email:(a=n==null?void 0:n.model)==null?void 0:a.email};const h=["collectionId","username","verified"];for(const c in this.model)h.includes(c)&&(n.model[c]=this.model[c]);o=Y(t,JSON.stringify(n),e)}return o}onChange(e,t=!1){return this._onChangeCallbacks.push(e),t&&e(this.token,this.model),()=>{for(let i=this._onChangeCallbacks.length-1;i>=0;i--)if(this._onChangeCallbacks[i]==e)return delete this._onChangeCallbacks[i],void this._onChangeCallbacks.splice(i,1)}}triggerChange(){for(const e of this._onChangeCallbacks)e&&e(this.token,this.model)}}class ue extends he{constructor(e="pocketbase_auth"){super(),this.storageFallback={},this.storageKey=e,this._bindStorageEvent()}get token(){return(this._storageGet(this.storageKey)||{}).token||""}get model(){return(this._storageGet(this.storageKey)||{}).model||null}save(e,t){this._storageSet(this.storageKey,{token:e,model:t}),super.save(e,t)}clear(){this._storageRemove(this.storageKey),super.clear()}_storageGet(e){if(typeof window<"u"&&(window!=null&&window.localStorage)){const t=window.localStorage.getItem(e)||"";try{return JSON.parse(t)}catch{return t}}return this.storageFallback[e]}_storageSet(e,t){if(typeof window<"u"&&(window!=null&&window.localStorage)){let i=t;typeof t!="string"&&(i=JSON.stringify(t)),window.localStorage.setItem(e,i)}else this.storageFallback[e]=t}_storageRemove(e){var t;typeof window<"u"&&(window!=null&&window.localStorage)&&((t=window.localStorage)==null||t.removeItem(e)),delete this.storageFallback[e]}_bindStorageEvent(){typeof window<"u"&&(window!=null&&window.localStorage)&&window.addEventListener&&window.addEventListener("storage",e=>{if(e.key!=this.storageKey)return;const t=this._storageGet(this.storageKey)||{};super.save(t.token||"",t.model||null)})}}class A{constructor(e){this.client=e}}class me extends A{async getAll(e){return e=Object.assign({method:"GET"},e),this.client.send("/api/settings",e)}async update(e,t){return t=Object.assign({method:"PATCH",body:e},t),this.client.send("/api/settings",t)}async testS3(e="storage",t){return t=Object.assign({method:"POST",body:{filesystem:e}},t),this.client.send("/api/settings/test/s3",t).then(()=>!0)}async testEmail(e,t,i){return i=Object.assign({method:"POST",body:{email:e,template:t}},i),this.client.send("/api/settings/test/email",i).then(()=>!0)}async generateAppleClientSecret(e,t,i,s,n,o){return o=Object.assign({method:"POST",body:{clientId:e,teamId:t,keyId:i,privateKey:s,duration:n}},o),this.client.send("/api/settings/apple/generate-client-secret",o)}}class j extends A{decode(e){return e}async getFullList(e,t){if(typeof e=="number")return this._getFullList(e,t);let i=500;return(t=Object.assign({},e,t)).batch&&(i=t.batch,delete t.batch),this._getFullList(i,t)}async getList(e=1,t=30,i){return(i=Object.assign({method:"GET"},i)).query=Object.assign({page:e,perPage:t},i.query),this.client.send(this.baseCrudPath,i).then(s=>{var n;return s.items=((n=s.items)==null?void 0:n.map(o=>this.decode(o)))||[],s})}async getFirstListItem(e,t){return(t=Object.assign({requestKey:"one_by_filter_"+this.baseCrudPath+"_"+e},t)).query=Object.assign({filter:e,skipTotal:1},t.query),this.getList(1,1,t).then(i=>{var s;if(!((s=i==null?void 0:i.items)!=null&&s.length))throw new I({status:404,response:{code:404,message:"The requested resource wasn't found.",data:{}}});return i.items[0]})}async getOne(e,t){if(!e)throw new I({url:this.client.buildUrl(this.baseCrudPath+"/"),status:404,response:{code:404,message:"Missing required record id.",data:{}}});return t=Object.assign({method:"GET"},t),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e),t).then(i=>this.decode(i))}async create(e,t){return t=Object.assign({method:"POST",body:e},t),this.client.send(this.baseCrudPath,t).then(i=>this.decode(i))}async update(e,t,i){return i=Object.assign({method:"PATCH",body:t},i),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e),i).then(s=>this.decode(s))}async delete(e,t){return t=Object.assign({method:"DELETE"},t),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e),t).then(()=>!0)}_getFullList(e=500,t){(t=t||{}).query=Object.assign({skipTotal:1},t.query);let i=[],s=async n=>this.getList(n,e||500,t).then(o=>{const r=o.items;return i=i.concat(r),r.length==o.perPage?s(n+1):i});return s(1)}}function O(d,e,t,i){const s=i!==void 0;return s||t!==void 0?s?(console.warn(d),e.body=Object.assign({},e.body,t),e.query=Object.assign({},e.query,i),e):Object.assign(e,t):e}function F(d){var e;(e=d._resetAutoRefresh)==null||e.call(d)}class pe extends j{get baseCrudPath(){return"/api/admins"}async update(e,t,i){return super.update(e,t,i).then(s=>{var n,o;return((n=this.client.authStore.model)==null?void 0:n.id)===s.id&&((o=this.client.authStore.model)==null?void 0:o.collectionId)===void 0&&this.client.authStore.save(this.client.authStore.token,s),s})}async delete(e,t){return super.delete(e,t).then(i=>{var s,n;return i&&((s=this.client.authStore.model)==null?void 0:s.id)===e&&((n=this.client.authStore.model)==null?void 0:n.collectionId)===void 0&&this.client.authStore.clear(),i})}authResponse(e){const t=this.decode((e==null?void 0:e.admin)||{});return e!=null&&e.token&&(e!=null&&e.admin)&&this.client.authStore.save(e.token,t),Object.assign({},e,{token:(e==null?void 0:e.token)||"",admin:t})}async authWithPassword(e,t,i,s){let n={method:"POST",body:{identity:e,password:t}};n=O("This form of authWithPassword(email, pass, body?, query?) is deprecated. Consider replacing it with authWithPassword(email, pass, options?).",n,i,s);const o=n.autoRefreshThreshold;delete n.autoRefreshThreshold,n.autoRefresh||F(this.client);let r=await this.client.send(this.baseCrudPath+"/auth-with-password",n);return r=this.authResponse(r),o&&function(a,h,c,u){F(a);const p=a.beforeSend,m=a.authStore.model,T=a.authStore.onChange((v,f)=>{(!v||(f==null?void 0:f.id)!=(m==null?void 0:m.id)||(f!=null&&f.collectionId||m!=null&&m.collectionId)&&(f==null?void 0:f.collectionId)!=(m==null?void 0:m.collectionId))&&F(a)});a._resetAutoRefresh=function(){T(),a.beforeSend=p,delete a._resetAutoRefresh},a.beforeSend=async(v,f)=>{var C;const E=a.authStore.token;if((C=f.query)!=null&&C.autoRefresh)return p?p(v,f):{url:v,sendOptions:f};let g=a.authStore.isValid;if(g&&Q(a.authStore.token,h))try{await c()}catch{g=!1}g||await u();const w=f.headers||{};for(let S in w)if(S.toLowerCase()=="authorization"&&E==w[S]&&a.authStore.token){w[S]=a.authStore.token;break}return f.headers=w,p?p(v,f):{url:v,sendOptions:f}}}(this.client,o,()=>this.authRefresh({autoRefresh:!0}),()=>this.authWithPassword(e,t,Object.assign({autoRefresh:!0},n))),r}async authRefresh(e,t){let i={method:"POST"};return i=O("This form of authRefresh(body?, query?) is deprecated. Consider replacing it with authRefresh(options?).",i,e,t),this.client.send(this.baseCrudPath+"/auth-refresh",i).then(this.authResponse.bind(this))}async requestPasswordReset(e,t,i){let s={method:"POST",body:{email:e}};return s=O("This form of requestPasswordReset(email, body?, query?) is deprecated. Consider replacing it with requestPasswordReset(email, options?).",s,t,i),this.client.send(this.baseCrudPath+"/request-password-reset",s).then(()=>!0)}async confirmPasswordReset(e,t,i,s,n){let o={method:"POST",body:{token:e,password:t,passwordConfirm:i}};return o=O("This form of confirmPasswordReset(resetToken, password, passwordConfirm, body?, query?) is deprecated. Consider replacing it with confirmPasswordReset(resetToken, password, passwordConfirm, options?).",o,s,n),this.client.send(this.baseCrudPath+"/confirm-password-reset",o).then(()=>!0)}}const fe=["requestKey","$cancelKey","$autoCancel","fetch","headers","body","query","params","cache","credentials","headers","integrity","keepalive","method","mode","redirect","referrer","referrerPolicy","signal","window"];function ee(d){if(d){d.query=d.query||{};for(let e in d)fe.includes(e)||(d.query[e]=d[e],delete d[e])}}class te extends A{constructor(){super(...arguments),this.clientId="",this.eventSource=null,this.subscriptions={},this.lastSentSubscriptions=[],this.maxConnectTimeout=15e3,this.reconnectAttempts=0,this.maxReconnectAttempts=1/0,this.predefinedReconnectIntervals=[200,300,500,1e3,1200,1500,2e3],this.pendingConnects=[]}get isConnected(){return!!this.eventSource&&!!this.clientId&&!this.pendingConnects.length}async subscribe(e,t,i){var o;if(!e)throw new Error("topic must be set.");let s=e;if(i){ee(i=Object.assign({},i));const r="options="+encodeURIComponent(JSON.stringify({query:i.query,headers:i.headers}));s+=(s.includes("?")?"&":"?")+r}const n=function(r){const l=r;let a;try{a=JSON.parse(l==null?void 0:l.data)}catch{}t(a||{})};return this.subscriptions[s]||(this.subscriptions[s]=[]),this.subscriptions[s].push(n),this.isConnected?this.subscriptions[s].length===1?await this.submitSubscriptions():(o=this.eventSource)==null||o.addEventListener(s,n):await this.connect(),async()=>this.unsubscribeByTopicAndListener(e,n)}async unsubscribe(e){var i;let t=!1;if(e){const s=this.getSubscriptionsByTopic(e);for(let n in s)if(this.hasSubscriptionListeners(n)){for(let o of this.subscriptions[n])(i=this.eventSource)==null||i.removeEventListener(n,o);delete this.subscriptions[n],t||(t=!0)}}else this.subscriptions={};this.hasSubscriptionListeners()?t&&await this.submitSubscriptions():this.disconnect()}async unsubscribeByPrefix(e){var i;let t=!1;for(let s in this.subscriptions)if((s+"?").startsWith(e)){t=!0;for(let n of this.subscriptions[s])(i=this.eventSource)==null||i.removeEventListener(s,n);delete this.subscriptions[s]}t&&(this.hasSubscriptionListeners()?await this.submitSubscriptions():this.disconnect())}async unsubscribeByTopicAndListener(e,t){var n;let i=!1;const s=this.getSubscriptionsByTopic(e);for(let o in s){if(!Array.isArray(this.subscriptions[o])||!this.subscriptions[o].length)continue;let r=!1;for(let l=this.subscriptions[o].length-1;l>=0;l--)this.subscriptions[o][l]===t&&(r=!0,delete this.subscriptions[o][l],this.subscriptions[o].splice(l,1),(n=this.eventSource)==null||n.removeEventListener(o,t));r&&(this.subscriptions[o].length||delete this.subscriptions[o],i||this.hasSubscriptionListeners(o)||(i=!0))}this.hasSubscriptionListeners()?i&&await this.submitSubscriptions():this.disconnect()}hasSubscriptionListeners(e){var t,i;if(this.subscriptions=this.subscriptions||{},e)return!!((t=this.subscriptions[e])!=null&&t.length);for(let s in this.subscriptions)if((i=this.subscriptions[s])!=null&&i.length)return!0;return!1}async submitSubscriptions(){if(this.clientId)return this.addAllSubscriptionListeners(),this.lastSentSubscriptions=this.getNonEmptySubscriptionKeys(),this.client.send("/api/realtime",{method:"POST",body:{clientId:this.clientId,subscriptions:this.lastSentSubscriptions},requestKey:this.getSubscriptionsCancelKey()}).catch(e=>{if(!(e!=null&&e.isAbort))throw e})}getSubscriptionsCancelKey(){return"realtime_"+this.clientId}getSubscriptionsByTopic(e){const t={};e=e.includes("?")?e:e+"?";for(let i in this.subscriptions)(i+"?").startsWith(e)&&(t[i]=this.subscriptions[i]);return t}getNonEmptySubscriptionKeys(){const e=[];for(let t in this.subscriptions)this.subscriptions[t].length&&e.push(t);return e}addAllSubscriptionListeners(){if(this.eventSource){this.removeAllSubscriptionListeners();for(let e in this.subscriptions)for(let t of this.subscriptions[e])this.eventSource.addEventListener(e,t)}}removeAllSubscriptionListeners(){if(this.eventSource)for(let e in this.subscriptions)for(let t of this.subscriptions[e])this.eventSource.removeEventListener(e,t)}async connect(){if(!(this.reconnectAttempts>0))return new Promise((e,t)=>{this.pendingConnects.push({resolve:e,reject:t}),this.pendingConnects.length>1||this.initConnect()})}initConnect(){this.disconnect(!0),clearTimeout(this.connectTimeoutId),this.connectTimeoutId=setTimeout(()=>{this.connectErrorHandler(new Error("EventSource connect took too long."))},this.maxConnectTimeout),this.eventSource=new EventSource(this.client.buildUrl("/api/realtime")),this.eventSource.onerror=e=>{this.connectErrorHandler(new Error("Failed to establish realtime connection."))},this.eventSource.addEventListener("PB_CONNECT",e=>{const t=e;this.clientId=t==null?void 0:t.lastEventId,this.submitSubscriptions().then(async()=>{let i=3;for(;this.hasUnsentSubscriptions()&&i>0;)i--,await this.submitSubscriptions()}).then(()=>{for(let s of this.pendingConnects)s.resolve();this.pendingConnects=[],this.reconnectAttempts=0,clearTimeout(this.reconnectTimeoutId),clearTimeout(this.connectTimeoutId);const i=this.getSubscriptionsByTopic("PB_CONNECT");for(let s in i)for(let n of i[s])n(e)}).catch(i=>{this.clientId="",this.connectErrorHandler(i)})})}hasUnsentSubscriptions(){const e=this.getNonEmptySubscriptionKeys();if(e.length!=this.lastSentSubscriptions.length)return!0;for(const t of e)if(!this.lastSentSubscriptions.includes(t))return!0;return!1}connectErrorHandler(e){if(clearTimeout(this.connectTimeoutId),clearTimeout(this.reconnectTimeoutId),!this.clientId&&!this.reconnectAttempts||this.reconnectAttempts>this.maxReconnectAttempts){for(let i of this.pendingConnects)i.reject(new I(e));return this.pendingConnects=[],void this.disconnect()}this.disconnect(!0);const t=this.predefinedReconnectIntervals[this.reconnectAttempts]||this.predefinedReconnectIntervals[this.predefinedReconnectIntervals.length-1];this.reconnectAttempts++,this.reconnectTimeoutId=setTimeout(()=>{this.initConnect()},t)}disconnect(e=!1){var t;if(clearTimeout(this.connectTimeoutId),clearTimeout(this.reconnectTimeoutId),this.removeAllSubscriptionListeners(),this.client.cancelRequest(this.getSubscriptionsCancelKey()),(t=this.eventSource)==null||t.close(),this.eventSource=null,this.clientId="",!e){this.reconnectAttempts=0;for(let i of this.pendingConnects)i.resolve();this.pendingConnects=[]}}}class ye extends j{constructor(e,t){super(e),this.collectionIdOrName=t}get baseCrudPath(){return this.baseCollectionPath+"/records"}get baseCollectionPath(){return"/api/collections/"+encodeURIComponent(this.collectionIdOrName)}async subscribe(e,t,i){if(!e)throw new Error("Missing topic.");if(!t)throw new Error("Missing subscription callback.");return this.client.realtime.subscribe(this.collectionIdOrName+"/"+e,t,i)}async unsubscribe(e){return e?this.client.realtime.unsubscribe(this.collectionIdOrName+"/"+e):this.client.realtime.unsubscribeByPrefix(this.collectionIdOrName)}async getFullList(e,t){if(typeof e=="number")return super.getFullList(e,t);const i=Object.assign({},e,t);return super.getFullList(i)}async getList(e=1,t=30,i){return super.getList(e,t,i)}async getFirstListItem(e,t){return super.getFirstListItem(e,t)}async getOne(e,t){return super.getOne(e,t)}async create(e,t){return super.create(e,t)}async update(e,t,i){return super.update(e,t,i).then(s=>{var n,o,r;return((n=this.client.authStore.model)==null?void 0:n.id)!==(s==null?void 0:s.id)||((o=this.client.authStore.model)==null?void 0:o.collectionId)!==this.collectionIdOrName&&((r=this.client.authStore.model)==null?void 0:r.collectionName)!==this.collectionIdOrName||this.client.authStore.save(this.client.authStore.token,s),s})}async delete(e,t){return super.delete(e,t).then(i=>{var s,n,o;return!i||((s=this.client.authStore.model)==null?void 0:s.id)!==e||((n=this.client.authStore.model)==null?void 0:n.collectionId)!==this.collectionIdOrName&&((o=this.client.authStore.model)==null?void 0:o.collectionName)!==this.collectionIdOrName||this.client.authStore.clear(),i})}authResponse(e){const t=this.decode((e==null?void 0:e.record)||{});return this.client.authStore.save(e==null?void 0:e.token,t),Object.assign({},e,{token:(e==null?void 0:e.token)||"",record:t})}async listAuthMethods(e){return e=Object.assign({method:"GET"},e),this.client.send(this.baseCollectionPath+"/auth-methods",e).then(t=>Object.assign({},t,{usernamePassword:!!(t!=null&&t.usernamePassword),emailPassword:!!(t!=null&&t.emailPassword),authProviders:Array.isArray(t==null?void 0:t.authProviders)?t==null?void 0:t.authProviders:[]}))}async authWithPassword(e,t,i,s){let n={method:"POST",body:{identity:e,password:t}};return n=O("This form of authWithPassword(usernameOrEmail, pass, body?, query?) is deprecated. Consider replacing it with authWithPassword(usernameOrEmail, pass, options?).",n,i,s),this.client.send(this.baseCollectionPath+"/auth-with-password",n).then(o=>this.authResponse(o))}async authWithOAuth2Code(e,t,i,s,n,o,r){let l={method:"POST",body:{provider:e,code:t,codeVerifier:i,redirectUrl:s,createData:n}};return l=O("This form of authWithOAuth2Code(provider, code, codeVerifier, redirectUrl, createData?, body?, query?) is deprecated. Consider replacing it with authWithOAuth2Code(provider, code, codeVerifier, redirectUrl, createData?, options?).",l,o,r),this.client.send(this.baseCollectionPath+"/auth-with-oauth2",l).then(a=>this.authResponse(a))}authWithOAuth2(...e){if(e.length>1||typeof(e==null?void 0:e[0])=="string")return console.warn("PocketBase: This form of authWithOAuth2() is deprecated and may get removed in the future. Please replace with authWithOAuth2Code() OR use the authWithOAuth2() realtime form as shown in https://pocketbase.io/docs/authentication/#oauth2-integration."),this.authWithOAuth2Code((e==null?void 0:e[0])||"",(e==null?void 0:e[1])||"",(e==null?void 0:e[2])||"",(e==null?void 0:e[3])||"",(e==null?void 0:e[4])||{},(e==null?void 0:e[5])||{},(e==null?void 0:e[6])||{});const t=(e==null?void 0:e[0])||{};let i=null;t.urlCallback||(i=K(void 0));const s=new te(this.client);function n(){i==null||i.close(),s.unsubscribe()}const o={},r=t.requestKey;return r&&(o.requestKey=r),this.listAuthMethods(o).then(l=>{var u;const a=l.authProviders.find(p=>p.name===t.provider);if(!a)throw new I(new Error(`Missing or invalid provider "${t.provider}".`));const h=this.client.buildUrl("/api/oauth2-redirect"),c=r?(u=this.client.cancelControllers)==null?void 0:u[r]:void 0;return c&&(c.signal.onabort=()=>{n()}),new Promise(async(p,m)=>{var T;try{await s.subscribe("@oauth2",async g=>{var C;const w=s.clientId;try{if(!g.state||w!==g.state)throw new Error("State parameters don't match.");if(g.error||!g.code)throw new Error("OAuth2 redirect error or missing code: "+g.error);const S=Object.assign({},t);delete S.provider,delete S.scopes,delete S.createData,delete S.urlCallback,(C=c==null?void 0:c.signal)!=null&&C.onabort&&(c.signal.onabort=null);const $=await this.authWithOAuth2Code(a.name,g.code,a.codeVerifier,h,t.createData,S);p($)}catch(S){m(new I(S))}n()});const v={state:s.clientId};(T=t.scopes)!=null&&T.length&&(v.scope=t.scopes.join(" "));const f=this._replaceQueryParams(a.authUrl+h,v);await(t.urlCallback||function(g){i?i.location.href=g:i=K(g)})(f)}catch(v){n(),m(new I(v))}})}).catch(l=>{throw n(),l})}async authRefresh(e,t){let i={method:"POST"};return i=O("This form of authRefresh(body?, query?) is deprecated. Consider replacing it with authRefresh(options?).",i,e,t),this.client.send(this.baseCollectionPath+"/auth-refresh",i).then(s=>this.authResponse(s))}async requestPasswordReset(e,t,i){let s={method:"POST",body:{email:e}};return s=O("This form of requestPasswordReset(email, body?, query?) is deprecated. Consider replacing it with requestPasswordReset(email, options?).",s,t,i),this.client.send(this.baseCollectionPath+"/request-password-reset",s).then(()=>!0)}async confirmPasswordReset(e,t,i,s,n){let o={method:"POST",body:{token:e,password:t,passwordConfirm:i}};return o=O("This form of confirmPasswordReset(token, password, passwordConfirm, body?, query?) is deprecated. Consider replacing it with confirmPasswordReset(token, password, passwordConfirm, options?).",o,s,n),this.client.send(this.baseCollectionPath+"/confirm-password-reset",o).then(()=>!0)}async requestVerification(e,t,i){let s={method:"POST",body:{email:e}};return s=O("This form of requestVerification(email, body?, query?) is deprecated. Consider replacing it with requestVerification(email, options?).",s,t,i),this.client.send(this.baseCollectionPath+"/request-verification",s).then(()=>!0)}async confirmVerification(e,t,i){let s={method:"POST",body:{token:e}};return s=O("This form of confirmVerification(token, body?, query?) is deprecated. Consider replacing it with confirmVerification(token, options?).",s,t,i),this.client.send(this.baseCollectionPath+"/confirm-verification",s).then(()=>{const n=z(e),o=this.client.authStore.model;return o&&!o.verified&&o.id===n.id&&o.collectionId===n.collectionId&&(o.verified=!0,this.client.authStore.save(this.client.authStore.token,o)),!0})}async requestEmailChange(e,t,i){let s={method:"POST",body:{newEmail:e}};return s=O("This form of requestEmailChange(newEmail, body?, query?) is deprecated. Consider replacing it with requestEmailChange(newEmail, options?).",s,t,i),this.client.send(this.baseCollectionPath+"/request-email-change",s).then(()=>!0)}async confirmEmailChange(e,t,i,s){let n={method:"POST",body:{token:e,password:t}};return n=O("This form of confirmEmailChange(token, password, body?, query?) is deprecated. Consider replacing it with confirmEmailChange(token, password, options?).",n,i,s),this.client.send(this.baseCollectionPath+"/confirm-email-change",n).then(()=>{const o=z(e),r=this.client.authStore.model;return r&&r.id===o.id&&r.collectionId===o.collectionId&&this.client.authStore.clear(),!0})}async listExternalAuths(e,t){return t=Object.assign({method:"GET"},t),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e)+"/external-auths",t)}async unlinkExternalAuth(e,t,i){return i=Object.assign({method:"DELETE"},i),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e)+"/external-auths/"+encodeURIComponent(t),i).then(()=>!0)}_replaceQueryParams(e,t={}){let i=e,s="";e.indexOf("?")>=0&&(i=e.substring(0,e.indexOf("?")),s=e.substring(e.indexOf("?")+1));const n={},o=s.split("&");for(const r of o){if(r=="")continue;const l=r.split("=");n[decodeURIComponent(l[0].replace(/\+/g," "))]=decodeURIComponent((l[1]||"").replace(/\+/g," "))}for(let r in t)t.hasOwnProperty(r)&&(t[r]==null?delete n[r]:n[r]=t[r]);s="";for(let r in n)n.hasOwnProperty(r)&&(s!=""&&(s+="&"),s+=encodeURIComponent(r.replace(/%20/g,"+"))+"="+encodeURIComponent(n[r].replace(/%20/g,"+")));return s!=""?i+"?"+s:i}}function K(d){if(typeof window>"u"||!(window!=null&&window.open))throw new I(new Error("Not in a browser context - please pass a custom urlCallback function."));let e=1024,t=768,i=window.innerWidth,s=window.innerHeight;e=e>i?i:e,t=t>s?s:t;let n=i/2-e/2,o=s/2-t/2;return window.open(d,"popup_window","width="+e+",height="+t+",top="+o+",left="+n+",resizable,menubar=no")}class ge extends j{get baseCrudPath(){return"/api/collections"}async import(e,t=!1,i){return i=Object.assign({method:"PUT",body:{collections:e,deleteMissing:t}},i),this.client.send(this.baseCrudPath+"/import",i).then(()=>!0)}}class be extends A{async getList(e=1,t=30,i){return(i=Object.assign({method:"GET"},i)).query=Object.assign({page:e,perPage:t},i.query),this.client.send("/api/logs",i)}async getOne(e,t){if(!e)throw new I({url:this.client.buildUrl("/api/logs/"),status:404,response:{code:404,message:"Missing required log id.",data:{}}});return t=Object.assign({method:"GET"},t),this.client.send("/api/logs/"+encodeURIComponent(e),t)}async getStats(e){return e=Object.assign({method:"GET"},e),this.client.send("/api/logs/stats",e)}}class ve extends A{async check(e){return e=Object.assign({method:"GET"},e),this.client.send("/api/health",e)}}class we extends A{getUrl(e,t,i={}){if(!t||!(e!=null&&e.id)||!(e!=null&&e.collectionId)&&!(e!=null&&e.collectionName))return"";const s=[];s.push("api"),s.push("files"),s.push(encodeURIComponent(e.collectionId||e.collectionName)),s.push(encodeURIComponent(e.id)),s.push(encodeURIComponent(t));let n=this.client.buildUrl(s.join("/"));if(Object.keys(i).length){i.download===!1&&delete i.download;const o=new URLSearchParams(i);n+=(n.includes("?")?"&":"?")+o}return n}async getToken(e){return e=Object.assign({method:"POST"},e),this.client.send("/api/files/token",e).then(t=>(t==null?void 0:t.token)||"")}}class Se extends A{async getFullList(e){return e=Object.assign({method:"GET"},e),this.client.send("/api/backups",e)}async create(e,t){return t=Object.assign({method:"POST",body:{name:e}},t),this.client.send("/api/backups",t).then(()=>!0)}async upload(e,t){return t=Object.assign({method:"POST",body:e},t),this.client.send("/api/backups/upload",t).then(()=>!0)}async delete(e,t){return t=Object.assign({method:"DELETE"},t),this.client.send(`/api/backups/${encodeURIComponent(e)}`,t).then(()=>!0)}async restore(e,t){return t=Object.assign({method:"POST"},t),this.client.send(`/api/backups/${encodeURIComponent(e)}/restore`,t).then(()=>!0)}getDownloadUrl(e,t){return this.client.buildUrl(`/api/backups/${encodeURIComponent(t)}?token=${encodeURIComponent(e)}`)}}class xe{constructor(e="/",t,i="en-US"){this.cancelControllers={},this.recordServices={},this.enableAutoCancellation=!0,this.baseUrl=e,this.lang=i,this.authStore=t||new ue,this.admins=new pe(this),this.collections=new ge(this),this.files=new we(this),this.logs=new be(this),this.settings=new me(this),this.realtime=new te(this),this.health=new ve(this),this.backups=new Se(this)}collection(e){return this.recordServices[e]||(this.recordServices[e]=new ye(this,e)),this.recordServices[e]}autoCancellation(e){return this.enableAutoCancellation=!!e,this}cancelRequest(e){return this.cancelControllers[e]&&(this.cancelControllers[e].abort(),delete this.cancelControllers[e]),this}cancelAllRequests(){for(let e in this.cancelControllers)this.cancelControllers[e].abort();return this.cancelControllers={},this}filter(e,t){if(!t)return e;for(let i in t){let s=t[i];switch(typeof s){case"boolean":case"number":s=""+s;break;case"string":s="'"+s.replace(/'/g,"\\'")+"'";break;default:s=s===null?"null":s instanceof Date?"'"+s.toISOString().replace("T"," ")+"'":"'"+JSON.stringify(s).replace(/'/g,"\\'")+"'"}e=e.replaceAll("{:"+i+"}",s)}return e}getFileUrl(e,t,i={}){return this.files.getUrl(e,t,i)}buildUrl(e){var i;let t=this.baseUrl;return typeof window>"u"||!window.location||t.startsWith("https://")||t.startsWith("http://")||(t=(i=window.location.origin)!=null&&i.endsWith("/")?window.location.origin.substring(0,window.location.origin.length-1):window.location.origin||"",this.baseUrl.startsWith("/")||(t+=window.location.pathname||"/",t+=t.endsWith("/")?"":"/"),t+=this.baseUrl),e&&(t+=t.endsWith("/")?"":"/",t+=e.startsWith("/")?e.substring(1):e),t}async send(e,t){t=this.initSendOptions(e,t);let i=this.buildUrl(e);if(this.beforeSend){const s=Object.assign({},await this.beforeSend(i,t));s.url!==void 0||s.options!==void 0?(i=s.url||i,t=s.options||t):Object.keys(s).length&&(t=s,console!=null&&console.warn&&console.warn("Deprecated format of beforeSend return: please use `return { url, options }`, instead of `return options`."))}if(t.query!==void 0){const s=this.serializeQueryParams(t.query);s&&(i+=(i.includes("?")?"&":"?")+s),delete t.query}return this.getHeader(t.headers,"Content-Type")=="application/json"&&t.body&&typeof t.body!="string"&&(t.body=JSON.stringify(t.body)),(t.fetch||fetch)(i,t).then(async s=>{let n={};try{n=await s.json()}catch{}if(this.afterSend&&(n=await this.afterSend(s,n)),s.status>=400)throw new I({url:s.url,status:s.status,data:n});return n}).catch(s=>{throw new I(s)})}initSendOptions(e,t){if((t=Object.assign({method:"GET"},t)).body=this.convertToFormDataIfNeeded(t.body),ee(t),t.query=Object.assign({},t.params,t.query),t.requestKey===void 0&&(t.$autoCancel===!1||t.query.$autoCancel===!1?t.requestKey=null:(t.$cancelKey||t.query.$cancelKey)&&(t.requestKey=t.$cancelKey||t.query.$cancelKey)),delete t.$autoCancel,delete t.query.$autoCancel,delete t.$cancelKey,delete t.query.$cancelKey,this.getHeader(t.headers,"Content-Type")!==null||this.isFormData(t.body)||(t.headers=Object.assign({},t.headers,{"Content-Type":"application/json"})),this.getHeader(t.headers,"Accept-Language")===null&&(t.headers=Object.assign({},t.headers,{"Accept-Language":this.lang})),this.authStore.token&&this.getHeader(t.headers,"Authorization")===null&&(t.headers=Object.assign({},t.headers,{Authorization:this.authStore.token})),this.enableAutoCancellation&&t.requestKey!==null){const i=t.requestKey||(t.method||"GET")+e;delete t.requestKey,this.cancelRequest(i);const s=new AbortController;this.cancelControllers[i]=s,t.signal=s.signal}return t}convertToFormDataIfNeeded(e){if(typeof FormData>"u"||e===void 0||typeof e!="object"||e===null||this.isFormData(e)||!this.hasBlobField(e))return e;const t=new FormData;for(const i in e){const s=e[i];if(typeof s!="object"||this.hasBlobField({data:s})){const n=Array.isArray(s)?s:[s];for(let o of n)t.append(i,o)}else{let n={};n[i]=s,t.append("@jsonPayload",JSON.stringify(n))}}return t}hasBlobField(e){for(const t in e){const i=Array.isArray(e[t])?e[t]:[e[t]];for(const s of i)if(typeof Blob<"u"&&s instanceof Blob||typeof File<"u"&&s instanceof File)return!0}return!1}getHeader(e,t){e=e||{},t=t.toLowerCase();for(let i in e)if(i.toLowerCase()==t)return e[i];return null}isFormData(e){return e&&(e.constructor.name==="FormData"||typeof FormData<"u"&&e instanceof FormData)}serializeQueryParams(e){const t=[];for(const i in e){if(e[i]===null)continue;const s=e[i],n=encodeURIComponent(i);if(Array.isArray(s))for(const o of s)t.push(n+"="+encodeURIComponent(o));else s instanceof Date?t.push(n+"="+encodeURIComponent(s.toISOString())):typeof s!==null&&typeof s=="object"?t.push(n+"="+encodeURIComponent(JSON.stringify(s))):t.push(n+"="+encodeURIComponent(s))}return t.join("&")}}const se="http://localhost:8090",y=new xe(se);function L(d){var e;if(!((e=d.message)!=null&&e.includes("autocancelled")||d.status===0))throw d}class ie{constructor(){this.callbacks=[],this.user=null,this.checkAuthStatus(),y.authStore.onChange(()=>{this.checkAuthStatus(),this.notifyCallbacks()})}checkAuthStatus(){this.user=y.authStore.isValid?y.authStore.model:null}subscribe(e){this.callbacks.push(e),e(this.user)}unsubscribe(e){this.callbacks=this.callbacks.filter(t=>t!==e)}notifyCallbacks(){this.callbacks.forEach(e=>e(this.user))}async loginWithDiscord(){try{return await y.collection("users").authWithOAuth2({provider:"discord"})}catch(e){throw console.error("Discord login failed:",e),e}}logout(){y.authStore.clear()}isLoggedIn(){return y.authStore.isValid}getUser(){return this.user}}const k=new ie;class ne{constructor(){this.ws=null,this.callbacks={systems:[],fleets:[],trades:[],tick:[]}}subscribe(e,t){this.callbacks[e]&&this.callbacks[e].push(t)}unsubscribe(e,t){this.callbacks[e]&&(this.callbacks[e]=this.callbacks[e].filter(i=>i!==t))}notifyCallbacks(e,t){this.callbacks[e]&&this.callbacks[e].forEach(i=>i(t))}connectWebSocket(){try{this.ws=new WebSocket(`${se.replace("http","ws")}/api/stream`),this.ws.onopen=()=>{console.log("WebSocket connected"),this.updateConnectionStatus("connected"),y.authStore.isValid&&setTimeout(()=>{this.ws&&this.ws.readyState===WebSocket.OPEN&&this.ws.send(JSON.stringify({type:"auth",token:y.authStore.token}))},100)},this.ws.onmessage=e=>{try{const t=JSON.parse(e.data);this.handleWebSocketMessage(t)}catch(t){console.error("Failed to parse WebSocket message:",t)}},this.ws.onclose=()=>{console.log("WebSocket disconnected"),this.updateConnectionStatus("disconnected"),setTimeout(()=>this.connectWebSocket(),5e3)},this.ws.onerror=e=>{console.error("WebSocket error:",e),this.updateConnectionStatus("error")}}catch(e){console.error("Failed to connect WebSocket:",e),this.updateConnectionStatus("error")}}updateConnectionStatus(e){const t=document.getElementById("ws-status");t&&(t.textContent=e==="connected"?"🟢":e==="error"?"🔴":"🟡",t.title=`WebSocket: ${e}`)}handleWebSocketMessage(e){switch(e.type){case"tick":this.notifyCallbacks("tick",e.payload);break;case"system_update":this.notifyCallbacks("systems",e.payload);break;case"fleet_update":this.notifyCallbacks("fleets",e.payload);break;case"trade_update":this.notifyCallbacks("trades",e.payload);break;default:console.log("Unknown WebSocket message type:",e.type)}}async getSystems(){try{return await y.collection("systems").getFullList({sort:"x,y"})}catch(e){return console.error("Failed to fetch systems:",e),[]}}async getPlayer(e){try{return await y.collection("users").getOne(e,{requestKey:`getPlayer-${e}-${Date.now()}`})}catch(t){return console.error("Failed to fetch player details:",t),null}}async getPlayerCredits(e){try{return(await y.collection("players").getOne(e)).credits}catch(t){return console.error("Failed to fetch player credits:",t),0}}async getUserResources(){var e;try{return(await y.send("/api/user/resources",{method:"GET",requestKey:`getUserResources-${Date.now()}`})).resources}catch(t){return t.status===0&&((e=t.message)!=null&&e.includes("autocancelled"))?(console.debug("User resources request was auto-cancelled (expected behavior)"),null):(console.error("Failed to fetch user resources:",t),{credits:0,food:0,ore:0,fuel:0,metal:0,oil:0,titanium:0,xanium:0})}}async getSystem(e){try{return await y.collection("systems").getOne(e)}catch(t){return console.error("Failed to fetch system:",t),null}}async getFleets(e=null){try{const t=e?`owner_id = "${e}"`:"";return await y.collection("fleets").getFullList({filter:t,sort:"eta"})}catch(t){try{L(t)}catch(i){console.error("Failed to fetch fleets:",i)}return[]}}async getTrades(e=null){try{const t=e?`owner_id = "${e}"`:"";return await y.collection("trade_routes").getFullList({filter:t,sort:"created"})}catch(t){try{L(t)}catch(i){console.error("Failed to fetch trades:",i)}return[]}}async getBuildings(e=null){try{let t="/api/buildings";const i={};return e&&(i.owner_id=e),(await y.send(t,{method:"GET",params:i})).items||[]}catch(t){try{L(t)}catch(i){console.error("Failed to fetch buildings:",i)}return[]}}async getTreaties(e=null){try{return[]}catch(t){try{L(t)}catch(i){console.error("Failed to fetch treaties:",i)}return[]}}async sendFleet(e,t,i){if(!y.authStore.isValid)throw new Error("Not authenticated");try{return await y.send("/api/orders/fleet",{method:"POST",body:JSON.stringify({from_id:e,to_id:t,strength:i}),headers:{"Content-Type":"application/json"}})}catch(s){throw console.error("Failed to send fleet:",s),s}}async queueBuilding(e,t){if(!y.authStore.isValid)throw new Error("Not authenticated");try{return await y.send("/api/orders/build",{method:"POST",body:JSON.stringify({planet_id:e,building_type:t}),headers:{"Content-Type":"application/json"}})}catch(i){throw console.error("Failed to queue building:",i),i}}async createTradeRoute(e,t,i,s){if(!y.authStore.isValid)throw new Error("Not authenticated");try{return await y.send("/api/orders/trade",{method:"POST",body:JSON.stringify({from_id:e,to_id:t,cargo:i,capacity:s}),headers:{"Content-Type":"application/json"}})}catch(n){throw console.error("Failed to create trade route:",n),n}}async proposeTreaty(e,t,i){if(!y.authStore.isValid)throw new Error("Not authenticated");try{return await y.send("/diplomacy",{method:"POST",body:JSON.stringify({player_id:e,type:t,terms:i}),headers:{"Content-Type":"application/json"}})}catch(s){throw console.error("Failed to propose treaty:",s),s}}async getMap(){var e;try{return await y.send("/api/map",{method:"GET"})}catch(t){return(e=t.message)!=null&&e.includes("autocancelled")||console.error("Failed to fetch map:",t),null}}async getStatus(){try{return await y.send("/api/status",{method:"GET"})}catch(e){try{L(e)}catch(t){console.error("Failed to fetch status:",t)}return null}}async getBuildingTypes(){try{return(await y.send("/api/building_types",{method:"GET"})).items||[]}catch(e){try{L(e)}catch(t){console.error("Failed to fetch building types:",t)}return[]}}async getResourceTypes(){try{return(await y.send("/api/resource_types",{method:"GET"})).items||[]}catch(e){try{L(e)}catch(t){console.error("Failed to fetch resource types:",t)}return[]}}}const b=new ne;k.subscribe(d=>{b.ws||b.connectWebSocket()});b.connectWebSocket();const Ce=Object.freeze(Object.defineProperty({__proto__:null,AuthManager:ie,GameDataManager:ne,authManager:k,gameData:b,pb:y},Symbol.toStringTag,{value:"Module"}));class oe{constructor(){this.systems=[],this.fleets=[],this.trades=[],this.treaties=[],this.buildings=[],this.mapData=null,this.selectedSystem=null,this.selectedSystemPlanets=[],this.currentTick=1,this.ticksPerMinute=6,this.buildingTypes=[],this.resourceTypes=[],this.playerResources={credits:0,food:0,ore:0,goods:0,fuel:0},this.creditIncome=0,this.callbacks=[],this.initialized=!1,this.updatingResources=!1,this.updateTimer=null,this.tickRefreshTimer=null,this.pendingUpdate=!1,this.isUpdating=!1,k.subscribe(e=>{e&&!this.initialized?this.initialize():e||this.reset()}),this.loadMapData(),b.subscribe("systems",e=>this.updateSystems(e)),b.subscribe("fleets",e=>this.updateFleets(e)),b.subscribe("trades",e=>this.updateTrades(e)),b.subscribe("tick",e=>this.handleTick(e))}async initialize(){if(!this.initialized)try{await this.loadGameData(),this.initialized=!0}catch(e){console.error("Failed to initialize game state:",e)}}async loadGameData(){var e;try{const t=(e=k.getUser())==null?void 0:e.id,i=await b.getMap();i&&i.systems&&(this.systems=i.systems,this.mapData=i),t&&(this.fleets=await b.getFleets(t),await new Promise(n=>setTimeout(n,50)),this.trades=await b.getTrades(t),await new Promise(n=>setTimeout(n,50)),this.treaties=await b.getTreaties(t),await new Promise(n=>setTimeout(n,50)),this.buildings=await b.getBuildings(t),await new Promise(n=>setTimeout(n,50)));const s=await b.getStatus();s&&(this.currentTick=s.current_tick||1,this.ticksPerMinute=s.ticks_per_minute||6);try{const n=await b.getBuildingTypes();n&&(this.buildingTypes=n)}catch(n){console.warn("Failed to load building types:",n),this.buildingTypes=[]}try{const n=await b.getResourceTypes();n&&(this.resourceTypes=n)}catch(n){console.warn("Failed to load resource types:",n),this.resourceTypes=[]}this.updatePlayerResources(),this.notifyCallbacks()}catch(t){console.error("Failed to load game data:",t)}}async refreshGameData(){if(!this.initialized){await this.initialize();return}await this.loadGameData()}reset(){this.systems=[],this.fleets=[],this.trades=[],this.treaties=[],this.buildings=[],this.mapData=null,this.selectedSystem=null,this.selectedSystemPlanets=[],this.currentTick=1,this.ticksPerMinute=6,this.buildingTypes=[],this.resourceTypes=[],this.playerResources={credits:0,food:0,ore:0,goods:0,fuel:0},this.creditIncome=0,this.initialized=!1,this.notifyCallbacks()}async loadMapData(){try{const e=await b.getMap();e&&e.systems&&(this.systems=e.systems,this.mapData=e,this.notifyCallbacks())}catch(e){console.error("Failed to load map data:",e)}}subscribe(e){this.callbacks.push(e),e(this)}unsubscribe(e){this.callbacks=this.callbacks.filter(t=>t!==e)}notifyCallbacks(){if(!this.isUpdating){if(this.updateTimer){this.pendingUpdate=!0;return}this.updateTimer=setTimeout(()=>{this.updateTimer=null,this.isUpdating=!0;try{this.callbacks.forEach(e=>e(this))}finally{this.isUpdating=!1}this.pendingUpdate&&(this.pendingUpdate=!1,this.notifyCallbacks())},16)}}updateSystems(e){if(Array.isArray(e))this.systems=e;else{const t=this.systems.findIndex(i=>i.id===e.id);t>=0?this.systems[t]=e:this.systems.push(e)}this.updatePlayerResources(),this.notifyCallbacks()}updateFleets(e){if(Array.isArray(e))this.fleets=e;else{const t=this.fleets.findIndex(i=>i.id===e.id);t>=0?this.fleets[t]=e:this.fleets.push(e)}this.notifyCallbacks()}updateTrades(e){if(Array.isArray(e))this.trades=e;else{const t=this.trades.findIndex(i=>i.id===e.id);t>=0?this.trades[t]=e:this.trades.push(e)}this.notifyCallbacks()}handleTick(e){this.currentTick=e.tick||this.currentTick+1,this.tickRefreshTimer&&clearTimeout(this.tickRefreshTimer),this.tickRefreshTimer=setTimeout(()=>{this.refreshGameData()},100)}async updatePlayerResources(){const e=k.getUser();if(!e){this.playerResources={credits:0,food:0,ore:0,goods:0,fuel:0},this.creditIncome=0;return}if(!this.updatingResources){this.updatingResources=!0;try{const t=await b.getUserResources();if(t===null)return;if(!this.mapData||!this.mapData.planets){this.playerResources=t,this.creditIncome=0;return}let i=0,s=0,n=0,o=0,r=0;for(const l of this.mapData.planets)if(l.colonized_by===e.id&&(i+=l.Food||0,s+=l.Ore||0,n+=l.Goods||0,o+=l.Fuel||0,l.Buildings))for(const[a,h]of Object.entries(l.Buildings)){const c=this.buildingTypes.find(u=>u.id===a||u.name&&u.name.toLowerCase()===a.toLowerCase());c&&c.name&&c.name.toLowerCase()==="bank"&&(r+=(h||1)*1)}this.playerResources={credits:t.credits,food:i,ore:s,goods:n,fuel:o},this.creditIncome=r}finally{this.updatingResources=!1}}}getSystemPlanets(e){return!this.mapData||!this.mapData.planets?[]:this.mapData.planets.filter(i=>i.system_id===e)}selectSystem(e){this.selectedSystem&&this.selectedSystem.id===e||(this.selectedSystem=this.systems.find(t=>t.id===e)||null,this.selectedSystem?this.selectedSystemPlanets=this.getSystemPlanets(this.selectedSystem.id):this.selectedSystemPlanets=[],this.notifyCallbacks())}getSelectedSystem(){return this.selectedSystem}getOwnedSystems(){const e=k.getUser();return e?this.systems.filter(t=>t.owner_id===e.id):[]}getPlayerFleets(){const e=k.getUser();return e?this.fleets.filter(t=>t.owner_id===e.id):[]}getPlayerTrades(){const e=k.getUser();return e?this.trades.filter(t=>t.owner_id===e.id):[]}async sendFleet(e,t,i){return await b.sendFleet(e,t,i)}async queueBuilding(e,t){return await b.queueBuilding(e,t)}async createTradeRoute(e,t,i,s){return await b.createTradeRoute(e,t,i,s)}async proposeTreaty(e,t,i){return await b.proposeTreaty(e,t,i)}getPlayerBuildings(){var t;const e=k.getUser();return e?((t=this.buildings)==null?void 0:t.filter(i=>i.owner_id===e.id))||[]:[]}getPlayerBuildingsByType(e){return this.getPlayerBuildings().filter(t=>t.type===e)}}const P=new oe,ke=Object.freeze(Object.defineProperty({__proto__:null,GameState:oe,gameState:P},Symbol.toStringTag,{value:"Module"}));class Te{constructor(e){this.canvas=document.getElementById(e),this.ctx=this.canvas.getContext("2d"),this.systems=[],this.lanes=[],this.fleets=[],this.selectedSystem=null,this.hoveredSystem=null,this.hoveredTradeRoutes=[],this.trades=[],this.currentUserId=null,this.viewX=0,this.viewY=0,this.zoom=1,this.maxZoom=3,this.minZoom=.3,this.colors={background:"#000508",starUnowned:"#4080ff",starPlayerOwned:"#00ffea",starOtherOwned:"#f1a9ff",starEnemy:"#ff6b6b",lane:"rgba(64, 128, 255, 0.2)",laneActive:"rgba(241, 169, 255, 0.6)",fleet:"#8b5cf6",selection:"#f1a9ff",grid:"rgba(255, 255, 255, 0.02)",nebula:"rgba(139, 92, 246, 0.1)",starGlow:"rgba(64, 128, 255, 0.3)"},this.animationFrame=null,this.lastTime=0,this.setupCanvas(),this.setupEventListeners(),this.startRenderLoop()}setupCanvas(){this.resizeCanvas(),window.addEventListener("resize",()=>this.resizeCanvas())}resizeCanvas(){const e=this.canvas.getBoundingClientRect();this.canvas.width=e.width,this.canvas.height=e.height}setupEventListeners(){let e=!1,t=0,i=0;this.canvas.addEventListener("mousedown",s=>{if(s.button===0){const n=this.screenToWorld(s.offsetX,s.offsetY),o=this.getSystemAt(n.x,n.y);if(o){this.selectSystem(o);const r=window.gameState.getSystemPlanets(o.id);this.canvas.dispatchEvent(new CustomEvent("systemSelected",{detail:{system:o,planets:r,screenX:s.offsetX,screenY:s.offsetY},bubbles:!0}))}else this.selectSystem(null),this.canvas.dispatchEvent(new CustomEvent("mapClickedEmpty",{bubbles:!0})),e=!0,t=s.offsetX,i=s.offsetY,this.canvas.style.cursor="grabbing"}}),this.canvas.addEventListener("mousemove",s=>{if(e){const n=s.offsetX-t,o=s.offsetY-i;this.viewX+=n/this.zoom,this.viewY+=o/this.zoom,t=s.offsetX,i=s.offsetY}else{const n=this.screenToWorld(s.offsetX,s.offsetY);this.hoveredSystem=this.getSystemAt(n.x,n.y),this.showTooltip(this.hoveredSystem,s.offsetX,s.offsetY),this.hoveredSystem&&this.trades&&this.trades.length>0?this.hoveredTradeRoutes=this.trades.filter(o=>o.from_id===this.hoveredSystem.id||o.to_id===this.hoveredSystem.id):this.hoveredTradeRoutes=[]}}),this.canvas.addEventListener("mouseup",s=>{s.button===0&&(e=!1,this.canvas.style.cursor="crosshair")}),this.canvas.addEventListener("contextmenu",s=>{s.preventDefault();const n=this.screenToWorld(s.offsetX,s.offsetY),o=this.getSystemAt(n.x,n.y);o&&this.showContextMenu(o,s.offsetX,s.offsetY)}),this.canvas.addEventListener("wheel",s=>{s.preventDefault();const n=s.deltaY>0?.9:1.1,o=Math.max(this.minZoom,Math.min(this.maxZoom,this.zoom*n));if(o!==this.zoom){const r=this.canvas.getBoundingClientRect(),l=s.clientX-r.left,a=s.clientY-r.top,h=this.screenToWorld(l,a);this.zoom=o;const c=this.screenToWorld(l,a);this.viewX+=h.x-c.x,this.viewY+=h.y-c.y}})}screenToWorld(e,t){return{x:(e-this.canvas.width/2)/this.zoom-this.viewX,y:(t-this.canvas.height/2)/this.zoom-this.viewY}}worldToScreen(e,t){return{x:(e+this.viewX)*this.zoom+this.canvas.width/2,y:(t+this.viewY)*this.zoom+this.canvas.height/2}}getSystemAt(e,t){return this.systems.find(s=>{const n=s.x-e,o=s.y-t;return Math.sqrt(n*n+o*o)<=20})}selectSystem(e){if(this.selectedSystem&&e&&this.selectedSystem.id===e.id){this.centerOnSystem(e.id);return}this.selectedSystem=e,e&&this.centerOnSystem(e.id)}showTooltip(e,t,i){const s=document.getElementById("tooltip");if(e&&window.gameState){const n=window.gameState.getSystemPlanets(e.id),o=n.reduce((r,l)=>r+(l.Pop||0),0);s.innerHTML=`
        <div class="font-semibold">${e.name||`System ${e.id.slice(-4)}`}</div>
        <div class="text-xs">
          <div>Position: ${e.x}, ${e.y}</div>
          <div>Population: ${o.toLocaleString()}</div>
          <div>Owner: ${e.owner_name||"Uncolonized"}</div>
          <div>Planets: ${n.length}</div>
        </div>
      `,s.style.left=`${t+10}px`,s.style.top=`${i-10}px`,s.classList.remove("hidden")}else s.classList.add("hidden")}showContextMenu(e,t,i){const s=document.getElementById("context-menu");s.style.left=`${t}px`,s.style.top=`${i}px`,s.classList.remove("hidden"),s.dataset.systemId=e.id;const n=o=>{s.contains(o.target)||(s.classList.add("hidden"),document.removeEventListener("click",n))};setTimeout(()=>document.addEventListener("click",n),0)}startRenderLoop(){const e=t=>{const i=t-this.lastTime;this.lastTime=t,this.clear(),this.drawBackground(),this.drawLanes(),this.drawSystems(),this.drawFleets(i),this.drawUI(),this.animationFrame=requestAnimationFrame(e)};this.animationFrame=requestAnimationFrame(e)}clear(){this.ctx.fillStyle=this.colors.background,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}drawBackground(){this.ctx.globalAlpha=.1;const e=Date.now()*1e-4;for(let r=0;r<3;r++){const l=r*150,a=Math.sin(e+r)*200+l,h=Math.cos(e*.7+r)*150+l,c=300+Math.sin(e*.5+r)*50,u=this.ctx.createRadialGradient(a,h,0,a,h,c);u.addColorStop(0,this.colors.nebula),u.addColorStop(.5,"rgba(64, 128, 255, 0.05)"),u.addColorStop(1,"rgba(0, 0, 0, 0)"),this.ctx.fillStyle=u,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}this.ctx.globalAlpha=1,this.ctx.strokeStyle=this.colors.grid,this.ctx.lineWidth=1,this.ctx.globalAlpha=.15;const t=100,i=Math.floor((-this.viewX-this.canvas.width/2/this.zoom)/t)*t,s=Math.ceil((-this.viewX+this.canvas.width/2/this.zoom)/t)*t,n=Math.floor((-this.viewY-this.canvas.height/2/this.zoom)/t)*t,o=Math.ceil((-this.viewY+this.canvas.height/2/this.zoom)/t)*t;this.ctx.beginPath();for(let r=i;r<=s;r+=t){const l=this.worldToScreen(r,0);this.ctx.moveTo(l.x,0),this.ctx.lineTo(l.x,this.canvas.height)}for(let r=n;r<=o;r+=t){const l=this.worldToScreen(0,r);this.ctx.moveTo(0,l.y),this.ctx.lineTo(this.canvas.width,l.y)}this.ctx.stroke(),this.ctx.globalAlpha=1}drawLanes(){if(!this.trades||this.trades.length===0){this.lanes&&this.lanes.length>0&&(this.ctx.strokeStyle=this.colors.lane,this.ctx.lineWidth=2,this.ctx.globalAlpha=.6,this.lanes.forEach(e=>{const t=this.worldToScreen(e.fromX,e.fromY),i=this.worldToScreen(e.toX,e.toY);this.ctx.beginPath(),this.ctx.moveTo(t.x,t.y),this.ctx.lineTo(i.x,i.y),this.ctx.stroke()}),this.ctx.globalAlpha=1);return}this.ctx.globalAlpha=.7,this.trades.forEach(e=>{const t=this.systems.find(r=>r.id===e.from_id),i=this.systems.find(r=>r.id===e.to_id);if(!t||!i)return;const s=this.worldToScreen(t.x,t.y),n=this.worldToScreen(i.x,i.y);this.hoveredTradeRoutes.some(r=>r.id===e.id)?(this.ctx.strokeStyle=this.colors.laneActive,this.ctx.lineWidth=4,this.ctx.globalAlpha=1):(this.ctx.strokeStyle=this.colors.lane,this.ctx.lineWidth=2,this.ctx.globalAlpha=.6),this.ctx.beginPath(),this.ctx.moveTo(s.x,s.y),this.ctx.lineTo(n.x,n.y),this.ctx.stroke()}),this.ctx.globalAlpha=1}drawSystems(){this.systems.forEach(e=>{const t=this.worldToScreen(e.x,e.y);if(t.x<-50||t.x>this.canvas.width+50||t.y<-50||t.y>this.canvas.height+50)return;let i=1;this.hoveredSystem&&this.hoveredSystem.id===e.id&&(i=1.2);let s;e.owner_id?e.owner_id===this.currentUserId?s=this.colors.starPlayerOwned:s=this.colors.starOtherOwned:s=this.colors.starUnowned;const n=6*this.zoom,o=n*i,r=20*this.zoom*i,l=this.ctx.createRadialGradient(t.x,t.y,0,t.x,t.y,r);l.addColorStop(0,s+"40"),l.addColorStop(.3,s+"20"),l.addColorStop(1,s+"00"),this.ctx.fillStyle=l,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,r,0,Math.PI*2),this.ctx.fill();const a=this.ctx.createRadialGradient(t.x,t.y,0,t.x,t.y,o);if(a.addColorStop(0,"#ffffff"),a.addColorStop(.7,s),a.addColorStop(1,s+"cc"),this.ctx.fillStyle=a,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,o,0,Math.PI*2),this.ctx.fill(),e.owner_id&&this.zoom>.6&&(this.ctx.strokeStyle=this.colors.starOwned,this.ctx.lineWidth=1,this.ctx.globalAlpha=.8,this.ctx.beginPath(),this.ctx.moveTo(t.x-n*1.5,t.y),this.ctx.lineTo(t.x+n*1.5,t.y),this.ctx.moveTo(t.x,t.y-n*1.5),this.ctx.lineTo(t.x,t.y+n*1.5),this.ctx.stroke(),this.ctx.globalAlpha=1),this.selectedSystem&&this.selectedSystem.id===e.id){const c=Date.now()*.005,u=(n+8*this.zoom)*i;this.ctx.strokeStyle=this.colors.selection,this.ctx.lineWidth=3*this.zoom*i,this.ctx.globalAlpha=.9,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,u,0,Math.PI*2),this.ctx.stroke();const p=(n+(6+Math.sin(c)*3)*this.zoom)*i;this.ctx.strokeStyle=this.colors.selection,this.ctx.lineWidth=2*this.zoom*i,this.ctx.globalAlpha=.7+Math.sin(c)*.3,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,p,0,Math.PI*2),this.ctx.stroke(),this.ctx.globalAlpha=1}if(this.zoom>.8){const c=Math.floor(11*this.zoom);this.ctx.font=`${c}px monospace`,this.ctx.textAlign="center";const u=o+5*this.zoom;this.ctx.fillStyle="rgba(0, 0, 0, 0.8)",this.ctx.fillText(e.name||`S${e.id.slice(-3)}`,t.x+1,t.y-u+1),this.ctx.fillStyle="rgba(255, 255, 255, 0.95)",this.ctx.fillText(e.name||`S${e.id.slice(-3)}`,t.x,t.y-u)}let h=0;if(window.gameState&&(h=window.gameState.getSystemPlanets(e.id).reduce((u,p)=>u+(p.Pop||0),0)),h>0&&this.zoom>.5){const c=Math.floor(9*this.zoom);this.ctx.font=`${c}px monospace`,this.ctx.textAlign="center";const u=16*this.zoom,p=12*this.zoom,m=u*i,T=p*i,v=t.y+o+2*this.zoom,f=v+T-3*this.zoom*i;this.ctx.fillStyle="rgba(241, 169, 255, 0.2)",this.ctx.fillRect(t.x-m/2,v,m,T),this.ctx.fillStyle="#f1a9ff",this.ctx.fillText(h.toLocaleString(),t.x,f)}})}drawFleets(e){this.fleets.forEach(t=>{const i=this.systems.find(a=>a.id===t.from_id),s=this.systems.find(a=>a.id===t.to_id);if(!i||!s)return;const n=.5,o=i.x+(s.x-i.x)*n,r=i.y+(s.y-i.y)*n,l=this.worldToScreen(o,r);this.ctx.fillStyle=this.colors.fleet,this.ctx.beginPath(),this.ctx.arc(l.x,l.y,4*this.zoom,0,Math.PI*2),this.ctx.fill(),this.zoom>.7&&(this.ctx.fillStyle="#ffffff",this.ctx.font=`${Math.floor(8*this.zoom)}px monospace`,this.ctx.textAlign="center",this.ctx.fillText(t.strength.toString(),l.x,l.y-8*this.zoom))})}drawUI(){this.ctx.fillStyle="#ffffff",this.ctx.font="12px monospace",this.ctx.textAlign="left",this.ctx.fillText(`Zoom: ${(this.zoom*100).toFixed(0)}%`,10,25);const e=this.screenToWorld(this.canvas.width/2,this.canvas.height/2);this.ctx.fillText(`Center: ${e.x.toFixed(0)}, ${e.y.toFixed(0)}`,10,45)}setSystems(e){console.log("MapRenderer: Setting systems",e.length,"systems"),this.systems=e}setTrades(e){this.trades=e||[]}setLanes(e){this.lanes=e}setFleets(e){this.fleets=e}setCurrentUserId(e){this.currentUserId=e}setSelectedSystem(e){this.selectedSystem=e}centerOnSystem(e){const t=this.systems.find(i=>i.id===e);t&&(this.viewX=-t.x,this.viewY=-t.y)}fitToSystems(){if(this.systems.length===0)return;const e=Math.min(...this.systems.map(c=>c.x)),t=Math.max(...this.systems.map(c=>c.x)),i=Math.min(...this.systems.map(c=>c.y)),s=Math.max(...this.systems.map(c=>c.y)),n=(e+t)/2,o=(i+s)/2;this.viewX=-n,this.viewY=-o;const r=t-e+100,l=s-i+100,a=this.canvas.width/r,h=this.canvas.height/l;this.zoom=Math.min(a,h,this.maxZoom)}destroy(){this.animationFrame&&cancelAnimationFrame(this.animationFrame)}}const Pe="modulepreload",Ee=function(d){return"/"+d},X={},J=function(e,t,i){let s=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const o=document.querySelector("meta[property=csp-nonce]"),r=(o==null?void 0:o.nonce)||(o==null?void 0:o.getAttribute("nonce"));s=Promise.allSettled(t.map(l=>{if(l=Ee(l),l in X)return;X[l]=!0;const a=l.endsWith(".css"),h=a?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${l}"]${h}`))return;const c=document.createElement("link");if(c.rel=a?"stylesheet":Pe,a||(c.as="script"),c.crossOrigin="",c.href=l,r&&c.setAttribute("nonce",r),document.head.appendChild(c),a)return new Promise((u,p)=>{c.addEventListener("load",u),c.addEventListener("error",()=>p(new Error(`Unable to preload CSS for ${l}`)))})}))}function n(o){const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=o,window.dispatchEvent(r),!r.defaultPrevented)throw o}return s.then(o=>{for(const r of o||[])r.status==="rejected"&&n(r.reason);return e().catch(n)})};class Oe{constructor(){this.currentUser=null,this.gameState=null,this.tickTimer=null,this.currentSystemId=null,window.uiController=this,this.expandedView=document.getElementById("expanded-view-container"),this.expandedView?(this.expandedView.classList.add("hidden","floating-panel"),this.expandedView.style.left="-2000px",this.expandedView.style.top="-2000px"):console.error("#expanded-view-container not found during UIController construction")}getPlanetTypeIcon(e){if(!e)return"❓";const t={terrestrial:"🌍","gas giant":"💨","ice giant":"❄️",volcanic:"🌋","ocean world":"🌊",arid:"🏜️",barren:"🏜️",tundra:"🏔️",gaia:"🌸",unknown:"❓"};return t[e.toLowerCase()]||t.unknown}clearExpandedView(){this.expandedView&&(this.expandedView.classList.add("hidden"),this.expandedView.style.left="-2000px",this.expandedView.style.top="-2000px"),this.currentSystemId=null}positionPanel(e,t,i){const s=e.classList.contains("hidden");s&&(e.classList.remove("hidden"),e.style.left="-9999px",e.style.top="-9999px");const n=e.offsetWidth,o=e.offsetHeight,r=window.innerWidth,l=window.innerHeight,a=15;let h=i+a,c=t+a;c+n+a>r&&(c=t-n-a),h+o+a>l&&(h=l-o-a),c<a&&(c=a),h<a&&(h=a),e.style.left=`${c}px`,e.style.top=`${h}px`,s&&e.style.left==="-9999px"&&e.classList.add("hidden")}displaySystemView(e,t,i,s){var p;const n=this.expandedView;if(!n){console.error("#expanded-view-container not found in displaySystemView");return}this.currentSystemId===e.id&&n.classList.contains("hidden"),n.className="floating-panel",this.currentSystemId=e.id;let o=0,r=0,l=0;const a=(p=this.currentUser)==null?void 0:p.id;t&&t.length>0&&t.forEach(m=>{m.colonized_by&&(r++,m.colonized_by===a&&l++),o+=m.Pop||0}),t&&t.length>0&&t.map(m=>{const T=m.name||`Planet ${m.id.slice(-4)}`,v=this.getPlanetTypeIcon(m.planet_type||m.type),f=m.colonized_by===a,E=m.Pop||0,g=m.MaxPopulation||"N/A";let w="";m.colonized_by?f?w='<span class="text-xs text-green-400">✓ Your Colony</span>':w=`<span class="text-xs text-red-400">◆ ${m.colonized_by_name||"Occupied"}</span>`:w='<span class="text-xs text-gray-400">◇ Uncolonized</span>';let C="";return f&&m.Credits!==void 0&&(C=`
            <div class="text-xs text-space-300 mt-1 flex gap-2">
              <span>💰 ${m.Credits||0}</span>
              <span>🧑‍🚀 ${E}/${g}</span>
              <span>😊 ${m.Morale||0}%</span>
            </div>
          `),`
          <li class="mb-2 p-3 bg-space-700 hover:bg-space-600 rounded-md cursor-pointer transition-all duration-200 border border-transparent hover:border-space-500"
              onclick="window.uiController.displayPlanetView(JSON.parse(decodeURIComponent('${encodeURIComponent(JSON.stringify(m))}')))">
            <div class="flex items-start justify-between">
              <div class="flex-1">
                <div class="flex items-center gap-2">
                  <span class="text-2xl">${v}</span>
                  <div>
                    <div class="font-semibold">${T}</div>
                    <div class="text-xs text-space-300">${m.planet_type||m.type||"Unknown"} • Size ${m.size||"N/A"}</div>
                  </div>
                </div>
                ${C}
              </div>
              <div class="text-right">
                ${w}
              </div>
            </div>
          </li>
        `}).join(""),n.innerHTML=`
      <div class="floating-panel-content p-4">
        <div class="flex justify-between items-start mb-4">
          <div>
            <h2 id="system-name" class="text-2xl font-bold text-orange-300"></h2>
              <div class="text-sm text-space-300 mt-1">
                <span id="system-coords" class="mr-3"></span>
                <span id="system-richness"></span>
              </div>
            </div>
            <button onclick="window.uiController.clearExpandedView()"
                    class="btn-icon">×</button>
          </div>

          <div id="system-stats-container" class="mb-4 p-3 bg-space-800 rounded-lg text-sm">
            <div class="grid grid-cols-2 gap-2">
              <div>Owner: <span id="system-owner" class="font-semibold text-space-200"></span></div>
              <div>Planets: <span id="system-planets-count" class="font-semibold text-space-200"></span></div>
              <div>Colonized: <span id="system-colonized-count" class="font-semibold text-space-200"></span></div>
              <div>Your Colonies: <span id="system-player-colonies" class="font-semibold text-space-200"></span></div>
            </div>
            <div id="system-total-population-container" class="mt-2 pt-2 border-t border-space-700" style="display: none;">
              Total Population: <span id="system-total-population" class="font-semibold text-space-200"></span>
            </div>
          </div>

          <div class="flex-1 overflow-hidden flex flex-col">
            <h3 class="text-lg font-semibold mb-2 text-nebula-200">Planets in System</h3>
            <ul id="system-planets-list" class="flex-1 overflow-y-auto pr-2 custom-scrollbar">
            </ul>
          </div>
        </div>
      `,n.querySelector("#system-name").textContent=e.name||`System ${e.id.slice(-4)}`,n.querySelector("#system-coords").textContent=`📍 (${e.x}, ${e.y})`,n.querySelector("#system-richness").textContent=`⭐ Richness: ${e.richness||"Unknown"}`,n.querySelector("#system-owner").textContent=e.owner_name||"Uncontrolled",n.querySelector("#system-planets-count").textContent=(t==null?void 0:t.length)||0,n.querySelector("#system-colonized-count").textContent=r;const h=n.querySelector("#system-player-colonies");h.textContent=l,h.className=`font-semibold ${l>0?"text-green-400":"text-space-200"}`;const c=n.querySelector("#system-total-population-container");o>0?(n.querySelector("#system-total-population").textContent=o.toLocaleString(),c.style.display="block"):c.style.display="none";const u=n.querySelector("#system-planets-list");this.updatePlanetList(u,t,a),n.dataset.viewType="system",n.dataset.currentId=e.id,n.classList.remove("hidden"),i!==void 0&&s!==void 0?this.positionPanel(n,i,s):(n.style.left==="-2000px"||n.style.left==="-9999px")&&(n.style.top="20px",n.style.right="20px",n.style.left="")}updatePlanetList(e,t,i){const s=new Map;if(e.querySelectorAll("li[data-planet-id]").forEach(a=>{s.set(a.dataset.planetId,a)}),!t||t.length===0){e.innerHTML='<div class="text-sm text-space-400">No planets detected in this system.</div>';return}let n=document.activeElement,o=n&&n.closest("li[data-planet-id]")?n.closest("li[data-planet-id]").dataset.planetId:null,r,l;if((n&&n.tagName==="INPUT"||n.tagName==="TEXTAREA")&&(r=n.selectionStart,l=n.selectionEnd),t.forEach(a=>{var S,$;const h=a.id,c=s.get(h)||document.createElement("li");c.dataset.planetId=h;const u=a.name||`Planet ${a.id.slice(-4)}`,p=this.getPlanetTypeIcon(a.planet_type||a.type),m=a.colonized_by===i,T=a.Pop||0,v=a.MaxPopulation||"N/A";let f="";a.colonized_by?m?f='<span class="text-xs text-green-400">✓ Your Colony</span>':f=`<span class="text-xs text-red-400">◆ ${a.colonized_by_name||"Occupied"}</span>`:f='<span class="text-xs text-gray-400">◇ Uncolonized</span>';let E="";m&&a.Credits!==void 0&&(E=`
          <div class="text-xs text-space-300 mt-1 flex gap-2">
            <span>💰 ${a.Credits||0}</span>
            <span>🧑‍🚀 ${T}/${v}</span>
            <span>😊 ${a.Morale||0}%</span>
          </div>
        `),c.className="mb-2 p-3 bg-space-700 hover:bg-space-600 rounded-md transition-all duration-200 border border-transparent hover:border-space-500";let g="";const w=500,C=!a.colonized_by&&this.currentUser&&(($=(S=this.gameState)==null?void 0:S.playerResources)==null?void 0:$.credits)>=w;C?g=`
          <button class="btn btn-success btn-sm py-1 px-2 text-xs mt-2"
                  onclick="event.stopPropagation(); console.log('Colonize button clicked for planet: ${a.id}'); window.uiController.colonizePlanetWrapper('${a.id}');">
            Colonize (${w} Cr)
          </button>
        `:a.colonized_by||(g=`
          <button class="btn btn-disabled btn-sm py-1 px-2 text-xs mt-2" disabled>
            Colonize (${w} Cr)
          </button>
        `),c.innerHTML=`
        <div class="flex items-start justify-between">
          <div class="flex-1 ${m||a.colonized_by||!C?"cursor-pointer":""}"
               onclick="${m||a.colonized_by||!C?`window.uiController.displayPlanetView(JSON.parse(decodeURIComponent('${encodeURIComponent(JSON.stringify(a))}')))`:""}">
            <div class="flex items-center gap-2">
              <span class="text-2xl">${p}</span>
              <div>
                <div class="font-semibold">${u}</div>
                <div class="text-xs text-space-300">${a.planet_type||a.type||"Unknown"} • Size ${a.size||"N/A"}</div>
              </div>
            </div>
            ${E}
          </div>
          <div class="text-right flex flex-col items-end">
            ${f}
            ${g}
          </div>
        </div>
      `,!a.colonized_by&&C?(c.classList.add("cursor-pointer"),c.onclick=B=>{B.target.closest("button")||(console.log("Colonize (list item) clicked for planet: ${planet.id}"),window.uiController.colonizePlanetWrapper(a.id))}):c.onclick=null,s.has(h)||e.appendChild(c),s.delete(h)}),s.forEach(a=>a.remove()),o){const a=e.querySelector(`li[data-planet-id="${o}"]`);if(a){let h=a.querySelector('input, textarea, button, [tabindex="0"]')||a;h.focus(),h.setSelectionRange&&r!==void 0&&l!==void 0&&h.setSelectionRange(r,l)}}}displayPlanetView(e,t,i){var w,C,S,$,B,N,q,D,W;const s=this.expandedView;if(!s){console.error("#expanded-view-container not found in displayPlanetView");return}this.currentSystemId===e.id&&s.dataset.viewType==="planet"&&s.classList.contains("hidden"),s.className="floating-panel",this.currentSystemId=e.id,s.dataset.viewType="planet",s.dataset.currentId=e.id;const n=e.name||`Planet ${e.id.slice(-4)}`,o=this.getPlanetTypeIcon(e.planet_type||e.type),r=e.system_name||this.gameState&&((w=this.gameState.mapData.systems.find(x=>x.id===e.system_id))==null?void 0:w.name)||e.system_id,l=e.MaxPopulation?Math.round((e.Pop||0)/e.MaxPopulation*100):0,a=l>80?"bg-green-500":l>50?"bg-yellow-500":"bg-orange-500";let h='<div class="text-sm text-space-400">No resource data available.</div>';e.Credits!==void 0&&(h=`
        <div class="space-y-3">
          <!-- Population Bar -->
          <div>
            <div class="flex justify-between items-center mb-1">
              <span class="text-sm">🧑‍🚀 Population</span>
              <span class="text-sm font-semibold">${((C=e.Pop)==null?void 0:C.toLocaleString())||0} / ${((S=e.MaxPopulation)==null?void 0:S.toLocaleString())||"N/A"}</span>
            </div>
            <div class="w-full bg-space-700 rounded-full h-2">
              <div class="${a} h-2 rounded-full transition-all duration-300" style="width: ${l}%"></div>
            </div>
          </div>
          
          <!-- Morale Bar -->
          <div>
            <div class="flex justify-between items-center mb-1">
              <span class="text-sm">😊 Morale</span>
              <span class="text-sm font-semibold">${e.Morale||0}%</span>
            </div>
            <div class="w-full bg-space-700 rounded-full h-2">
              <div class="bg-green-500 h-2 rounded-full transition-all duration-300" style="width: ${e.Morale||0}%"></div>
            </div>
          </div>
          
          <!-- Resources Grid -->
          <div class="grid grid-cols-2 gap-3 mt-4 p-3 bg-space-800 rounded-lg">
            <div class="flex items-center gap-2">
              <span class="text-xl">💰</span>
              <div>
                <div class="text-xs text-space-400">Credits</div>
                <div class="font-semibold text-yellow-300">${(($=e.Credits)==null?void 0:$.toLocaleString())||0}</div>
              </div>
            </div>
            <div class="flex items-center gap-2">
              <span class="text-xl">🍞</span>
              <div>
                <div class="text-xs text-space-400">Food</div>
                <div class="font-semibold text-lime-300">${((B=e.Food)==null?void 0:B.toLocaleString())||0}</div>
              </div>
            </div>
            <div class="flex items-center gap-2">
              <span class="text-xl">⛏️</span>
              <div>
                <div class="text-xs text-space-400">Ore</div>
                <div class="font-semibold text-gray-300">${((N=e.Ore)==null?void 0:N.toLocaleString())||0}</div>
              </div>
            </div>
            <div class="flex items-center gap-2">
              <span class="text-xl">📦</span>
              <div>
                <div class="text-xs text-space-400">Goods</div>
                <div class="font-semibold text-orange-300">${((q=e.Goods)==null?void 0:q.toLocaleString())||0}</div>
              </div>
            </div>
            <div class="flex items-center gap-2">
              <span class="text-xl">⛽</span>
              <div>
                <div class="text-xs text-space-400">Fuel</div>
                <div class="font-semibold text-purple-300">${((D=e.Fuel)==null?void 0:D.toLocaleString())||0}</div>
              </div>
            </div>
          </div>
        </div>
      `);let c='<div class="text-sm text-space-400">No buildings constructed.</div>';e.Buildings&&Object.keys(e.Buildings).length>0&&(c=`<ul class="space-y-2">${Object.entries(e.Buildings).map(([U,re])=>{let R=U,_="🏢";if(this.gameState&&this.gameState.buildingTypes){const G=this.gameState.buildingTypes.find(V=>V.id===U||V.name.toLowerCase()===U.toLowerCase());G&&(R=G.name,R.toLowerCase().includes("farm")?_="🌾":R.toLowerCase().includes("mine")?_="⛏️":R.toLowerCase().includes("factory")?_="🏭":R.toLowerCase().includes("bank")?_="🏦":R.toLowerCase().includes("research")&&(_="🔬"))}return`
          <li class="p-3 bg-space-700 rounded-md flex items-center justify-between hover:bg-space-600 transition-colors">
            <div class="flex items-center gap-2">
              <span class="text-xl">${_}</span>
              <span class="font-semibold">${R}</span>
            </div>
            <span class="text-sm text-space-300">Level ${re}</span>
          </li>
        `}).join("")}</ul>`);const u=e.colonized_by&&e.colonized_by!=="",p=u&&e.colonized_by===((W=this.currentUser)==null?void 0:W.id),m=!u&&this.currentUser&&this.gameState&&this.gameState.playerResources&&this.gameState.playerResources.credits>=500;s.innerHTML=`
      <div class="floating-panel-content p-4" data-planet-id="${e.id}">
        <div class="flex justify-between items-start mb-4">
          <div class="flex items-center gap-3">
            <span id="planet-icon" class="text-4xl"></span>
              <div>
                <h2 id="planet-name" class="text-2xl font-bold text-orange-300"></h2>
                <div id="planet-type-size" class="text-sm text-space-300"></div>
              </div>
            </div>
            <button onclick="window.uiController.clearExpandedView()"
                    class="btn-icon">×</button>
          </div>

          <div class="mb-4 p-3 bg-space-800 rounded-lg text-sm">
            <div class="grid grid-cols-2 gap-2">
              <div>System: <span id="planet-system-name" class="font-semibold text-space-200"></span></div>
              <div>Status: <span id="planet-status" class="font-semibold"></span></div>
            </div>
          </div>

          <div id="planet-details-scroll-container" class="flex-1 overflow-y-auto pr-2 custom-scrollbar space-y-4">
            <div id="planet-resources-container" style="display: none;">
              <h3 class="text-lg font-semibold mb-3 text-nebula-200">Resources & Stats</h3>
              <div id="planet-resources-html"></div>
            </div>
            <div id="planet-buildings-container" style="display: none;">
              <h3 class="text-lg font-semibold mb-3 text-nebula-200">Buildings</h3>
              <div id="planet-buildings-html"></div>
            </div>
          </div>

          <div id="planet-actions-container" class="mt-4 space-y-2">
            <!-- Action buttons will be dynamically added here -->
          </div>
        </div>
      `,s.querySelector("#planet-icon").textContent=o,s.querySelector("#planet-name").textContent=n,s.querySelector("#planet-type-size").textContent=`${e.planet_type||e.type||"Unknown Type"} • Size ${e.size||"N/A"}`,s.querySelector("#planet-system-name").textContent=r;const T=s.querySelector("#planet-status");T.textContent=p?"Your Colony":e.colonized_by_name||(u?"Occupied":"Uncolonized"),T.className=`font-semibold ${p?"text-green-400":u?"text-red-400":"text-gray-400"}`;const v=s.querySelector("#planet-resources-container"),f=s.querySelector("#planet-buildings-container");p||e.Credits!==void 0?(s.querySelector("#planet-resources-html").innerHTML=h,v.style.display="block"):v.style.display="none",p?(s.querySelector("#planet-buildings-html").innerHTML=c,f.style.display="block"):f.style.display="none";const E=s.querySelector("#planet-actions-container");if(E.innerHTML="",m){const x=document.createElement("button");x.className="w-full btn btn-success py-3 flex items-center justify-center gap-2",x.innerHTML="<span>🚀</span> Colonize Planet (500 Credits)",x.onclick=()=>window.uiController.colonizePlanetWrapper(e.id),E.appendChild(x)}else if(!u&&this.currentUser&&this.gameState&&this.gameState.playerResources&&this.gameState.playerResources.credits<500){const x=document.createElement("button");x.className="w-full btn btn-disabled py-3 flex items-center justify-center gap-2",x.disabled=!0,x.textContent="Insufficient Credits (Need 500)",E.appendChild(x)}if(p){const x=document.createElement("button");x.className="w-full btn btn-primary py-3 flex items-center justify-center gap-2",x.innerHTML="<span>🏗️</span> Construct Building",x.onclick=()=>window.uiController.showPlanetBuildModal(e),E.appendChild(x)}const g=document.createElement("button");g.className="w-full btn btn-secondary py-3 flex items-center justify-center gap-2",g.textContent="← Back to System",g.onclick=()=>window.uiController.goBackToSystemView(e.system_id),E.appendChild(g),s.classList.remove("hidden"),t!==void 0&&i!==void 0?this.positionPanel(s,t,i):(s.style.left==="-2000px"||s.style.left==="-9999px")&&(s.style.top="20px",s.style.right="20px",s.style.left="")}showPlanetBuildModal(e){var s;if(!this.currentUser){this.showError("Please log in to construct buildings.");return}if(!e||!e.id){this.showError("Invalid planet data provided for construction.");return}const t=(s=this.gameState)==null?void 0:s.buildingTypes;if(!t||t.length===0){console.warn("Building types not available or empty in gameState for showPlanetBuildModal."),this.showModal(`Construct on ${e.name||`Planet ${e.id.slice(-4)}`}`,`<div class="text-space-400">No building types available or data is still loading.</div>
         <button class="w-full mt-2 btn btn-secondary" onclick="window.uiController.hideModal()">Close</button>`);return}const i=t.map(n=>{var a;let o="Cost: ";if(n.cost===void 0)o+="N/A (data missing)";else if(typeof n.cost=="number")o+=`${n.cost} Credits`;else if(typeof n.cost=="object"&&n.cost!==null){const h=(((a=this.gameState)==null?void 0:a.resourceTypes)||[]).reduce((c,u)=>(c[u.id]=u.name,c),{});o+=Object.entries(n.cost).map(([c,u])=>{const p=h[c]||c;return`${u} ${p}`}).join(", "),Object.keys(n.cost).length===0&&(o+="Free")}else o+="N/A";const r=e.id.replace(/'/g,"\\'"),l=n.id.replace(/'/g,"\\'");return`
      <button class="w-full p-3 bg-space-700 hover:bg-space-600 rounded mb-2 text-left"
              onclick="window.gameState.queueBuilding('${r}', '${l}'); window.uiController.hideModal();">
        <div class="font-semibold">${n.name||"Unknown Building"}</div>
        <div class="text-sm text-space-300">${n.description||"No description available."}</div>
        <div class="text-sm text-green-400">${o}</div>
      </button>
    `}).join("");this.showModal(`Construct on ${e.name||`Planet ${e.id.slice(-4)}`}`,`
      <div class="space-y-2 max-h-96 overflow-y-auto">
        ${i.length>0?i:'<div class="text-space-400">No buildings available to construct.</div>'}
      </div>
      <button class="w-full mt-4 btn btn-secondary" onclick="window.uiController.hideModal()">Cancel</button>
    `)}colonizePlanetWrapper(e){if(!this.gameState||!this.gameState.mapData||!this.gameState.mapData.planets){this.showError("Game data not loaded. Cannot colonize.");return}const t=this.gameState.mapData.planets.find(i=>i.id===e);if(!t){this.showError("Planet data not found. Cannot colonize.");return}this.colonizePlanet(t.id)}goBackToSystemView(e){if(!this.gameState||!this.gameState.mapData||!this.gameState.mapData.systems){this.showError("Game data not fully loaded."),this.clearExpandedView();return}const t=this.gameState.mapData.systems.find(i=>i.id===e);if(t){let i=[];this.gameState.mapData.planets&&(i=this.gameState.mapData.planets.filter(s=>Array.isArray(s.system_id)?s.system_id.includes(t.id):s.system_id===t.id)),this.displaySystemView(t,i)}else this.showError("System data not found. Cannot go back."),this.clearExpandedView()}manageColony(e){if(!this.gameState||!this.gameState.mapData||!this.gameState.mapData.planets){this.showError("Game data not loaded. Cannot manage colony.");return}const t=this.gameState.mapData.planets.find(s=>s.id===e);if(!t){this.showError("Planet data not found.");return}const i=this.gameState.mapData.systems.find(s=>s.id===t.system_id);i?this.showBuildModal(i):this.showError("System for this planet not found.")}updateAuthUI(e){this.currentUser=e;const t=document.getElementById("login-btn"),i=document.getElementById("user-info"),s=document.getElementById("username");e?(t.classList.add("hidden"),i.classList.remove("hidden"),s.textContent=e.username):(t.classList.remove("hidden"),i.classList.add("hidden"),s.textContent="")}updateGameUI(e){this.gameState=e,this.updateResourcesUI(e.playerResources),this.updateGameStatusUI(e)}updateResourcesUI(e){var s,n;document.getElementById("credits").textContent=(s=e.credits)==null?void 0:s.toLocaleString();const t=document.getElementById("credit-income");((n=this.gameState)==null?void 0:n.creditIncome)>0?(t.textContent=`(+${this.gameState.creditIncome}/tick)`,t.style.display="inline"):t.style.display="none";const i=document.getElementById("credits-btn");i&&(i.onclick=()=>this.showCreditsBreakdown())}updateGameStatusUI(e){const t=document.getElementById("game-tick-display");if(t){const s=t.textContent,n=`Tick: ${e.currentTick}`;t.textContent=n,s!==n&&s!=="Tick: 0"&&(t.style.animation="none",t.offsetHeight,t.style.animation="flash 0.5s ease-out")}const i=document.getElementById("next-tick-display");if(i&&!this.tickTimer){const s=e.ticksPerMinute||6,n=Math.round(60/s);i.textContent=`Next Tick: (${n}s period)`}}startTickTimer(e){this.tickTimer&&clearInterval(this.tickTimer);const t=document.getElementById("next-tick-display"),i=()=>{const n=e-new Date;if(n<=0){t&&(t.textContent="Next Tick: Processing..."),clearInterval(this.tickTimer),this.tickTimer=null;return}const o=Math.floor(n/6e4),r=Math.floor(n%6e4/1e3);t&&(t.textContent=`Next Tick: ${o}:${r.toString().padStart(2,"0")}`)};i(),this.tickTimer=setInterval(i,1e3)}showModal(e,t){const i=document.getElementById("modal-overlay"),s=document.getElementById("modal-content");s.innerHTML=`
      <div class="flex justify-between items-center mb-4">
        <h2 class="text-xl font-bold">${e}</h2>
        <button id="modal-close" class="text-space-400 hover:text-space-200">&times;</button>
      </div>
      ${t}
    `,i.classList.remove("hidden"),document.getElementById("modal-close").addEventListener("click",()=>{this.hideModal()})}hideModal(){document.getElementById("modal-overlay").classList.add("hidden")}showError(e){this.showModal("Error",`
      <div class="text-red-400 mb-4">${e}</div>
      <button class="w-full btn btn-secondary" onclick="document.getElementById('modal-overlay').classList.add('hidden')">
        OK
      </button>
    `)}showBuildModal(e){var s;const t=(s=this.gameState)==null?void 0:s.buildingTypes;if(!t||t.length===0){console.warn("Building types not available or empty in gameState."),this.showModal(`Build in ${e.name||`System ${e.id.slice(-3)}`}`,'<div class="text-space-400">No buildings available to construct or building types are still loading.</div>');return}const i=t.map(n=>{var r;let o="Cost: ";if(typeof n.cost=="number")o+=`${n.cost} Credits`;else if(typeof n.cost=="object"){const l=(((r=this.gameState)==null?void 0:r.resourceTypes)||[]).reduce((a,h)=>(a[h.id]=h.name,a),{});o+=Object.entries(n.cost).map(([a,h])=>{const c=l[a]||a;return`${h} ${c}`}).join(", ")}else o+="N/A";return`
      <button class="w-full p-3 bg-space-700 hover:bg-space-600 rounded mb-2 text-left"
              onclick="window.gameState.queueBuilding('${e.id}', '${n.id}')">
        <div class="font-semibold">${n.name||"Unknown Building"}</div>
        <div class="text-sm text-space-300">${n.description||"No description available."}</div>
        <div class="text-sm text-green-400">${o}</div>
      </button>
    `}).join("");this.showModal(`Build in ${e.name||`System ${e.id.slice(-3)}`}`,`
      <div class="space-y-2">
        ${i.length>0?i:'<div class="text-space-400">No buildings available to construct.</div>'}
      </div>
    `)}showSendFleetModal(e){var s;const t=((s=this.gameState)==null?void 0:s.getOwnedSystems())||[];if(t.length===0){this.showError("You need to own at least one system to send fleets");return}const i=t.map(n=>`<option value="${n.id}">${n.name||`System ${n.id.slice(-3)}`}</option>`).join("");this.showModal("Send Fleet",`
      <form id="fleet-form" class="space-y-4">
        <div>
          <label class="block text-sm font-medium mb-1">From System:</label>
          <select id="from-system" class="w-full p-2 bg-space-700 border border-space-600 rounded">
            ${i}
          </select>
        </div>
        <div>
          <label class="block text-sm font-medium mb-1">To System:</label>
          <input type="text" id="to-system" value="${e.name||`System ${e.id.slice(-3)}`}"
                 class="w-full p-2 bg-space-700 border border-space-600 rounded" readonly>
          <input type="hidden" id="to-system-id" value="${e.id}">
        </div>
        <div>
          <label class="block text-sm font-medium mb-1">Fleet Strength:</label>
          <input type="number" id="fleet-strength" min="1" max="100" value="10"
                 class="w-full p-2 bg-space-700 border border-space-600 rounded">
        </div>
        <div class="flex space-x-2">
          <button type="submit" class="flex-1 btn btn-danger">
            Send Fleet
          </button>
          <button type="button" onclick="document.getElementById('modal-overlay').classList.add('hidden')"
                  class="flex-1 btn btn-secondary">
            Cancel
          </button>
        </div>
      </form>
    `),document.getElementById("fleet-form").addEventListener("submit",async n=>{n.preventDefault();try{const o=document.getElementById("from-system").value,r=document.getElementById("to-system-id").value,l=parseInt(document.getElementById("fleet-strength").value);await this.gameState.sendFleet(o,r,l),this.hideModal()}catch(o){this.showError(`Failed to send fleet: ${o.message}`)}})}showTradeRouteModal(e){var o;const t=((o=this.gameState)==null?void 0:o.getOwnedSystems())||[];if(t.length===0){this.showError("You need to own at least one system to create trade routes");return}const i=t.map(r=>`<option value="${r.id}">${r.name||`System ${r.id.slice(-3)}`}</option>`).join(""),n=["food","ore","goods","fuel"].map(r=>`<option value="${r}">${r.charAt(0).toUpperCase()+r.slice(1)}</option>`).join("");this.showModal("Create Trade Route",`
      <form id="trade-form" class="space-y-4">
        <div>
          <label class="block text-sm font-medium mb-1">From System:</label>
          <select id="trade-from-system" class="w-full p-2 bg-space-700 border border-space-600 rounded">
            ${i}
          </select>
        </div>
        <div>
          <label class="block text-sm font-medium mb-1">To System:</label>
          <input type="text" value="${e.name||`System ${e.id.slice(-3)}`}"
                 class="w-full p-2 bg-space-700 border border-space-600 rounded" readonly>
          <input type="hidden" id="trade-to-system-id" value="${e.id}">
        </div>
        <div>
          <label class="block text-sm font-medium mb-1">Cargo Type:</label>
          <select id="cargo-type" class="w-full p-2 bg-space-700 border border-space-600 rounded">
            ${n}
          </select>
        </div>
        <div>
          <label class="block text-sm font-medium mb-1">Cargo Capacity:</label>
          <input type="number" id="cargo-capacity" min="1" max="1000" value="100"
                 class="w-full p-2 bg-space-700 border border-space-600 rounded">
        </div>
        <div class="flex space-x-2">
          <button type="submit" class="flex-1 btn btn-success">
            Create Route
          </button>
          <button type="button" onclick="document.getElementById('modal-overlay').classList.add('hidden')"
                  class="flex-1 btn btn-secondary">
            Cancel
          </button>
        </div>
      </form>
    `),document.getElementById("trade-form").addEventListener("submit",async r=>{r.preventDefault();try{const l=document.getElementById("trade-from-system").value,a=document.getElementById("trade-to-system-id").value,h=document.getElementById("cargo-type").value,c=parseInt(document.getElementById("cargo-capacity").value);await this.gameState.createTradeRoute(l,a,h,c),this.hideModal()}catch(l){this.showError(`Failed to create trade route: ${l.message}`)}})}showFleetPanel(){var i;const e=((i=this.gameState)==null?void 0:i.getPlayerFleets())||[],t=e.length>0?e.map(s=>`
      <div class="bg-space-700 p-3 rounded mb-2">
        <div class="font-semibold">Fleet ${s.id.slice(-3)}</div>
        <div class="text-sm text-space-300">
          <div>From: ${s.from_name||s.from_id}</div>
          <div>To: ${s.to_name||s.to_id}</div>
          <div>Strength: ${s.strength}</div>
          <div>ETA: ${s.eta_tick?`Tick ${s.eta_tick}`:"Unknown"}</div>
        </div>
      </div>
    `).join(""):'<div class="text-space-400">No fleets in transit</div>';this.showModal("Your Fleets",t)}showTradePanel(){var i;const e=((i=this.gameState)==null?void 0:i.getPlayerTrades())||[],t=e.length>0?e.map(s=>`
      <div class="bg-space-700 p-3 rounded mb-2">
        <div class="font-semibold">Trade Route ${s.id.slice(-3)}</div>
        <div class="text-sm text-space-300">
          <div>From: ${s.from_name||s.from_id}</div>
          <div>To: ${s.to_name||s.to_id}</div>
          <div>Cargo: ${s.cargo}</div>
          <div>Capacity: ${s.cap}</div>
          <div>ETA: ${s.eta_tick?`Tick ${s.eta_tick}`:"Unknown"}</div>
        </div>
      </div>
    `).join(""):'<div class="text-space-400">No active trade routes</div>';this.showModal("Your Trade Routes",t)}showDiplomacyPanel(){this.showModal("Diplomacy",`
      <div class="text-center text-space-400 py-8">
        Diplomacy features coming soon!
      </div>
    `)}showBuildingsPanel(){var r;const e=((r=this.gameState)==null?void 0:r.getPlayerBuildings())||[],i=e.filter(l=>l.credits_per_tick>0).reduce((l,a)=>l+a.credits_per_tick,0),s=e.reduce((l,a)=>(l[a.type]||(l[a.type]=[]),l[a.type].push(a),l),{}),n={};if(this.gameState&&this.gameState.buildingTypes)for(const l of this.gameState.buildingTypes)n[l.id]=l.name||l.id;else console.warn("Building types not available in gameState for building panel.");const o=Object.entries(s).map(([l,a])=>`
      <div class="mb-4">
        <h3 class="text-lg font-semibold text-plasma-300 mb-2">${n[l]||l} (${a.length})</h3>
        <div class="space-y-2">
          ${a.map(h=>`
            <div class="bg-space-700 p-3 rounded">
              <div class="font-semibold text-nebula-300">${h.name||`${n[h.type]||h.type} ${h.id.slice(-3)}`}</div>
              <div class="text-sm text-space-300">
                <div>System: ${h.system_name||h.system_id}</div>
                ${h.credits_per_tick>0?`<div class="text-nebula-300">Income: ${h.credits_per_tick} credits/tick</div>`:""}
                <div class="text-xs ${h.active!==!1?"text-green-400":"text-red-400"}">
                  ${h.active!==!1?"Active":"Inactive"}
                </div>
              </div>
            </div>
          `).join("")}
        </div>
      </div>
    `).join("");this.showModal("Buildings Overview",`
      ${i>0?`
        <div class="mb-4 p-3 bg-space-800 rounded">
          <div class="text-lg font-semibold text-plasma-300">Credit Income: ${i} credits/tick</div>
          <div class="text-sm text-space-400">${i*6} credits/minute • ${i*360} credits/hour</div>
        </div>
      `:""}

      ${o||'<div class="text-space-400 text-center py-8">No buildings constructed</div>'}

      <div class="mt-4 text-xs text-space-400 border-t border-space-600 pt-2">
        💡 Build structures at your systems to improve production and defense
      </div>
    `)}showColonizeModal(e){if(!this.currentUser){this.showError("Please log in to colonize planets");return}fetch(`http://localhost:8090/api/planets?system_id=${e.id}`).then(t=>t.json()).then(t=>{const i=t.items||[];if(i.length===0){this.showError("No planets found in this system");return}const s=i.map(n=>{const o=n.colonized_by!=null&&n.colonized_by!=="",r=n.type||"Unknown";return`
            <div class="p-3 bg-space-700 rounded mb-2 ${o?"opacity-50":"hover:bg-space-600 cursor-pointer"}"
                 ${o?"":`onclick="window.uiController.colonizePlanet('${n.id}')"`}>
              <div class="font-semibold">${n.name}</div>
              <div class="text-sm text-space-300">Type: ${r}</div>
              <div class="text-sm text-space-300">Size: ${n.size}</div>
              ${o?'<div class="text-sm text-red-400">Already colonized</div>':'<div class="text-sm text-emerald-400">Available for colonization</div>'}
            </div>
          `}).join("");this.showModal(`Colonize Planet in ${e.name||`System ${e.id.slice(-3)}`}`,`
          <div class="space-y-2">
            <div class="text-sm text-space-300 mb-4">
              Select a planet to establish a new colony:
            </div>
            ${s}
          </div>
        `),window.uiController=this}).catch(t=>{console.error("Error fetching planets:",t),this.showError("Failed to load planets in this system")})}async colonizePlanet(e){try{const{pb:t}=await J(async()=>{const{pb:n}=await Promise.resolve().then(()=>Ce);return{pb:n}},void 0);if(console.log("Auth token:",t.authStore.token?"Present":"Missing"),console.log("User logged in:",t.authStore.isValid),console.log("Current user:",t.authStore.model),!t.authStore.isValid){this.showError("Please log in first to colonize planets");return}const i=await fetch(`${t.baseUrl}/api/orders/colonize`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:t.authStore.token},body:JSON.stringify({planet_id:e})}),s=await i.json();if(i.ok&&s.success){this.hideModal(),this.showSuccessMessage("Planet colonized successfully! Your new colony has been established.");const{gameState:n}=await J(async()=>{const{gameState:o}=await Promise.resolve().then(()=>ke);return{gameState:o}},void 0);n.refreshGameData()}else throw new Error(s.error||s.message||"Failed to colonize planet")}catch(t){console.error("Colonization error:",t),this.showError(`Failed to colonize planet: ${t.message}`)}}showSuccessMessage(e){this.showModal("Success",`
      <div class="text-emerald-400 mb-4">${e}</div>
      <button class="w-full btn btn-secondary" onclick="document.getElementById('modal-overlay').classList.add('hidden')">
        OK
      </button>
    `)}showCreditsBreakdown(){var o,r,l;if(!this.currentUser){this.showError("Please log in to view credit breakdown");return}const t=(((o=this.gameState)==null?void 0:o.getPlayerBuildings())||[]).filter(a=>{var c,u,p;return((p=(u=(c=this.gameState)==null?void 0:c.buildingTypes)==null?void 0:u.find(m=>m.id===a.type))==null?void 0:p.name)==="crypto_server"});let i=((l=(r=this.gameState)==null?void 0:r.playerResources)==null?void 0:l.credits)||0,s=0;t.forEach(a=>{a.credits_per_tick&&(s+=a.credits_per_tick)});const n=t.length>0?t.map(a=>{var u;const h=a.system_name||`System ${(u=a.system_id)==null?void 0:u.slice(-3)}`;a.stored_credits;const c=a.credits_per_tick||1;return`
            <div class="bg-space-700 p-3 rounded mb-2">
              <div class="flex justify-between items-center">
                <div>
                  <div class="font-semibold text-nebula-300">Crypto Server</div>
                  <div class="text-sm text-space-300">Location: ${h}</div>
                </div>
                <div class="text-right">
                  <div class="text-nebula-300">+${c}/tick</div>
                  <div class="text-xs text-space-400">Level ${a.level||1}</div>
                </div>
              </div>
            </div>
          `}).join(""):'<div class="text-space-400 text-center py-4">No crypto servers found</div>';this.showModal('<span class="flex items-center gap-2"><span class="material-icons">account_balance_wallet</span>Credits Breakdown</span>',`
          <div class="space-y-4">
            <div class="bg-space-800 p-4 rounded-lg">
              <div class="grid grid-cols-2 gap-4 text-center">
                <div>
                  <div class="text-2xl font-bold text-nebula-300">${i.toLocaleString()}</div>
                  <div class="text-sm text-space-400">Total Credits</div>
                </div>
                <div>
                  <div class="text-2xl font-bold text-plasma-300">+${s}</div>
                  <div class="text-sm text-space-400">Per Tick</div>
                </div>
              </div>
            </div>
          
            <div>
              <h3 class="text-lg font-semibold mb-3 text-nebula-200">Credit Sources</h3>
              <div class="max-h-60 overflow-y-auto custom-scrollbar">
                ${n}
              </div>
            </div>

            ${t.length===0?`
              <div class="bg-amber-900/20 border border-amber-600/30 p-3 rounded">
                <div class="text-amber-300 text-sm">
                  💡 <strong>Tip:</strong> Build Crypto Servers on your planets to generate credits over time!
                </div>
              </div>
            `:""}
          </div>
        
          <button class="w-full btn btn-secondary mt-4" onclick="document.getElementById('modal-overlay').classList.add('hidden')">
            Close
          </button>
        `)}}const Ie=new Oe;window.gameState=P;window.uiController=Ie;class $e{constructor(){this.mapRenderer=null,this.init()}async init(){console.log("Initializing Xan Nation..."),this.uiController=window.uiController,this.mapRenderer=new Te("game-canvas"),k.subscribe(e=>{this.handleAuthChange(e)}),P.subscribe(e=>{this.handleGameStateChange(e)}),this.setupEventListeners(),console.log("Xandaris initialized")}handleAuthChange(e){this.uiController.updateAuthUI(e),e?console.log("User logged in:",e.username):console.log("User logged out")}handleGameStateChange(e){var t,i;this.mapRenderer&&(this.mapRenderer.setSystems(e.systems),this.mapRenderer.setFleets(e.fleets),this.mapRenderer.setTrades(e.trades),((t=this.mapRenderer.selectedSystem)==null?void 0:t.id)!==((i=e.selectedSystem)==null?void 0:i.id)&&this.mapRenderer.setSelectedSystem(e.selectedSystem),e.mapData&&e.mapData.lanes&&this.mapRenderer.setLanes(e.mapData.lanes),e.systems.length>0&&!this.mapRenderer.hasInitialFit&&(this.mapRenderer.fitToSystems(),this.mapRenderer.hasInitialFit=!0)),this.uiController.updateGameUI(e)}setupEventListeners(){const e=document.getElementById("game-canvas");e.addEventListener("systemSelected",s=>{const n=s.detail.system,o=s.detail.planets;(!P.selectedSystem||P.selectedSystem.id!==n.id)&&P.selectSystem(n.id),this.uiController.displaySystemView(n,o)});const t=document.getElementById("context-menu");t.addEventListener("click",s=>{const n=s.target.dataset.action,o=t.dataset.systemId;n&&o&&(this.handleContextMenuAction(n,o),t.classList.add("hidden"))}),e.addEventListener("mouseleave",()=>{document.getElementById("tooltip").classList.add("hidden")}),document.getElementById("fleet-btn").addEventListener("click",()=>{this.uiController.showFleetPanel()}),document.getElementById("trade-btn").addEventListener("click",()=>{this.uiController.showTradePanel()}),document.getElementById("diplo-btn").addEventListener("click",()=>{this.uiController.showDiplomacyPanel()}),document.getElementById("buildings-btn").addEventListener("click",()=>{this.uiController.showBuildingsPanel()}),document.getElementById("login-btn").addEventListener("click",()=>{this.handleLogin()}),document.getElementById("logout-btn").addEventListener("click",()=>{this.handleLogout()}),document.addEventListener("keydown",s=>{this.handleKeyboardInput(s)});const i=document.getElementById("modal-overlay");i.addEventListener("click",s=>{s.target===i&&this.uiController.hideModal()})}async handleLogin(){try{await k.loginWithDiscord()}catch(e){console.error("Login failed:",e),this.uiController.showError("Login failed. Please try again.")}}handleLogout(){k.logout()}handleContextMenuAction(e,t){const i=P.systems.find(s=>s.id===t);if(i)switch(e){case"view":P.selectSystem(t),this.mapRenderer.centerOnSystem(t);break;case"fleet":this.uiController.showSendFleetModal(i);break;case"trade":this.uiController.showTradeRouteModal(i);break;case"colonize":this.uiController.showColonizeModal(i);break}}handleBuildAction(){const e=P.getSelectedSystem();if(!e){this.uiController.showError("Please select a system first");return}if(!k.isLoggedIn()){this.uiController.showError("Please log in first");return}this.uiController.showBuildModal(e)}handleSendFleetAction(){const e=P.getSelectedSystem();if(!e){this.uiController.showError("Please select a system first");return}if(!k.isLoggedIn()){this.uiController.showError("Please log in first");return}this.uiController.showSendFleetModal(e)}handleTradeRouteAction(){const e=P.getSelectedSystem();if(!e){this.uiController.showError("Please select a system first");return}if(!k.isLoggedIn()){this.uiController.showError("Please log in first");return}this.uiController.showTradeRouteModal(e)}handleColonizeAction(){const e=P.getSelectedSystem();if(!e){this.uiController.showError("Please select a system first");return}if(!k.isLoggedIn()){this.uiController.showError("Please log in first");return}this.uiController.showColonizeModal(e)}handleKeyboardInput(e){if(!(e.target.tagName==="INPUT"||e.target.tagName==="TEXTAREA"))switch(e.key.toLowerCase()){case"escape":this.uiController.hideModal(),document.getElementById("context-menu").classList.add("hidden");break;case"f":this.handleSendFleetAction();break;case"t":this.handleTradeRouteAction();break;case"b":this.handleBuildAction();break;case"c":P.getSelectedSystem()&&this.mapRenderer.centerOnSystem(P.getSelectedSystem().id);break;case"o":this.handleColonizeAction();break;case"h":this.mapRenderer.fitToSystems();break}}}new $e;
