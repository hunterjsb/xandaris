(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();class I extends Error{constructor(e){var t,i,s,n;super("ClientResponseError"),this.url="",this.status=0,this.response={},this.isAbort=!1,this.originalError=null,Object.setPrototypeOf(this,I.prototype),e!==null&&typeof e=="object"&&(this.url=typeof e.url=="string"?e.url:"",this.status=typeof e.status=="number"?e.status:0,this.isAbort=!!e.isAbort,this.originalError=e.originalError,e.response!==null&&typeof e.response=="object"?this.response=e.response:e.data!==null&&typeof e.data=="object"?this.response=e.data:this.response={}),this.originalError||e instanceof I||(this.originalError=e),typeof DOMException<"u"&&e instanceof DOMException&&(this.isAbort=!0),this.name="ClientResponseError "+this.status,this.message=(t=this.response)==null?void 0:t.message,this.message||(this.isAbort?this.message="The request was autocancelled. You can find more info in https://github.com/pocketbase/js-sdk#auto-cancellation.":(n=(s=(i=this.originalError)==null?void 0:i.cause)==null?void 0:s.message)!=null&&n.includes("ECONNREFUSED ::1")?this.message="Failed to connect to the PocketBase server. Try changing the SDK URL from localhost to 127.0.0.1 (https://github.com/pocketbase/js-sdk/issues/21).":this.message="Something went wrong while processing your request.")}get data(){return this.response}toJSON(){return{...this}}}const q=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;function xe(p,e){const t={};if(typeof p!="string")return t;const i=Object.assign({},{}).decode||ve;let s=0;for(;s<p.length;){const n=p.indexOf("=",s);if(n===-1)break;let o=p.indexOf(";",s);if(o===-1)o=p.length;else if(o<n){s=p.lastIndexOf(";",n-1)+1;continue}const r=p.slice(s,n).trim();if(t[r]===void 0){let a=p.slice(n+1,o).trim();a.charCodeAt(0)===34&&(a=a.slice(1,-1));try{t[r]=i(a)}catch{t[r]=a}}s=o+1}return t}function ne(p,e,t){const i=Object.assign({},t||{}),s=i.encode||Se;if(!q.test(p))throw new TypeError("argument name is invalid");const n=s(e);if(n&&!q.test(n))throw new TypeError("argument val is invalid");let o=p+"="+n;if(i.maxAge!=null){const r=i.maxAge-0;if(isNaN(r)||!isFinite(r))throw new TypeError("option maxAge is invalid");o+="; Max-Age="+Math.floor(r)}if(i.domain){if(!q.test(i.domain))throw new TypeError("option domain is invalid");o+="; Domain="+i.domain}if(i.path){if(!q.test(i.path))throw new TypeError("option path is invalid");o+="; Path="+i.path}if(i.expires){if(!function(a){return Object.prototype.toString.call(a)==="[object Date]"||a instanceof Date}(i.expires)||isNaN(i.expires.valueOf()))throw new TypeError("option expires is invalid");o+="; Expires="+i.expires.toUTCString()}if(i.httpOnly&&(o+="; HttpOnly"),i.secure&&(o+="; Secure"),i.priority)switch(typeof i.priority=="string"?i.priority.toLowerCase():i.priority){case"low":o+="; Priority=Low";break;case"medium":o+="; Priority=Medium";break;case"high":o+="; Priority=High";break;default:throw new TypeError("option priority is invalid")}if(i.sameSite)switch(typeof i.sameSite=="string"?i.sameSite.toLowerCase():i.sameSite){case!0:o+="; SameSite=Strict";break;case"lax":o+="; SameSite=Lax";break;case"strict":o+="; SameSite=Strict";break;case"none":o+="; SameSite=None";break;default:throw new TypeError("option sameSite is invalid")}return o}function ve(p){return p.indexOf("%")!==-1?decodeURIComponent(p):p}function Se(p){return encodeURIComponent(p)}const Ce=typeof navigator<"u"&&navigator.product==="ReactNative"||typeof global<"u"&&global.HermesInternal;let ce;function D(p){if(p)try{const e=decodeURIComponent(ce(p.split(".")[1]).split("").map(function(t){return"%"+("00"+t.charCodeAt(0).toString(16)).slice(-2)}).join(""));return JSON.parse(e)||{}}catch{}return{}}function de(p,e=0){let t=D(p);return!(Object.keys(t).length>0&&(!t.exp||t.exp-e>Date.now()/1e3))}ce=typeof atob!="function"||Ce?p=>{let e=String(p).replace(/=+$/,"");if(e.length%4==1)throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");for(var t,i,s=0,n=0,o="";i=e.charAt(n++);~i&&(t=s%4?64*t+i:i,s++%4)?o+=String.fromCharCode(255&t>>(-2*s&6)):0)i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(i);return o}:atob;const oe="pb_auth";class Te{constructor(){this.baseToken="",this.baseModel=null,this._onChangeCallbacks=[]}get token(){return this.baseToken}get model(){return this.baseModel}get isValid(){return!de(this.token)}get isAdmin(){return D(this.token).type==="admin"}get isAuthRecord(){return D(this.token).type==="authRecord"}save(e,t){this.baseToken=e||"",this.baseModel=t||null,this.triggerChange()}clear(){this.baseToken="",this.baseModel=null,this.triggerChange()}loadFromCookie(e,t=oe){const i=xe(e||"")[t]||"";let s={};try{s=JSON.parse(i),(typeof s===null||typeof s!="object"||Array.isArray(s))&&(s={})}catch{}this.save(s.token||"",s.model||null)}exportToCookie(e,t=oe){var a,l;const i={secure:!0,sameSite:!0,httpOnly:!0,path:"/"},s=D(this.token);i.expires=s!=null&&s.exp?new Date(1e3*s.exp):new Date("1970-01-01"),e=Object.assign({},i,e);const n={token:this.token,model:this.model?JSON.parse(JSON.stringify(this.model)):null};let o=ne(t,JSON.stringify(n),e);const r=typeof Blob<"u"?new Blob([o]).size:o.length;if(n.model&&r>4096){n.model={id:(a=n==null?void 0:n.model)==null?void 0:a.id,email:(l=n==null?void 0:n.model)==null?void 0:l.email};const c=["collectionId","username","verified"];for(const h in this.model)c.includes(h)&&(n.model[h]=this.model[h]);o=ne(t,JSON.stringify(n),e)}return o}onChange(e,t=!1){return this._onChangeCallbacks.push(e),t&&e(this.token,this.model),()=>{for(let i=this._onChangeCallbacks.length-1;i>=0;i--)if(this._onChangeCallbacks[i]==e)return delete this._onChangeCallbacks[i],void this._onChangeCallbacks.splice(i,1)}}triggerChange(){for(const e of this._onChangeCallbacks)e&&e(this.token,this.model)}}class ke extends Te{constructor(e="pocketbase_auth"){super(),this.storageFallback={},this.storageKey=e,this._bindStorageEvent()}get token(){return(this._storageGet(this.storageKey)||{}).token||""}get model(){return(this._storageGet(this.storageKey)||{}).model||null}save(e,t){this._storageSet(this.storageKey,{token:e,model:t}),super.save(e,t)}clear(){this._storageRemove(this.storageKey),super.clear()}_storageGet(e){if(typeof window<"u"&&(window!=null&&window.localStorage)){const t=window.localStorage.getItem(e)||"";try{return JSON.parse(t)}catch{return t}}return this.storageFallback[e]}_storageSet(e,t){if(typeof window<"u"&&(window!=null&&window.localStorage)){let i=t;typeof t!="string"&&(i=JSON.stringify(t)),window.localStorage.setItem(e,i)}else this.storageFallback[e]=t}_storageRemove(e){var t;typeof window<"u"&&(window!=null&&window.localStorage)&&((t=window.localStorage)==null||t.removeItem(e)),delete this.storageFallback[e]}_bindStorageEvent(){typeof window<"u"&&(window!=null&&window.localStorage)&&window.addEventListener&&window.addEventListener("storage",e=>{if(e.key!=this.storageKey)return;const t=this._storageGet(this.storageKey)||{};super.save(t.token||"",t.model||null)})}}class B{constructor(e){this.client=e}}class Pe extends B{async getAll(e){return e=Object.assign({method:"GET"},e),this.client.send("/api/settings",e)}async update(e,t){return t=Object.assign({method:"PATCH",body:e},t),this.client.send("/api/settings",t)}async testS3(e="storage",t){return t=Object.assign({method:"POST",body:{filesystem:e}},t),this.client.send("/api/settings/test/s3",t).then(()=>!0)}async testEmail(e,t,i){return i=Object.assign({method:"POST",body:{email:e,template:t}},i),this.client.send("/api/settings/test/email",i).then(()=>!0)}async generateAppleClientSecret(e,t,i,s,n,o){return o=Object.assign({method:"POST",body:{clientId:e,teamId:t,keyId:i,privateKey:s,duration:n}},o),this.client.send("/api/settings/apple/generate-client-secret",o)}}class V extends B{decode(e){return e}async getFullList(e,t){if(typeof e=="number")return this._getFullList(e,t);let i=500;return(t=Object.assign({},e,t)).batch&&(i=t.batch,delete t.batch),this._getFullList(i,t)}async getList(e=1,t=30,i){return(i=Object.assign({method:"GET"},i)).query=Object.assign({page:e,perPage:t},i.query),this.client.send(this.baseCrudPath,i).then(s=>{var n;return s.items=((n=s.items)==null?void 0:n.map(o=>this.decode(o)))||[],s})}async getFirstListItem(e,t){return(t=Object.assign({requestKey:"one_by_filter_"+this.baseCrudPath+"_"+e},t)).query=Object.assign({filter:e,skipTotal:1},t.query),this.getList(1,1,t).then(i=>{var s;if(!((s=i==null?void 0:i.items)!=null&&s.length))throw new I({status:404,response:{code:404,message:"The requested resource wasn't found.",data:{}}});return i.items[0]})}async getOne(e,t){if(!e)throw new I({url:this.client.buildUrl(this.baseCrudPath+"/"),status:404,response:{code:404,message:"Missing required record id.",data:{}}});return t=Object.assign({method:"GET"},t),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e),t).then(i=>this.decode(i))}async create(e,t){return t=Object.assign({method:"POST",body:e},t),this.client.send(this.baseCrudPath,t).then(i=>this.decode(i))}async update(e,t,i){return i=Object.assign({method:"PATCH",body:t},i),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e),i).then(s=>this.decode(s))}async delete(e,t){return t=Object.assign({method:"DELETE"},t),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e),t).then(()=>!0)}_getFullList(e=500,t){(t=t||{}).query=Object.assign({skipTotal:1},t.query);let i=[],s=async n=>this.getList(n,e||500,t).then(o=>{const r=o.items;return i=i.concat(r),r.length==o.perPage?s(n+1):i});return s(1)}}function R(p,e,t,i){const s=i!==void 0;return s||t!==void 0?s?(console.warn(p),e.body=Object.assign({},e.body,t),e.query=Object.assign({},e.query,i),e):Object.assign(e,t):e}function W(p){var e;(e=p._resetAutoRefresh)==null||e.call(p)}class Ee extends V{get baseCrudPath(){return"/api/admins"}async update(e,t,i){return super.update(e,t,i).then(s=>{var n,o;return((n=this.client.authStore.model)==null?void 0:n.id)===s.id&&((o=this.client.authStore.model)==null?void 0:o.collectionId)===void 0&&this.client.authStore.save(this.client.authStore.token,s),s})}async delete(e,t){return super.delete(e,t).then(i=>{var s,n;return i&&((s=this.client.authStore.model)==null?void 0:s.id)===e&&((n=this.client.authStore.model)==null?void 0:n.collectionId)===void 0&&this.client.authStore.clear(),i})}authResponse(e){const t=this.decode((e==null?void 0:e.admin)||{});return e!=null&&e.token&&(e!=null&&e.admin)&&this.client.authStore.save(e.token,t),Object.assign({},e,{token:(e==null?void 0:e.token)||"",admin:t})}async authWithPassword(e,t,i,s){let n={method:"POST",body:{identity:e,password:t}};n=R("This form of authWithPassword(email, pass, body?, query?) is deprecated. Consider replacing it with authWithPassword(email, pass, options?).",n,i,s);const o=n.autoRefreshThreshold;delete n.autoRefreshThreshold,n.autoRefresh||W(this.client);let r=await this.client.send(this.baseCrudPath+"/auth-with-password",n);return r=this.authResponse(r),o&&function(l,c,h,d){W(l);const u=l.beforeSend,m=l.authStore.model,f=l.authStore.onChange((g,y)=>{(!g||(y==null?void 0:y.id)!=(m==null?void 0:m.id)||(y!=null&&y.collectionId||m!=null&&m.collectionId)&&(y==null?void 0:y.collectionId)!=(m==null?void 0:m.collectionId))&&W(l)});l._resetAutoRefresh=function(){f(),l.beforeSend=u,delete l._resetAutoRefresh},l.beforeSend=async(g,y)=>{var S;const x=l.authStore.token;if((S=y.query)!=null&&S.autoRefresh)return u?u(g,y):{url:g,sendOptions:y};let b=l.authStore.isValid;if(b&&de(l.authStore.token,c))try{await h()}catch{b=!1}b||await d();const T=y.headers||{};for(let v in T)if(v.toLowerCase()=="authorization"&&x==T[v]&&l.authStore.token){T[v]=l.authStore.token;break}return y.headers=T,u?u(g,y):{url:g,sendOptions:y}}}(this.client,o,()=>this.authRefresh({autoRefresh:!0}),()=>this.authWithPassword(e,t,Object.assign({autoRefresh:!0},n))),r}async authRefresh(e,t){let i={method:"POST"};return i=R("This form of authRefresh(body?, query?) is deprecated. Consider replacing it with authRefresh(options?).",i,e,t),this.client.send(this.baseCrudPath+"/auth-refresh",i).then(this.authResponse.bind(this))}async requestPasswordReset(e,t,i){let s={method:"POST",body:{email:e}};return s=R("This form of requestPasswordReset(email, body?, query?) is deprecated. Consider replacing it with requestPasswordReset(email, options?).",s,t,i),this.client.send(this.baseCrudPath+"/request-password-reset",s).then(()=>!0)}async confirmPasswordReset(e,t,i,s,n){let o={method:"POST",body:{token:e,password:t,passwordConfirm:i}};return o=R("This form of confirmPasswordReset(resetToken, password, passwordConfirm, body?, query?) is deprecated. Consider replacing it with confirmPasswordReset(resetToken, password, passwordConfirm, options?).",o,s,n),this.client.send(this.baseCrudPath+"/confirm-password-reset",o).then(()=>!0)}}const $e=["requestKey","$cancelKey","$autoCancel","fetch","headers","body","query","params","cache","credentials","headers","integrity","keepalive","method","mode","redirect","referrer","referrerPolicy","signal","window"];function he(p){if(p){p.query=p.query||{};for(let e in p)$e.includes(e)||(p.query[e]=p[e],delete p[e])}}class ue extends B{constructor(){super(...arguments),this.clientId="",this.eventSource=null,this.subscriptions={},this.lastSentSubscriptions=[],this.maxConnectTimeout=15e3,this.reconnectAttempts=0,this.maxReconnectAttempts=1/0,this.predefinedReconnectIntervals=[200,300,500,1e3,1200,1500,2e3],this.pendingConnects=[]}get isConnected(){return!!this.eventSource&&!!this.clientId&&!this.pendingConnects.length}async subscribe(e,t,i){var o;if(!e)throw new Error("topic must be set.");let s=e;if(i){he(i=Object.assign({},i));const r="options="+encodeURIComponent(JSON.stringify({query:i.query,headers:i.headers}));s+=(s.includes("?")?"&":"?")+r}const n=function(r){const a=r;let l;try{l=JSON.parse(a==null?void 0:a.data)}catch{}t(l||{})};return this.subscriptions[s]||(this.subscriptions[s]=[]),this.subscriptions[s].push(n),this.isConnected?this.subscriptions[s].length===1?await this.submitSubscriptions():(o=this.eventSource)==null||o.addEventListener(s,n):await this.connect(),async()=>this.unsubscribeByTopicAndListener(e,n)}async unsubscribe(e){var i;let t=!1;if(e){const s=this.getSubscriptionsByTopic(e);for(let n in s)if(this.hasSubscriptionListeners(n)){for(let o of this.subscriptions[n])(i=this.eventSource)==null||i.removeEventListener(n,o);delete this.subscriptions[n],t||(t=!0)}}else this.subscriptions={};this.hasSubscriptionListeners()?t&&await this.submitSubscriptions():this.disconnect()}async unsubscribeByPrefix(e){var i;let t=!1;for(let s in this.subscriptions)if((s+"?").startsWith(e)){t=!0;for(let n of this.subscriptions[s])(i=this.eventSource)==null||i.removeEventListener(s,n);delete this.subscriptions[s]}t&&(this.hasSubscriptionListeners()?await this.submitSubscriptions():this.disconnect())}async unsubscribeByTopicAndListener(e,t){var n;let i=!1;const s=this.getSubscriptionsByTopic(e);for(let o in s){if(!Array.isArray(this.subscriptions[o])||!this.subscriptions[o].length)continue;let r=!1;for(let a=this.subscriptions[o].length-1;a>=0;a--)this.subscriptions[o][a]===t&&(r=!0,delete this.subscriptions[o][a],this.subscriptions[o].splice(a,1),(n=this.eventSource)==null||n.removeEventListener(o,t));r&&(this.subscriptions[o].length||delete this.subscriptions[o],i||this.hasSubscriptionListeners(o)||(i=!0))}this.hasSubscriptionListeners()?i&&await this.submitSubscriptions():this.disconnect()}hasSubscriptionListeners(e){var t,i;if(this.subscriptions=this.subscriptions||{},e)return!!((t=this.subscriptions[e])!=null&&t.length);for(let s in this.subscriptions)if((i=this.subscriptions[s])!=null&&i.length)return!0;return!1}async submitSubscriptions(){if(this.clientId)return this.addAllSubscriptionListeners(),this.lastSentSubscriptions=this.getNonEmptySubscriptionKeys(),this.client.send("/api/realtime",{method:"POST",body:{clientId:this.clientId,subscriptions:this.lastSentSubscriptions},requestKey:this.getSubscriptionsCancelKey()}).catch(e=>{if(!(e!=null&&e.isAbort))throw e})}getSubscriptionsCancelKey(){return"realtime_"+this.clientId}getSubscriptionsByTopic(e){const t={};e=e.includes("?")?e:e+"?";for(let i in this.subscriptions)(i+"?").startsWith(e)&&(t[i]=this.subscriptions[i]);return t}getNonEmptySubscriptionKeys(){const e=[];for(let t in this.subscriptions)this.subscriptions[t].length&&e.push(t);return e}addAllSubscriptionListeners(){if(this.eventSource){this.removeAllSubscriptionListeners();for(let e in this.subscriptions)for(let t of this.subscriptions[e])this.eventSource.addEventListener(e,t)}}removeAllSubscriptionListeners(){if(this.eventSource)for(let e in this.subscriptions)for(let t of this.subscriptions[e])this.eventSource.removeEventListener(e,t)}async connect(){if(!(this.reconnectAttempts>0))return new Promise((e,t)=>{this.pendingConnects.push({resolve:e,reject:t}),this.pendingConnects.length>1||this.initConnect()})}initConnect(){this.disconnect(!0),clearTimeout(this.connectTimeoutId),this.connectTimeoutId=setTimeout(()=>{this.connectErrorHandler(new Error("EventSource connect took too long."))},this.maxConnectTimeout),this.eventSource=new EventSource(this.client.buildUrl("/api/realtime")),this.eventSource.onerror=e=>{this.connectErrorHandler(new Error("Failed to establish realtime connection."))},this.eventSource.addEventListener("PB_CONNECT",e=>{const t=e;this.clientId=t==null?void 0:t.lastEventId,this.submitSubscriptions().then(async()=>{let i=3;for(;this.hasUnsentSubscriptions()&&i>0;)i--,await this.submitSubscriptions()}).then(()=>{for(let s of this.pendingConnects)s.resolve();this.pendingConnects=[],this.reconnectAttempts=0,clearTimeout(this.reconnectTimeoutId),clearTimeout(this.connectTimeoutId);const i=this.getSubscriptionsByTopic("PB_CONNECT");for(let s in i)for(let n of i[s])n(e)}).catch(i=>{this.clientId="",this.connectErrorHandler(i)})})}hasUnsentSubscriptions(){const e=this.getNonEmptySubscriptionKeys();if(e.length!=this.lastSentSubscriptions.length)return!0;for(const t of e)if(!this.lastSentSubscriptions.includes(t))return!0;return!1}connectErrorHandler(e){if(clearTimeout(this.connectTimeoutId),clearTimeout(this.reconnectTimeoutId),!this.clientId&&!this.reconnectAttempts||this.reconnectAttempts>this.maxReconnectAttempts){for(let i of this.pendingConnects)i.reject(new I(e));return this.pendingConnects=[],void this.disconnect()}this.disconnect(!0);const t=this.predefinedReconnectIntervals[this.reconnectAttempts]||this.predefinedReconnectIntervals[this.predefinedReconnectIntervals.length-1];this.reconnectAttempts++,this.reconnectTimeoutId=setTimeout(()=>{this.initConnect()},t)}disconnect(e=!1){var t;if(clearTimeout(this.connectTimeoutId),clearTimeout(this.reconnectTimeoutId),this.removeAllSubscriptionListeners(),this.client.cancelRequest(this.getSubscriptionsCancelKey()),(t=this.eventSource)==null||t.close(),this.eventSource=null,this.clientId="",!e){this.reconnectAttempts=0;for(let i of this.pendingConnects)i.resolve();this.pendingConnects=[]}}}class Re extends V{constructor(e,t){super(e),this.collectionIdOrName=t}get baseCrudPath(){return this.baseCollectionPath+"/records"}get baseCollectionPath(){return"/api/collections/"+encodeURIComponent(this.collectionIdOrName)}async subscribe(e,t,i){if(!e)throw new Error("Missing topic.");if(!t)throw new Error("Missing subscription callback.");return this.client.realtime.subscribe(this.collectionIdOrName+"/"+e,t,i)}async unsubscribe(e){return e?this.client.realtime.unsubscribe(this.collectionIdOrName+"/"+e):this.client.realtime.unsubscribeByPrefix(this.collectionIdOrName)}async getFullList(e,t){if(typeof e=="number")return super.getFullList(e,t);const i=Object.assign({},e,t);return super.getFullList(i)}async getList(e=1,t=30,i){return super.getList(e,t,i)}async getFirstListItem(e,t){return super.getFirstListItem(e,t)}async getOne(e,t){return super.getOne(e,t)}async create(e,t){return super.create(e,t)}async update(e,t,i){return super.update(e,t,i).then(s=>{var n,o,r;return((n=this.client.authStore.model)==null?void 0:n.id)!==(s==null?void 0:s.id)||((o=this.client.authStore.model)==null?void 0:o.collectionId)!==this.collectionIdOrName&&((r=this.client.authStore.model)==null?void 0:r.collectionName)!==this.collectionIdOrName||this.client.authStore.save(this.client.authStore.token,s),s})}async delete(e,t){return super.delete(e,t).then(i=>{var s,n,o;return!i||((s=this.client.authStore.model)==null?void 0:s.id)!==e||((n=this.client.authStore.model)==null?void 0:n.collectionId)!==this.collectionIdOrName&&((o=this.client.authStore.model)==null?void 0:o.collectionName)!==this.collectionIdOrName||this.client.authStore.clear(),i})}authResponse(e){const t=this.decode((e==null?void 0:e.record)||{});return this.client.authStore.save(e==null?void 0:e.token,t),Object.assign({},e,{token:(e==null?void 0:e.token)||"",record:t})}async listAuthMethods(e){return e=Object.assign({method:"GET"},e),this.client.send(this.baseCollectionPath+"/auth-methods",e).then(t=>Object.assign({},t,{usernamePassword:!!(t!=null&&t.usernamePassword),emailPassword:!!(t!=null&&t.emailPassword),authProviders:Array.isArray(t==null?void 0:t.authProviders)?t==null?void 0:t.authProviders:[]}))}async authWithPassword(e,t,i,s){let n={method:"POST",body:{identity:e,password:t}};return n=R("This form of authWithPassword(usernameOrEmail, pass, body?, query?) is deprecated. Consider replacing it with authWithPassword(usernameOrEmail, pass, options?).",n,i,s),this.client.send(this.baseCollectionPath+"/auth-with-password",n).then(o=>this.authResponse(o))}async authWithOAuth2Code(e,t,i,s,n,o,r){let a={method:"POST",body:{provider:e,code:t,codeVerifier:i,redirectUrl:s,createData:n}};return a=R("This form of authWithOAuth2Code(provider, code, codeVerifier, redirectUrl, createData?, body?, query?) is deprecated. Consider replacing it with authWithOAuth2Code(provider, code, codeVerifier, redirectUrl, createData?, options?).",a,o,r),this.client.send(this.baseCollectionPath+"/auth-with-oauth2",a).then(l=>this.authResponse(l))}authWithOAuth2(...e){if(e.length>1||typeof(e==null?void 0:e[0])=="string")return console.warn("PocketBase: This form of authWithOAuth2() is deprecated and may get removed in the future. Please replace with authWithOAuth2Code() OR use the authWithOAuth2() realtime form as shown in https://pocketbase.io/docs/authentication/#oauth2-integration."),this.authWithOAuth2Code((e==null?void 0:e[0])||"",(e==null?void 0:e[1])||"",(e==null?void 0:e[2])||"",(e==null?void 0:e[3])||"",(e==null?void 0:e[4])||{},(e==null?void 0:e[5])||{},(e==null?void 0:e[6])||{});const t=(e==null?void 0:e[0])||{};let i=null;t.urlCallback||(i=re(void 0));const s=new ue(this.client);function n(){i==null||i.close(),s.unsubscribe()}const o={},r=t.requestKey;return r&&(o.requestKey=r),this.listAuthMethods(o).then(a=>{var d;const l=a.authProviders.find(u=>u.name===t.provider);if(!l)throw new I(new Error(`Missing or invalid provider "${t.provider}".`));const c=this.client.buildUrl("/api/oauth2-redirect"),h=r?(d=this.client.cancelControllers)==null?void 0:d[r]:void 0;return h&&(h.signal.onabort=()=>{n()}),new Promise(async(u,m)=>{var f;try{await s.subscribe("@oauth2",async b=>{var S;const T=s.clientId;try{if(!b.state||T!==b.state)throw new Error("State parameters don't match.");if(b.error||!b.code)throw new Error("OAuth2 redirect error or missing code: "+b.error);const v=Object.assign({},t);delete v.provider,delete v.scopes,delete v.createData,delete v.urlCallback,(S=h==null?void 0:h.signal)!=null&&S.onabort&&(h.signal.onabort=null);const O=await this.authWithOAuth2Code(l.name,b.code,l.codeVerifier,c,t.createData,v);u(O)}catch(v){m(new I(v))}n()});const g={state:s.clientId};(f=t.scopes)!=null&&f.length&&(g.scope=t.scopes.join(" "));const y=this._replaceQueryParams(l.authUrl+c,g);await(t.urlCallback||function(b){i?i.location.href=b:i=re(b)})(y)}catch(g){n(),m(new I(g))}})}).catch(a=>{throw n(),a})}async authRefresh(e,t){let i={method:"POST"};return i=R("This form of authRefresh(body?, query?) is deprecated. Consider replacing it with authRefresh(options?).",i,e,t),this.client.send(this.baseCollectionPath+"/auth-refresh",i).then(s=>this.authResponse(s))}async requestPasswordReset(e,t,i){let s={method:"POST",body:{email:e}};return s=R("This form of requestPasswordReset(email, body?, query?) is deprecated. Consider replacing it with requestPasswordReset(email, options?).",s,t,i),this.client.send(this.baseCollectionPath+"/request-password-reset",s).then(()=>!0)}async confirmPasswordReset(e,t,i,s,n){let o={method:"POST",body:{token:e,password:t,passwordConfirm:i}};return o=R("This form of confirmPasswordReset(token, password, passwordConfirm, body?, query?) is deprecated. Consider replacing it with confirmPasswordReset(token, password, passwordConfirm, options?).",o,s,n),this.client.send(this.baseCollectionPath+"/confirm-password-reset",o).then(()=>!0)}async requestVerification(e,t,i){let s={method:"POST",body:{email:e}};return s=R("This form of requestVerification(email, body?, query?) is deprecated. Consider replacing it with requestVerification(email, options?).",s,t,i),this.client.send(this.baseCollectionPath+"/request-verification",s).then(()=>!0)}async confirmVerification(e,t,i){let s={method:"POST",body:{token:e}};return s=R("This form of confirmVerification(token, body?, query?) is deprecated. Consider replacing it with confirmVerification(token, options?).",s,t,i),this.client.send(this.baseCollectionPath+"/confirm-verification",s).then(()=>{const n=D(e),o=this.client.authStore.model;return o&&!o.verified&&o.id===n.id&&o.collectionId===n.collectionId&&(o.verified=!0,this.client.authStore.save(this.client.authStore.token,o)),!0})}async requestEmailChange(e,t,i){let s={method:"POST",body:{newEmail:e}};return s=R("This form of requestEmailChange(newEmail, body?, query?) is deprecated. Consider replacing it with requestEmailChange(newEmail, options?).",s,t,i),this.client.send(this.baseCollectionPath+"/request-email-change",s).then(()=>!0)}async confirmEmailChange(e,t,i,s){let n={method:"POST",body:{token:e,password:t}};return n=R("This form of confirmEmailChange(token, password, body?, query?) is deprecated. Consider replacing it with confirmEmailChange(token, password, options?).",n,i,s),this.client.send(this.baseCollectionPath+"/confirm-email-change",n).then(()=>{const o=D(e),r=this.client.authStore.model;return r&&r.id===o.id&&r.collectionId===o.collectionId&&this.client.authStore.clear(),!0})}async listExternalAuths(e,t){return t=Object.assign({method:"GET"},t),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e)+"/external-auths",t)}async unlinkExternalAuth(e,t,i){return i=Object.assign({method:"DELETE"},i),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e)+"/external-auths/"+encodeURIComponent(t),i).then(()=>!0)}_replaceQueryParams(e,t={}){let i=e,s="";e.indexOf("?")>=0&&(i=e.substring(0,e.indexOf("?")),s=e.substring(e.indexOf("?")+1));const n={},o=s.split("&");for(const r of o){if(r=="")continue;const a=r.split("=");n[decodeURIComponent(a[0].replace(/\+/g," "))]=decodeURIComponent((a[1]||"").replace(/\+/g," "))}for(let r in t)t.hasOwnProperty(r)&&(t[r]==null?delete n[r]:n[r]=t[r]);s="";for(let r in n)n.hasOwnProperty(r)&&(s!=""&&(s+="&"),s+=encodeURIComponent(r.replace(/%20/g,"+"))+"="+encodeURIComponent(n[r].replace(/%20/g,"+")));return s!=""?i+"?"+s:i}}function re(p){if(typeof window>"u"||!(window!=null&&window.open))throw new I(new Error("Not in a browser context - please pass a custom urlCallback function."));let e=1024,t=768,i=window.innerWidth,s=window.innerHeight;e=e>i?i:e,t=t>s?s:t;let n=i/2-e/2,o=s/2-t/2;return window.open(p,"popup_window","width="+e+",height="+t+",top="+o+",left="+n+",resizable,menubar=no")}class Ie extends V{get baseCrudPath(){return"/api/collections"}async import(e,t=!1,i){return i=Object.assign({method:"PUT",body:{collections:e,deleteMissing:t}},i),this.client.send(this.baseCrudPath+"/import",i).then(()=>!0)}}class _e extends B{async getList(e=1,t=30,i){return(i=Object.assign({method:"GET"},i)).query=Object.assign({page:e,perPage:t},i.query),this.client.send("/api/logs",i)}async getOne(e,t){if(!e)throw new I({url:this.client.buildUrl("/api/logs/"),status:404,response:{code:404,message:"Missing required log id.",data:{}}});return t=Object.assign({method:"GET"},t),this.client.send("/api/logs/"+encodeURIComponent(e),t)}async getStats(e){return e=Object.assign({method:"GET"},e),this.client.send("/api/logs/stats",e)}}class Oe extends B{async check(e){return e=Object.assign({method:"GET"},e),this.client.send("/api/health",e)}}class Le extends B{getUrl(e,t,i={}){if(!t||!(e!=null&&e.id)||!(e!=null&&e.collectionId)&&!(e!=null&&e.collectionName))return"";const s=[];s.push("api"),s.push("files"),s.push(encodeURIComponent(e.collectionId||e.collectionName)),s.push(encodeURIComponent(e.id)),s.push(encodeURIComponent(t));let n=this.client.buildUrl(s.join("/"));if(Object.keys(i).length){i.download===!1&&delete i.download;const o=new URLSearchParams(i);n+=(n.includes("?")?"&":"?")+o}return n}async getToken(e){return e=Object.assign({method:"POST"},e),this.client.send("/api/files/token",e).then(t=>(t==null?void 0:t.token)||"")}}class Me extends B{async getFullList(e){return e=Object.assign({method:"GET"},e),this.client.send("/api/backups",e)}async create(e,t){return t=Object.assign({method:"POST",body:{name:e}},t),this.client.send("/api/backups",t).then(()=>!0)}async upload(e,t){return t=Object.assign({method:"POST",body:e},t),this.client.send("/api/backups/upload",t).then(()=>!0)}async delete(e,t){return t=Object.assign({method:"DELETE"},t),this.client.send(`/api/backups/${encodeURIComponent(e)}`,t).then(()=>!0)}async restore(e,t){return t=Object.assign({method:"POST"},t),this.client.send(`/api/backups/${encodeURIComponent(e)}/restore`,t).then(()=>!0)}getDownloadUrl(e,t){return this.client.buildUrl(`/api/backups/${encodeURIComponent(t)}?token=${encodeURIComponent(e)}`)}}class Fe{constructor(e="/",t,i="en-US"){this.cancelControllers={},this.recordServices={},this.enableAutoCancellation=!0,this.baseUrl=e,this.lang=i,this.authStore=t||new ke,this.admins=new Ee(this),this.collections=new Ie(this),this.files=new Le(this),this.logs=new _e(this),this.settings=new Pe(this),this.realtime=new ue(this),this.health=new Oe(this),this.backups=new Me(this)}collection(e){return this.recordServices[e]||(this.recordServices[e]=new Re(this,e)),this.recordServices[e]}autoCancellation(e){return this.enableAutoCancellation=!!e,this}cancelRequest(e){return this.cancelControllers[e]&&(this.cancelControllers[e].abort(),delete this.cancelControllers[e]),this}cancelAllRequests(){for(let e in this.cancelControllers)this.cancelControllers[e].abort();return this.cancelControllers={},this}filter(e,t){if(!t)return e;for(let i in t){let s=t[i];switch(typeof s){case"boolean":case"number":s=""+s;break;case"string":s="'"+s.replace(/'/g,"\\'")+"'";break;default:s=s===null?"null":s instanceof Date?"'"+s.toISOString().replace("T"," ")+"'":"'"+JSON.stringify(s).replace(/'/g,"\\'")+"'"}e=e.replaceAll("{:"+i+"}",s)}return e}getFileUrl(e,t,i={}){return this.files.getUrl(e,t,i)}buildUrl(e){var i;let t=this.baseUrl;return typeof window>"u"||!window.location||t.startsWith("https://")||t.startsWith("http://")||(t=(i=window.location.origin)!=null&&i.endsWith("/")?window.location.origin.substring(0,window.location.origin.length-1):window.location.origin||"",this.baseUrl.startsWith("/")||(t+=window.location.pathname||"/",t+=t.endsWith("/")?"":"/"),t+=this.baseUrl),e&&(t+=t.endsWith("/")?"":"/",t+=e.startsWith("/")?e.substring(1):e),t}async send(e,t){t=this.initSendOptions(e,t);let i=this.buildUrl(e);if(this.beforeSend){const s=Object.assign({},await this.beforeSend(i,t));s.url!==void 0||s.options!==void 0?(i=s.url||i,t=s.options||t):Object.keys(s).length&&(t=s,console!=null&&console.warn&&console.warn("Deprecated format of beforeSend return: please use `return { url, options }`, instead of `return options`."))}if(t.query!==void 0){const s=this.serializeQueryParams(t.query);s&&(i+=(i.includes("?")?"&":"?")+s),delete t.query}return this.getHeader(t.headers,"Content-Type")=="application/json"&&t.body&&typeof t.body!="string"&&(t.body=JSON.stringify(t.body)),(t.fetch||fetch)(i,t).then(async s=>{let n={};try{n=await s.json()}catch{}if(this.afterSend&&(n=await this.afterSend(s,n)),s.status>=400)throw new I({url:s.url,status:s.status,data:n});return n}).catch(s=>{throw new I(s)})}initSendOptions(e,t){if((t=Object.assign({method:"GET"},t)).body=this.convertToFormDataIfNeeded(t.body),he(t),t.query=Object.assign({},t.params,t.query),t.requestKey===void 0&&(t.$autoCancel===!1||t.query.$autoCancel===!1?t.requestKey=null:(t.$cancelKey||t.query.$cancelKey)&&(t.requestKey=t.$cancelKey||t.query.$cancelKey)),delete t.$autoCancel,delete t.query.$autoCancel,delete t.$cancelKey,delete t.query.$cancelKey,this.getHeader(t.headers,"Content-Type")!==null||this.isFormData(t.body)||(t.headers=Object.assign({},t.headers,{"Content-Type":"application/json"})),this.getHeader(t.headers,"Accept-Language")===null&&(t.headers=Object.assign({},t.headers,{"Accept-Language":this.lang})),this.authStore.token&&this.getHeader(t.headers,"Authorization")===null&&(t.headers=Object.assign({},t.headers,{Authorization:this.authStore.token})),this.enableAutoCancellation&&t.requestKey!==null){const i=t.requestKey||(t.method||"GET")+e;delete t.requestKey,this.cancelRequest(i);const s=new AbortController;this.cancelControllers[i]=s,t.signal=s.signal}return t}convertToFormDataIfNeeded(e){if(typeof FormData>"u"||e===void 0||typeof e!="object"||e===null||this.isFormData(e)||!this.hasBlobField(e))return e;const t=new FormData;for(const i in e){const s=e[i];if(typeof s!="object"||this.hasBlobField({data:s})){const n=Array.isArray(s)?s:[s];for(let o of n)t.append(i,o)}else{let n={};n[i]=s,t.append("@jsonPayload",JSON.stringify(n))}}return t}hasBlobField(e){for(const t in e){const i=Array.isArray(e[t])?e[t]:[e[t]];for(const s of i)if(typeof Blob<"u"&&s instanceof Blob||typeof File<"u"&&s instanceof File)return!0}return!1}getHeader(e,t){e=e||{},t=t.toLowerCase();for(let i in e)if(i.toLowerCase()==t)return e[i];return null}isFormData(e){return e&&(e.constructor.name==="FormData"||typeof FormData<"u"&&e instanceof FormData)}serializeQueryParams(e){const t=[];for(const i in e){if(e[i]===null)continue;const s=e[i],n=encodeURIComponent(i);if(Array.isArray(s))for(const o of s)t.push(n+"="+encodeURIComponent(o));else s instanceof Date?t.push(n+"="+encodeURIComponent(s.toISOString())):typeof s!==null&&typeof s=="object"?t.push(n+"="+encodeURIComponent(JSON.stringify(s))):t.push(n+"="+encodeURIComponent(s))}return t.join("&")}}const me="http://localhost:8090",w=new Fe(me);function U(p){var e;if(!((e=p.message)!=null&&e.includes("autocancelled")||p.status===0))throw p}class pe{constructor(){this.callbacks=[],this.user=null,this.checkAuthStatus(),w.authStore.onChange(()=>{this.checkAuthStatus(),this.notifyCallbacks()})}checkAuthStatus(){this.user=w.authStore.isValid?w.authStore.model:null}subscribe(e){this.callbacks.push(e),e(this.user)}unsubscribe(e){this.callbacks=this.callbacks.filter(t=>t!==e)}notifyCallbacks(){this.callbacks.forEach(e=>e(this.user))}async loginWithDiscord(){try{return await w.collection("users").authWithOAuth2({provider:"discord"})}catch(e){throw console.error("Discord login failed:",e),e}}logout(){w.authStore.clear()}isLoggedIn(){return w.authStore.isValid}getUser(){return this.user}}const P=new pe;class fe{constructor(){this.ws=null,this.callbacks={systems:[],fleets:[],trades:[],tick:[]}}subscribe(e,t){this.callbacks[e]&&this.callbacks[e].push(t)}unsubscribe(e,t){this.callbacks[e]&&(this.callbacks[e]=this.callbacks[e].filter(i=>i!==t))}notifyCallbacks(e,t){this.callbacks[e]&&this.callbacks[e].forEach(i=>i(t))}connectWebSocket(){try{this.ws=new WebSocket(`${me.replace("http","ws")}/api/stream`),this.ws.onopen=()=>{console.log("WebSocket connected"),this.updateConnectionStatus("connected"),w.authStore.isValid&&setTimeout(()=>{this.ws&&this.ws.readyState===WebSocket.OPEN&&this.ws.send(JSON.stringify({type:"auth",token:w.authStore.token}))},100)},this.ws.onmessage=e=>{try{const t=JSON.parse(e.data);this.handleWebSocketMessage(t)}catch(t){console.error("Failed to parse WebSocket message:",t)}},this.ws.onclose=()=>{console.log("WebSocket disconnected"),this.updateConnectionStatus("disconnected"),setTimeout(()=>this.connectWebSocket(),5e3)},this.ws.onerror=e=>{console.error("WebSocket error:",e),this.updateConnectionStatus("error")}}catch(e){console.error("Failed to connect WebSocket:",e),this.updateConnectionStatus("error")}}updateConnectionStatus(e){const t=document.getElementById("ws-status");t&&(t.textContent=e==="connected"?"🟢":e==="error"?"🔴":"🟡",t.title=`WebSocket: ${e}`)}handleWebSocketMessage(e){switch(e.type){case"tick":this.notifyCallbacks("tick",e.payload);break;case"system_update":this.notifyCallbacks("systems",e.payload);break;case"fleet_update":this.notifyCallbacks("fleets",e.payload);break;case"trade_update":this.notifyCallbacks("trades",e.payload);break;default:console.log("Unknown WebSocket message type:",e.type)}}async getSystems(){try{return await w.collection("systems").getFullList({sort:"x,y"})}catch(e){return console.error("Failed to fetch systems:",e),[]}}async getPlayer(e){try{return await w.collection("users").getOne(e,{requestKey:`getPlayer-${e}-${Date.now()}`})}catch(t){return console.error("Failed to fetch player details:",t),null}}async getPlayerCredits(e){try{return(await w.collection("players").getOne(e)).credits}catch(t){return console.error("Failed to fetch player credits:",t),0}}async getUserResources(){var e;try{return(await w.send("/api/user/resources",{method:"GET",requestKey:`getUserResources-${Date.now()}`})).resources}catch(t){return t.status===0&&((e=t.message)!=null&&e.includes("autocancelled"))?(console.debug("User resources request was auto-cancelled (expected behavior)"),null):(console.error("Failed to fetch user resources:",t),{credits:0,food:0,ore:0,fuel:0,metal:0,oil:0,titanium:0,xanium:0})}}async getSystem(e){try{return await w.collection("systems").getOne(e)}catch(t){return console.error("Failed to fetch system:",t),null}}async getFleets(e=null){try{const t=e?`/api/fleets?owner_id=${e}`:"/api/fleets",i=await fetch(`${w.baseUrl}${t}`,{headers:{Authorization:w.authStore.token||""}});if(!i.ok)throw new Error(`HTTP ${i.status}`);return(await i.json()).items||[]}catch(t){try{U(t)}catch(i){console.error("Failed to fetch fleets:",i)}return[]}}async getTrades(e=null){try{const t=e?`owner_id = "${e}"`:"";return await w.collection("trade_routes").getFullList({filter:t,sort:"created"})}catch(t){try{U(t)}catch(i){console.error("Failed to fetch trades:",i)}return[]}}async getBuildings(e=null){try{let t="/api/buildings";const i={};return e&&(i.owner_id=e),(await w.send(t,{method:"GET",params:i})).items||[]}catch(t){try{U(t)}catch(i){console.error("Failed to fetch buildings:",i)}return[]}}async getTreaties(e=null){try{return[]}catch(t){try{U(t)}catch(i){console.error("Failed to fetch treaties:",i)}return[]}}async sendFleet(e,t,i){if(!w.authStore.isValid)throw new Error("Not authenticated");try{return await w.send("/api/orders/fleet",{method:"POST",body:JSON.stringify({from_id:e,to_id:t,strength:i}),headers:{"Content-Type":"application/json"}})}catch(s){throw console.error("Failed to send fleet:",s),s}}async sendMultiMoveFleet(e,t,i=2){if(!w.authStore.isValid)throw new Error("Not authenticated");try{return await w.send("/api/orders/multi-fleet",{method:"POST",body:JSON.stringify({fleet_id:e,next_stop:t,travel_min:i}),headers:{"Content-Type":"application/json"}})}catch(s){throw console.error("Failed to send multi-move fleet:",s),s}}async queueBuilding(e,t){if(!w.authStore.isValid)throw new Error("Not authenticated");try{return await w.send("/api/orders/build",{method:"POST",body:JSON.stringify({planet_id:e,building_type:t}),headers:{"Content-Type":"application/json"}})}catch(i){throw console.error("Failed to queue building:",i),i}}async createTradeRoute(e,t,i,s){if(!w.authStore.isValid)throw new Error("Not authenticated");try{return await w.send("/api/orders/trade",{method:"POST",body:JSON.stringify({from_id:e,to_id:t,cargo:i,capacity:s}),headers:{"Content-Type":"application/json"}})}catch(n){throw console.error("Failed to create trade route:",n),n}}async proposeTreaty(e,t,i){if(!w.authStore.isValid)throw new Error("Not authenticated");try{return await w.send("/diplomacy",{method:"POST",body:JSON.stringify({player_id:e,type:t,terms:i}),headers:{"Content-Type":"application/json"}})}catch(s){throw console.error("Failed to propose treaty:",s),s}}async getMap(){var e;try{return await w.send("/api/map",{method:"GET"})}catch(t){return(e=t.message)!=null&&e.includes("autocancelled")||console.error("Failed to fetch map:",t),null}}async getStatus(){try{return await w.send("/api/status",{method:"GET"})}catch(e){try{U(e)}catch(t){console.error("Failed to fetch status:",t)}return null}}async getBuildingTypes(){try{return(await w.send("/api/building_types",{method:"GET"})).items||[]}catch(e){try{U(e)}catch(t){console.error("Failed to fetch building types:",t)}return[]}}async getResourceTypes(){try{return(await w.send("/api/resource_types",{method:"GET"})).items||[]}catch(e){try{U(e)}catch(t){console.error("Failed to fetch resource types:",t)}return[]}}}const C=new fe;P.subscribe(p=>{C.ws||C.connectWebSocket()});C.connectWebSocket();const Ae=Object.freeze(Object.defineProperty({__proto__:null,AuthManager:pe,GameDataManager:fe,authManager:P,gameData:C,pb:w},Symbol.toStringTag,{value:"Module"}));class ye{constructor(){this.systems=[],this.fleets=[],this.trades=[],this.treaties=[],this.buildings=[],this.mapData=null,this.selectedSystem=null,this.selectedSystemPlanets=[],this.currentTick=1,this.ticksPerMinute=6,this.buildingTypes=[],this.resourceTypes=[],this.playerResources={credits:0,food:0,ore:0,goods:0,fuel:0},this.creditIncome=0,this.callbacks=[],this.initialized=!1,this.updatingResources=!1,this.updateTimer=null,this.tickRefreshTimer=null,this.pendingUpdate=!1,this.isUpdating=!1,P.subscribe(e=>{e&&!this.initialized?this.initialize():e||this.reset()}),this.loadMapData(),C.subscribe("systems",e=>this.updateSystems(e)),C.subscribe("fleets",e=>this.updateFleets(e)),C.subscribe("trades",e=>this.updateTrades(e)),C.subscribe("tick",e=>this.handleTick(e))}async initialize(){if(!this.initialized)try{await this.loadGameData(),this.initialized=!0}catch(e){console.error("Failed to initialize game state:",e)}}async loadGameData(){var e;try{const t=(e=P.getUser())==null?void 0:e.id,i=await C.getMap();i&&i.systems&&(this.systems=i.systems,this.mapData=i),t&&(this.fleets=await C.getFleets(t),await new Promise(n=>setTimeout(n,50)),this.trades=await C.getTrades(t),await new Promise(n=>setTimeout(n,50)),this.treaties=await C.getTreaties(t),await new Promise(n=>setTimeout(n,50)),this.buildings=await C.getBuildings(t),await new Promise(n=>setTimeout(n,50)));const s=await C.getStatus();s&&(this.currentTick=s.current_tick||1,this.ticksPerMinute=s.ticks_per_minute||6);try{const n=await C.getBuildingTypes();n&&(this.buildingTypes=n)}catch(n){console.warn("Failed to load building types:",n),this.buildingTypes=[]}try{const n=await C.getResourceTypes();n&&(this.resourceTypes=n)}catch(n){console.warn("Failed to load resource types:",n),this.resourceTypes=[]}if(this.updatePlayerResources(),t&&this.fleets&&this.fleets.length>0&&this.systems&&this.systems.length>0){const n=this.fleets[0];n&&n.current_system&&(this.centerOnFleetSystem=n.current_system)}this.notifyCallbacks()}catch(t){console.error("Failed to load game data:",t)}}async refreshGameData(){if(!this.initialized){await this.initialize();return}await this.loadGameData()}reset(){this.systems=[],this.fleets=[],this.trades=[],this.treaties=[],this.buildings=[],this.mapData=null,this.selectedSystem=null,this.selectedSystemPlanets=[],this.currentTick=1,this.ticksPerMinute=6,this.buildingTypes=[],this.resourceTypes=[],this.playerResources={credits:0,food:0,ore:0,goods:0,fuel:0},this.creditIncome=0,this.initialized=!1,this.notifyCallbacks()}async loadMapData(){try{const e=await C.getMap();e&&e.systems&&(this.systems=e.systems,this.mapData=e,this.notifyCallbacks())}catch(e){console.error("Failed to load map data:",e)}}subscribe(e){this.callbacks.push(e),e(this)}unsubscribe(e){this.callbacks=this.callbacks.filter(t=>t!==e)}notifyCallbacks(){if(!this.isUpdating){if(this.updateTimer){this.pendingUpdate=!0;return}this.updateTimer=setTimeout(()=>{this.updateTimer=null,this.isUpdating=!0;try{this.callbacks.forEach(e=>e(this))}finally{this.isUpdating=!1}this.pendingUpdate&&(this.pendingUpdate=!1,this.notifyCallbacks())},16)}}updateSystems(e){if(Array.isArray(e))this.systems=e;else{const t=this.systems.findIndex(i=>i.id===e.id);t>=0?this.systems[t]=e:this.systems.push(e)}this.updatePlayerResources(),this.notifyCallbacks()}updateFleets(e){if(Array.isArray(e))this.fleets=e;else{const t=this.fleets.findIndex(i=>i.id===e.id);if(t>=0){const i=this.fleets[t];this.fleets[t]=e,i.destination_system&&!e.destination_system&&this.handleFleetArrival(e.id)}else this.fleets.push(e)}this.notifyCallbacks()}handleFleetArrival(e){window.app&&typeof window.app.onFleetArrival=="function"&&window.app.onFleetArrival(e)}updateTrades(e){if(Array.isArray(e))this.trades=e;else{const t=this.trades.findIndex(i=>i.id===e.id);t>=0?this.trades[t]=e:this.trades.push(e)}this.notifyCallbacks()}handleTick(e){this.currentTick=e.tick||this.currentTick+1,this.tickRefreshTimer&&clearTimeout(this.tickRefreshTimer),this.tickRefreshTimer=setTimeout(()=>{this.refreshGameData()},100)}async updatePlayerResources(){const e=P.getUser();if(!e){this.playerResources={credits:0,food:0,ore:0,goods:0,fuel:0},this.creditIncome=0;return}if(!this.updatingResources){this.updatingResources=!0;try{const t=await C.getUserResources();if(t===null)return;if(!this.mapData||!this.mapData.planets){this.playerResources=t,this.creditIncome=0;return}let i=0,s=0,n=0,o=0,r=0;for(const a of this.mapData.planets)if(a.colonized_by===e.id&&(i+=a.Food||0,s+=a.Ore||0,n+=a.Goods||0,o+=a.Fuel||0,a.Buildings))for(const[l,c]of Object.entries(a.Buildings)){const h=this.buildingTypes.find(d=>d.id===l||d.name&&d.name.toLowerCase()===l.toLowerCase());h&&h.name&&h.name.toLowerCase()==="bank"&&(r+=(c||1)*1)}this.playerResources={credits:t.credits,food:i,ore:s,goods:n,fuel:o},this.creditIncome=r}finally{this.updatingResources=!1}}}getSystemPlanets(e){return!this.mapData||!this.mapData.planets?[]:this.mapData.planets.filter(i=>i.system_id===e)}selectSystem(e){this.selectedSystem&&this.selectedSystem.id===e||(this.selectedSystem=this.systems.find(t=>t.id===e)||null,this.selectedSystem?this.selectedSystemPlanets=this.getSystemPlanets(this.selectedSystem.id):this.selectedSystemPlanets=[],this.notifyCallbacks())}getSelectedSystem(){return this.selectedSystem}getOwnedSystems(){const e=P.getUser();return e?this.systems.filter(t=>t.owner_id===e.id):[]}getPlayerFleets(){const e=P.getUser();return e?this.fleets.filter(t=>t.owner_id===e.id):[]}getPlayerTrades(){const e=P.getUser();return e?this.trades.filter(t=>t.owner_id===e.id):[]}async sendFleet(e,t,i){return await C.sendFleet(e,t,i)}async queueBuilding(e,t){return await C.queueBuilding(e,t)}async createTradeRoute(e,t,i,s){return await C.createTradeRoute(e,t,i,s)}async proposeTreaty(e,t,i){return await C.proposeTreaty(e,t,i)}getPlayerBuildings(){var t;const e=P.getUser();return e?((t=this.buildings)==null?void 0:t.filter(i=>i.owner_id===e.id))||[]:[]}getPlayerBuildingsByType(e){return this.getPlayerBuildings().filter(t=>t.type===e)}}const k=new ye,Ne=Object.freeze(Object.defineProperty({__proto__:null,GameState:ye,gameState:k},Symbol.toStringTag,{value:"Module"}));class Ue{constructor(e){this.canvas=document.getElementById(e),this.ctx=this.canvas.getContext("2d"),this.systems=[],this.lanes=[],this.fleets=[],this.selectedSystem=null,this.selectedFleet=null,this.hoveredSystem=null,this.hoveredTradeRoutes=[],this.trades=[],this.currentUserId=null,this.cachedTerritorialContours=null,this.territorialCacheKey=null,this.connectedSystems=new Map,this.fleetRoutes=[],this.viewX=0,this.viewY=0,this.zoom=.15,this.maxZoom=2,this.minZoom=.05,this.targetViewX=0,this.targetViewY=0,this.cameraSpeed=.15,this.colors={background:"#000508",starUnowned:"#4080ff",starPlayerOwned:"#00ff66",starOtherOwned:"#f1a9ff",starEnemy:"#ff6b6b",lane:"rgba(64, 128, 255, 0.2)",laneActive:"rgba(241, 169, 255, 0.6)",fleet:"#8b5cf6",selection:"#f1a9ff",grid:"rgba(255, 255, 255, 0.02)",nebula:"rgba(139, 92, 246, 0.1)",starGlow:"rgba(64, 128, 255, 0.3)"},this.animationFrame=null,this.lastTime=0,this.isDirty=!0,this.isMoving=!1,this.setupCanvas(),this.setupEventListeners(),this.startRenderLoop(),this.initialViewSet=!1,this.systemPlanetCounts=new Map}setupCanvas(){this.resizeCanvas(),window.addEventListener("resize",()=>this.resizeCanvas())}resizeCanvas(){const e=this.canvas.getBoundingClientRect();this.canvas.width=e.width,this.canvas.height=e.height}setupEventListeners(){let e=!1,t=0,i=0;this.canvas.addEventListener("mousedown",s=>{if(s.button===0){const n=this.screenToWorld(s.offsetX,s.offsetY),o=this.getFleetAt(n.x,n.y);if(o){this.selectFleet(o);return}const r=this.getSystemAt(n.x,n.y);if(r){if(s.shiftKey&&this.selectedFleet){this.canvas.dispatchEvent(new CustomEvent("fleetMoveRequested",{detail:{fromFleet:this.selectedFleet,toSystem:r,shiftKey:!0},bubbles:!0}));return}this.selectSystem(r),this.selectFleet(null);const a={x:this.canvas.width/2+30,y:this.canvas.height/2-20},l=window.gameState.getSystemPlanets(r.id);this.canvas.dispatchEvent(new CustomEvent("systemSelected",{detail:{system:r,planets:l,screenX:a.x,screenY:a.y},bubbles:!0}))}else this.selectSystem(null),this.canvas.dispatchEvent(new CustomEvent("mapClickedEmpty",{bubbles:!0})),e=!0,t=s.offsetX,i=s.offsetY,this.canvas.style.cursor="grabbing"}}),this.canvas.addEventListener("mousemove",s=>{if(e){const n=s.offsetX-t,o=s.offsetY-i;this.viewX+=n/this.zoom,this.viewY+=o/this.zoom,this.targetViewX=this.viewX,this.targetViewY=this.viewY,this.isDirty=!0,t=s.offsetX,i=s.offsetY}else{const n=this.screenToWorld(s.offsetX,s.offsetY),o=this.getSystemAt(n.x,n.y);o!==this.hoveredSystem&&(this.hoveredSystem=o,this.isDirty=!0),this.showTooltip(this.hoveredSystem,s.offsetX,s.offsetY),this.hoveredSystem&&this.trades&&this.trades.length>0?this.hoveredTradeRoutes=this.trades.filter(r=>r.from_id===this.hoveredSystem.id||r.to_id===this.hoveredSystem.id):this.hoveredTradeRoutes=[]}}),this.canvas.addEventListener("mouseup",s=>{s.button===0&&(e=!1,this.canvas.style.cursor="crosshair")}),this.canvas.addEventListener("contextmenu",s=>{s.preventDefault();const n=this.screenToWorld(s.offsetX,s.offsetY),o=this.getSystemAt(n.x,n.y);o&&this.showContextMenu(o,s.offsetX,s.offsetY)}),this.canvas.addEventListener("wheel",s=>{s.preventDefault();const n=s.deltaY>0?.9:1.1,o=Math.max(this.minZoom,Math.min(this.maxZoom,this.zoom*n));if(o!==this.zoom){const r=this.canvas.getBoundingClientRect(),a=s.clientX-r.left,l=s.clientY-r.top,c=this.screenToWorld(a,l);this.zoom=o;const h=this.screenToWorld(a,l);this.viewX+=c.x-h.x,this.viewY+=c.y-h.y,this.targetViewX=this.viewX,this.targetViewY=this.viewY,this.isDirty=!0}})}screenToWorld(e,t){return{x:(e-this.canvas.width/2)/this.zoom-this.viewX,y:(t-this.canvas.height/2)/this.zoom-this.viewY}}worldToScreen(e,t){return{x:(e+this.viewX)*this.zoom+this.canvas.width/2,y:(t+this.viewY)*this.zoom+this.canvas.height/2}}getSystemAt(e,t){return this.systems.find(s=>{const n=s.x-e,o=s.y-t;return Math.sqrt(n*n+o*o)<=20})}selectSystem(e){if(this.selectedSystem&&e&&this.selectedSystem.id===e.id){this.centerOnSystem(e.id);return}this.selectedSystem=e,e&&this.centerOnSystem(e.id)}updateConnectedSystems(){if(this.connectedSystems.clear(),!this.selectedSystem)return;const e=this.selectedSystem.x,t=this.selectedSystem.y;this.systems.forEach(i=>{if(i.id===this.selectedSystem.id)return;const s=i.x-e,n=i.y-t,o=Math.sqrt(s*s+n*n);if(o>800)return;const r=Math.atan2(n,s)*180/Math.PI;let a;r>=-45&&r<=45?a="right":r>=45&&r<=135?a="down":r>=135||r<=-135?a="left":a="up",(!this.connectedSystems.has(a)||o<this.connectedSystems.get(a).distance)&&this.connectedSystems.set(a,{system:i,distance:o,direction:a})})}showTooltip(e,t,i){const s=document.getElementById("tooltip");if(e&&window.gameState){const n=window.gameState.getSystemPlanets(e.id),o=n.reduce((l,c)=>l+(c.Pop||0),0),a=n.some(l=>l.colonized_by===this.currentUserId)?"You":"Uncolonized";s.innerHTML=`
        <div class="font-semibold">${e.name||`System ${e.id.slice(-4)}`}</div>
        <div class="text-xs">
          <div>Position: ${e.x}, ${e.y}</div>
          <div>Population: ${o.toLocaleString()}</div>
          <div>Owner: ${a}</div>
          <div>Planets: ${n.length}</div>
        </div>
      `,s.style.left=`${t+10}px`,s.style.top=`${i-10}px`,s.classList.remove("hidden")}else s.classList.add("hidden")}showContextMenu(e,t,i){const s=document.getElementById("context-menu");s.style.left=`${t}px`,s.style.top=`${i}px`,s.classList.remove("hidden"),s.dataset.systemId=e.id;const n=o=>{s.contains(o.target)||(s.classList.add("hidden"),document.removeEventListener("click",n))};setTimeout(()=>document.addEventListener("click",n),0)}startRenderLoop(){const e=t=>{const i=t-this.lastTime;this.lastTime=t,this.updateCamera(i),(this.isDirty||this.isMoving)&&(this.clear(),this.drawBackground(),this.drawLanes(),this.drawFleetRoutes(),this.drawCachedTerritorialBorders(),this.drawSystems(),this.drawFleets(i),this.drawUI(),this.isDirty=!1),this.animationFrame=requestAnimationFrame(e)};this.animationFrame=requestAnimationFrame(e)}updateCamera(e){const t=this.cameraSpeed*(e/16),i=this.targetViewX-this.viewX,s=this.targetViewY-this.viewY;Math.abs(i)>.1||Math.abs(s)>.1?(this.viewX+=i*t,this.viewY+=s*t,this.isMoving=!0,this.isDirty=!0):(this.viewX=this.targetViewX,this.viewY=this.targetViewY,this.isMoving=!1)}clear(){this.ctx.fillStyle=this.colors.background,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}drawBackground(){this.ctx.globalAlpha=.1;const e=Date.now()*1e-4;for(let r=0;r<3;r++){const a=r*150,l=Math.sin(e+r)*200+a,c=Math.cos(e*.7+r)*150+a,h=300+Math.sin(e*.5+r)*50,d=this.ctx.createRadialGradient(l,c,0,l,c,h);d.addColorStop(0,this.colors.nebula),d.addColorStop(.5,"rgba(64, 128, 255, 0.05)"),d.addColorStop(1,"rgba(0, 0, 0, 0)"),this.ctx.fillStyle=d,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}this.ctx.globalAlpha=1,this.ctx.strokeStyle=this.colors.grid,this.ctx.lineWidth=1,this.ctx.globalAlpha=.15;const t=100,i=Math.floor((-this.viewX-this.canvas.width/2/this.zoom)/t)*t,s=Math.ceil((-this.viewX+this.canvas.width/2/this.zoom)/t)*t,n=Math.floor((-this.viewY-this.canvas.height/2/this.zoom)/t)*t,o=Math.ceil((-this.viewY+this.canvas.height/2/this.zoom)/t)*t;this.ctx.beginPath();for(let r=i;r<=s;r+=t){const a=this.worldToScreen(r,0);this.ctx.moveTo(a.x,0),this.ctx.lineTo(a.x,this.canvas.height)}for(let r=n;r<=o;r+=t){const a=this.worldToScreen(0,r);this.ctx.moveTo(0,a.y),this.ctx.lineTo(this.canvas.width,a.y)}this.ctx.stroke(),this.ctx.globalAlpha=1}drawLanes(){if(this.drawNavigationLanes(),!this.trades||this.trades.length===0){this.lanes&&this.lanes.length>0&&(this.ctx.strokeStyle=this.colors.lane,this.ctx.lineWidth=2,this.ctx.globalAlpha=.6,this.lanes.forEach(e=>{const t=this.worldToScreen(e.fromX,e.fromY),i=this.worldToScreen(e.toX,e.toY);this.ctx.beginPath(),this.ctx.moveTo(t.x,t.y),this.ctx.lineTo(i.x,i.y),this.ctx.stroke()}),this.ctx.globalAlpha=1);return}this.ctx.globalAlpha=.7,this.trades.forEach(e=>{const t=this.systems.find(r=>r.id===e.from_id),i=this.systems.find(r=>r.id===e.to_id);if(!t||!i)return;const s=this.worldToScreen(t.x,t.y),n=this.worldToScreen(i.x,i.y);let o=this.colors.lane;this.hoveredTradeRoutes&&this.hoveredTradeRoutes.some(r=>r.id===e.id)?(o=this.colors.laneActive,this.ctx.lineWidth=3):this.ctx.lineWidth=2,this.ctx.strokeStyle=o,this.ctx.beginPath(),this.ctx.moveTo(s.x,s.y),this.ctx.lineTo(n.x,n.y),this.ctx.stroke()}),this.ctx.globalAlpha=1}drawNavigationLanes(){if(!this.selectedSystem||this.systems.length===0)return;this.ctx.strokeStyle="rgba(64, 128, 255, 0.15)",this.ctx.lineWidth=1,this.ctx.globalAlpha=.8,this.ctx.setLineDash([3,6]);const e=this.selectedSystem.x,t=this.selectedSystem.y;this.systems.forEach(i=>{if(i.id===this.selectedSystem.id)return;const s=i.x-e,n=i.y-t;if(Math.sqrt(s*s+n*n)>800)return;const r=this.worldToScreen(e,t),a=this.worldToScreen(i.x,i.y);this.ctx.beginPath(),this.ctx.moveTo(r.x,r.y),this.ctx.lineTo(a.x,a.y),this.ctx.stroke()}),this.ctx.setLineDash([]),this.ctx.globalAlpha=1}drawFleetRoutes(){this.fleetRoutes.length!==0&&(this.ctx.strokeStyle="#8b5cf6",this.ctx.lineWidth=3,this.ctx.globalAlpha=.8,this.fleetRoutes.forEach(e=>{const t=this.worldToScreen(e.from.x,e.from.y),i=this.worldToScreen(e.to.x,e.to.y);this.ctx.setLineDash([10,5]),this.ctx.lineDashOffset=-Date.now()/50,this.ctx.beginPath(),this.ctx.moveTo(t.x,t.y),this.ctx.lineTo(i.x,i.y),this.ctx.stroke();const s=Math.atan2(i.y-t.y,i.x-t.x),n=15;this.ctx.setLineDash([]),this.ctx.fillStyle="#8b5cf6",this.ctx.beginPath(),this.ctx.moveTo(i.x,i.y),this.ctx.lineTo(i.x-n*Math.cos(s-Math.PI/6),i.y-n*Math.sin(s-Math.PI/6)),this.ctx.lineTo(i.x-n*Math.cos(s+Math.PI/6),i.y-n*Math.sin(s+Math.PI/6)),this.ctx.closePath(),this.ctx.fill()}),this.ctx.setLineDash([]),this.ctx.globalAlpha=1)}showFleetRoute(e,t){this.fleetRoutes.push({from:e,to:t,timestamp:Date.now()}),setTimeout(()=>{this.fleetRoutes=this.fleetRoutes.filter(i=>i.timestamp!==this.fleetRoutes[this.fleetRoutes.length-1].timestamp),this.isDirty=!0},3e3),this.isDirty=!0}showMultiFleetRoute(e){const t=Date.now();for(let i=0;i<e.length-1;i++)this.fleetRoutes.push({from:e[i],to:e[i+1],timestamp:t,isMultiHop:!0,hopIndex:i});setTimeout(()=>{this.fleetRoutes=this.fleetRoutes.filter(i=>i.timestamp!==t),this.isDirty=!0},5e3),this.isDirty=!0}drawFleetRoutes(){this.fleetRoutes.length!==0&&(this.fleetRoutes.forEach(e=>{const t=this.worldToScreen(e.from.x,e.from.y),i=this.worldToScreen(e.to.x,e.to.y);if(e.isMultiHop){const s=["#8b5cf6","#f59e0b","#ef4444","#10b981","#3b82f6"],n=s[e.hopIndex%s.length];this.ctx.strokeStyle=n,this.ctx.lineWidth=2,this.ctx.globalAlpha=.9,this.ctx.setLineDash([10,5])}else this.ctx.strokeStyle="#8b5cf6",this.ctx.lineWidth=3,this.ctx.globalAlpha=.8,this.ctx.setLineDash([]);this.ctx.beginPath(),this.ctx.moveTo(t.x,t.y),this.ctx.lineTo(i.x,i.y),this.ctx.stroke()}),this.ctx.globalAlpha=1,this.ctx.setLineDash([]))}drawSystems(){this.systems.forEach(e=>{const t=this.worldToScreen(e.x,e.y);if(t.x<-50||t.x>this.canvas.width+50||t.y<-50||t.y>this.canvas.height+50)return;let i=1;this.hoveredSystem&&this.hoveredSystem.id===e.id&&(i=1.2);let s,n=!1,o=!1;for(const[f,g]of this.connectedSystems)if(g.system.id===e.id){n=!0;break}window.gameState&&(o=window.gameState.getSystemPlanets(e.id).some(g=>g.colonized_by===this.currentUserId)),o?s=this.colors.starPlayerOwned:e.owner_id?s=this.colors.starOtherOwned:s=this.colors.starUnowned;const r=this.systemPlanetCounts.get(e.id)||1,a=Math.min(1+(r-1)*.2,2),l=6*this.zoom*a,c=l*i,h=20*this.zoom*i*a,d=this.ctx.createRadialGradient(t.x,t.y,0,t.x,t.y,h);d.addColorStop(0,s+"40"),d.addColorStop(.3,s+"20"),d.addColorStop(1,s+"00"),this.ctx.fillStyle=d,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,h,0,Math.PI*2),this.ctx.fill(),n&&this.selectedSystem&&(this.ctx.strokeStyle="#ffffff80",this.ctx.lineWidth=2,this.ctx.setLineDash([5,5]),this.ctx.beginPath(),this.ctx.arc(t.x,t.y,c+4,0,Math.PI*2),this.ctx.stroke(),this.ctx.setLineDash([]));const u=this.ctx.createRadialGradient(t.x,t.y,0,t.x,t.y,c);if(u.addColorStop(0,"#ffffff"),u.addColorStop(.7,s),u.addColorStop(1,s+"cc"),this.ctx.fillStyle=u,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,c,0,Math.PI*2),this.ctx.fill(),o&&(this.ctx.strokeStyle="#00ff88",this.ctx.lineWidth=2*this.zoom*i,this.ctx.globalAlpha=.9,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,c+2,0,Math.PI*2),this.ctx.stroke(),this.ctx.globalAlpha=1),o&&this.zoom>.6&&(this.ctx.strokeStyle=this.colors.starPlayerOwned,this.ctx.lineWidth=1,this.ctx.globalAlpha=.8,this.ctx.beginPath(),this.ctx.moveTo(t.x-l*1.5,t.y),this.ctx.lineTo(t.x+l*1.5,t.y),this.ctx.moveTo(t.x,t.y-l*1.5),this.ctx.lineTo(t.x,t.y+l*1.5),this.ctx.stroke(),this.ctx.globalAlpha=1),this.selectedSystem&&this.selectedSystem.id===e.id){const f=Date.now()*.005,g=(l+8*this.zoom)*i;this.ctx.strokeStyle=this.colors.selection,this.ctx.lineWidth=3*this.zoom*i,this.ctx.globalAlpha=.9,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,g,0,Math.PI*2),this.ctx.stroke();const y=(l+(6+Math.sin(f)*3)*this.zoom)*i;this.ctx.strokeStyle=this.colors.selection,this.ctx.lineWidth=2*this.zoom*i,this.ctx.globalAlpha=.7+Math.sin(f)*.3,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,y,0,Math.PI*2),this.ctx.stroke(),this.ctx.globalAlpha=1}if(this.zoom>.8){const f=Math.floor(11*this.zoom);this.ctx.font=`${f}px monospace`,this.ctx.textAlign="center";const g=c+5*this.zoom;this.ctx.fillStyle="rgba(0, 0, 0, 0.8)",this.ctx.fillText(e.name||`S${e.id.slice(-3)}`,t.x+1,t.y-g+1),this.ctx.fillStyle="rgba(255, 255, 255, 0.95)",this.ctx.fillText(e.name||`S${e.id.slice(-3)}`,t.x,t.y-g)}let m=0;if(window.gameState&&(m=window.gameState.getSystemPlanets(e.id).reduce((g,y)=>g+(y.Pop||0),0)),m>0&&this.zoom>.5){const f=Math.floor(9*this.zoom);this.ctx.font=`${f}px monospace`,this.ctx.textAlign="center";const g=16*this.zoom,y=12*this.zoom,x=g*i,b=y*i,T=t.y+c+2*this.zoom,S=T+b-3*this.zoom*i;this.ctx.fillStyle="rgba(241, 169, 255, 0.2)",this.ctx.fillRect(t.x-x/2,T,x,b),this.ctx.fillStyle="#f1a9ff",this.ctx.fillText(m.toLocaleString(),t.x,S)}})}drawCachedTerritorialBorders(){if(!window.gameState)return;const e=new Set;this.systems.forEach(n=>{window.gameState.getSystemPlanets(n.id).forEach(r=>{r.colonized_by&&e.add(r.colonized_by)})});const t={[this.currentUserId]:"0, 255, 102"},i=["241, 169, 255","255, 107, 107","139, 92, 246","34, 197, 94","249, 115, 22","236, 72, 153","14, 165, 233","168, 85, 247"];let s=0;e.forEach(n=>{n!==this.currentUserId&&(t[n]=i[s%i.length],s++)}),e.forEach(n=>{var l;const o=this.systems.filter(c=>window.gameState.getSystemPlanets(c.id).some(d=>d.colonized_by===n));if(o.length<1)return;const r=this.createTerritorialCacheKey(o,n);this.playerTerritorialCaches||(this.playerTerritorialCaches={}),((l=this.playerTerritorialCaches[n])==null?void 0:l.cacheKey)!==r&&(this.playerTerritorialCaches[n]={cacheKey:r,contours:this.computeTerritorialContours(o)});const a=this.playerTerritorialCaches[n];if(a!=null&&a.contours){const c=t[n]||"128, 128, 128",h=n===this.currentUserId;this.drawTerritorialContours(a.contours,c,h)}})}createTerritorialCacheKey(e,t){const i=e.map(n=>`${n.id}:${n.x}:${n.y}`).sort().join("|"),s=`${Math.floor(this.viewX/50)}:${Math.floor(this.viewY/50)}:${Math.floor(this.zoom*10)}`;return`${t}:${i}@${s}`}computeTerritorialContours(e){const t=this.getVisibleWorldBounds(),i=40,s=this.calculateInfluenceField(e,t,i);return this.extractTerritorialContours(s,t,i)}drawUnifiedTerritories(e,t="0, 255, 102",i=!0){e.forEach(n=>{this.drawSimpleInfluenceBorder(n,e,200,t,i)})}drawSimpleInfluenceBorder(e,t,i,s,n){this.ctx.save();const o=this.worldToScreen(e.x,e.y),r=i*this.zoom,a=this.ctx.createRadialGradient(o.x,o.y,0,o.x,o.y,r),l=n?.1:.05;a.addColorStop(0,`rgba(${s}, ${l})`),a.addColorStop(1,`rgba(${s}, 0)`),this.ctx.fillStyle=a,this.ctx.beginPath(),this.ctx.arc(o.x,o.y,r,0,Math.PI*2),this.ctx.fill(),this.ctx.restore()}getVisibleWorldBounds(){const t=this.screenToWorld(-200,-200),i=this.screenToWorld(this.canvas.width+200,this.canvas.height+200);return{minX:t.x,minY:t.y,maxX:i.x,maxY:i.y}}calculateInfluenceField(e,t,i){const s=Math.ceil((t.maxX-t.minX)/i),n=Math.ceil((t.maxY-t.minY)/i),o=new Array(n).fill(null).map(()=>new Array(s).fill(0)),r=150;for(let a=0;a<n;a++)for(let l=0;l<s;l++){const c=t.minX+l*i,h=t.minY+a*i;let d=0,u=0;this.systems.filter(f=>{const g=f.x-c,y=f.y-h;return Math.abs(g)<r&&Math.abs(y)<r}).forEach(f=>{const g=f.x-c,y=f.y-h,x=Math.sqrt(g*g+y*y);if(x<r){const b=Math.max(0,1-x/r);e.some(S=>S.id===f.id)?d+=b*b:window.gameState&&window.gameState.getSystemPlanets(f.id).some(O=>O.colonized_by&&O.colonized_by!==this.currentUserId)&&(u+=b*b*.6)}}),o[a][l]=d-u}return o}extractTerritorialContours(e,t,i){const s=[],n=e.length,o=e[0].length,r=new Array(n).fill(null).map(()=>new Array(o).fill(!1)),a=.2;for(let l=0;l<n-1;l++)for(let c=0;c<o-1;c++){if(r[l][c])continue;if(e[l][c]>a){const d=this.traceContour(e,c,l,a,t,i,r);d.length>4&&s.push(d)}}return s}traceContour(e,t,i,s,n,o,r){const a=[],l=e.length,c=e[0].length,h=[{x:t,y:i}],d=new Set;for(;h.length>0;){const{x:u,y:m}=h.shift();u<0||u>=c||m<0||m>=l||r[m][u]||e[m][u]<=s||(r[m][u]=!0,d.add(`${u},${m}`),h.push({x:u+1,y:m},{x:u-1,y:m},{x:u,y:m+1},{x:u,y:m-1}))}return d.forEach(u=>{const[m,f]=u.split(",").map(Number);if([{x:m+1,y:f},{x:m-1,y:f},{x:m,y:f+1},{x:m,y:f-1}].some(x=>x.x<0||x.x>=c||x.y<0||x.y>=l?!0:e[x.y][x.x]<=s)){const x=n.minX+m*o,b=n.minY+f*o,T=this.worldToScreen(x,b);a.push({x:T.x,y:T.y,worldX:x,worldY:b})}}),this.orderContourPoints(a)}orderContourPoints(e){if(e.length<3)return e;const t=e.reduce((s,n)=>s+n.x,0)/e.length,i=e.reduce((s,n)=>s+n.y,0)/e.length;return e.sort((s,n)=>{const o=Math.atan2(s.y-i,s.x-t),r=Math.atan2(n.y-i,n.x-t);return o-r})}drawTerritorialContours(e,t="34, 197, 94",i=!0){e.length!==0&&(this.ctx.save(),this.ctx.globalCompositeOperation="screen",e.forEach(s=>{if(s.length<3)return;this.ctx.beginPath(),this.ctx.moveTo(s[0].x,s[0].y);for(let l=1;l<s.length;l++){const c=s[l],h=s[(l+1)%s.length],d=c.x+(h.x-c.x)*.5,u=c.y+(h.y-c.y)*.5;this.ctx.quadraticCurveTo(c.x,c.y,d,u)}this.ctx.closePath();const n=this.getContourBounds(s),o=this.ctx.createRadialGradient(n.centerX,n.centerY,n.radius*.7,n.centerX,n.centerY,n.radius),a=Math.max(.1,(i?.25:.15)*this.zoom);o.addColorStop(0,`rgba(${t}, ${a*.05})`),o.addColorStop(.7,`rgba(${t}, ${a*.3})`),o.addColorStop(.9,`rgba(${t}, ${a*.6})`),o.addColorStop(1,`rgba(${t}, 0)`),this.ctx.fillStyle=o,this.ctx.fill(),this.ctx.strokeStyle=`rgba(${t}, ${a*.8})`,this.ctx.lineWidth=i?2*this.zoom:1.5*this.zoom,this.ctx.stroke()}),this.ctx.restore())}getContourBounds(e){let t=e[0].x,i=e[0].x,s=e[0].y,n=e[0].y;e.forEach(l=>{t=Math.min(t,l.x),i=Math.max(i,l.x),s=Math.min(s,l.y),n=Math.max(n,l.y)});const o=(t+i)/2,r=(s+n)/2,a=Math.max(i-t,n-s)/2;return{centerX:o,centerY:r,radius:a}}drawFleets(e){this.fleets.forEach(t=>{let i,s,n=!1,o=0;if(t.destination_system&&t.destination_system!==""&&t.current_system&&t.current_system!==""&&t.destination_system!==t.current_system){const l=this.systems.find(f=>f.id===t.current_system),c=this.systems.find(f=>f.id===t.destination_system);if(!l||!c)return;const h=c.x-l.x,d=c.y-l.y;if(Math.sqrt(h*h+d*d)>800)return;n=!0;let m=.5;if(t.eta){const f=new Date,g=new Date(t.eta),y=new Date(g.getTime()-2*60*1e3),x=g.getTime()-y.getTime(),b=f.getTime()-y.getTime();m=Math.max(0,Math.min(1,b/x))}i=l.x+(c.x-l.x)*m,s=l.y+(c.y-l.y)*m,o=Math.atan2(c.y-l.y,c.x-l.x)}else if(t.current_system&&t.current_system!==""){const l=this.systems.find(c=>c.id===t.current_system);if(!l)return;i=l.x+15,s=l.y+15}else return;const r=this.worldToScreen(i,s),a=this.selectedFleet&&this.selectedFleet.id===t.id;if(n){this.ctx.fillStyle=a?"#fbbf24":"#8b5cf6",this.ctx.strokeStyle=a?"#f59e0b":"#ffffff",this.ctx.lineWidth=a?3:2;const l=(a?14:12)*this.zoom;this.ctx.save(),this.ctx.translate(r.x,r.y),this.ctx.rotate(o),this.ctx.beginPath(),this.ctx.moveTo(l,0),this.ctx.lineTo(-l/2,l/2),this.ctx.lineTo(-l/2,-l/2),this.ctx.closePath(),this.ctx.fill(),this.ctx.stroke(),this.ctx.restore();const c=(15+Math.sin(Date.now()/200)*5)*this.zoom,h=this.ctx.createRadialGradient(r.x,r.y,0,r.x,r.y,c);h.addColorStop(0,"rgba(139, 92, 246, 0.3)"),h.addColorStop(1,"rgba(139, 92, 246, 0)"),this.ctx.fillStyle=h,this.ctx.beginPath(),this.ctx.arc(r.x,r.y,c,0,Math.PI*2),this.ctx.fill()}else{this.ctx.fillStyle=a?"#fbbf24":this.colors.fleet,this.ctx.strokeStyle=a?"#f59e0b":"#ffffff",this.ctx.lineWidth=a?2:1;const l=(a?10:8)*this.zoom;this.ctx.beginPath(),this.ctx.moveTo(r.x,r.y-l),this.ctx.lineTo(r.x-l,r.y+l),this.ctx.lineTo(r.x+l,r.y+l),this.ctx.closePath(),this.ctx.fill(),this.ctx.stroke(),a&&(this.ctx.strokeStyle="#fbbf24",this.ctx.lineWidth=2,this.ctx.globalAlpha=.7,this.ctx.beginPath(),this.ctx.arc(r.x,r.y,l*2,0,Math.PI*2),this.ctx.stroke(),this.ctx.globalAlpha=1)}this.zoom>.5&&(this.ctx.fillStyle="#ffffff",this.ctx.font=`${10*this.zoom}px Arial`,this.ctx.textAlign="center",this.ctx.fillText(t.name||"Fleet",r.x,r.y-16*this.zoom))})}drawUI(){this.ctx.fillStyle="#ffffff",this.ctx.font="12px monospace",this.ctx.textAlign="left",this.ctx.fillText(`Zoom: ${(this.zoom*100).toFixed(0)}%`,10,25);const e=this.screenToWorld(this.canvas.width/2,this.canvas.height/2);this.ctx.fillText(`Center: ${e.x.toFixed(0)}, ${e.y.toFixed(0)}`,10,45)}setSystems(e){console.log("MapRenderer: Setting systems",e.length,"systems"),this.systems=e,this.updateSystemPlanetCounts(),!this.initialViewSet&&e.length>0&&(this.fitToSystems(),this.initialViewSet=!0),this.isDirty=!0}setTrades(e){this.trades=e||[]}updateSystemPlanetCounts(){if(this.systemPlanetCounts.clear(),window.gameState&&window.gameState.planets)for(const e of window.gameState.planets){const t=e.system_id,i=this.systemPlanetCounts.get(t)||0;this.systemPlanetCounts.set(t,i+1)}}setLanes(e){this.lanes=e,this.updateSystemPlanetCounts()}setFleets(e){this.fleets=e,this.isDirty=!0}getFleetAt(e,t){for(const s of this.fleets){let n,o;if(s.destination_system&&s.destination_system!==""&&s.current_system&&s.current_system!==""&&s.destination_system!==s.current_system){const a=this.systems.find(h=>h.id===s.current_system),l=this.systems.find(h=>h.id===s.destination_system);if(!a||!l)continue;let c=.5;if(s.eta){const h=new Date,d=new Date(s.eta),u=new Date(d.getTime()-2*60*1e3),m=d.getTime()-u.getTime(),f=h.getTime()-u.getTime();c=Math.max(0,Math.min(1,f/m))}n=a.x+(l.x-a.x)*c,o=a.y+(l.y-a.y)*c}else if(s.current_system&&s.current_system!==""){const a=this.systems.find(l=>l.id===s.current_system);if(!a)continue;n=a.x+15,o=a.y+15}else continue;if(Math.sqrt(Math.pow(e-n,2)+Math.pow(t-o,2))<=20/this.zoom)return s}return null}selectFleet(e){this.selectedFleet=e,this.isDirty=!0,e&&this.canvas.dispatchEvent(new CustomEvent("fleetSelected",{detail:{fleet:e},bubbles:!0}))}getFleetCurrentSystem(e){return!e||!e.current_system?null:this.systems.find(t=>t.id===e.current_system)}getSelectedFleet(){return this.selectedFleet}setCurrentUserId(e){this.currentUserId!==e&&(this.currentUserId=e,this.territorialCacheKey=null)}setSelectedSystem(e){this.selectedSystem=e,this.updateConnectedSystems()}centerOnSystem(e){const t=this.systems.find(i=>i.id===e);t&&(this.targetViewX=-t.x,this.targetViewY=-t.y)}fitToSystems(){if(this.systems.length===0)return;const e=Math.min(...this.systems.map(h=>h.x)),t=Math.max(...this.systems.map(h=>h.x)),i=Math.min(...this.systems.map(h=>h.y)),s=Math.max(...this.systems.map(h=>h.y)),n=(e+t)/2,o=(i+s)/2,r=t-e+500,a=s-i+500,l=this.canvas.width/r,c=this.canvas.height/a;this.zoom=Math.min(l,c,this.maxZoom),this.zoom>.25&&(this.zoom=.25),this.viewX=-n,this.viewY=-o,this.targetViewX=this.viewX,this.targetViewY=this.viewY}destroy(){this.animationFrame&&cancelAnimationFrame(this.animationFrame)}}const Be="modulepreload",De=function(p){return"/"+p},ae={},le=function(e,t,i){let s=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const o=document.querySelector("meta[property=csp-nonce]"),r=(o==null?void 0:o.nonce)||(o==null?void 0:o.getAttribute("nonce"));s=Promise.allSettled(t.map(a=>{if(a=De(a),a in ae)return;ae[a]=!0;const l=a.endsWith(".css"),c=l?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${a}"]${c}`))return;const h=document.createElement("link");if(h.rel=l?"stylesheet":Be,l||(h.as="script"),h.crossOrigin="",h.href=a,r&&h.setAttribute("nonce",r),document.head.appendChild(h),l)return new Promise((d,u)=>{h.addEventListener("load",d),h.addEventListener("error",()=>u(new Error(`Unable to preload CSS for ${a}`)))})}))}function n(o){const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=o,window.dispatchEvent(r),!r.defaultPrevented)throw o}return s.then(o=>{for(const r of o||[])r.status==="rejected"&&n(r.reason);return e().catch(n)})};class ze{constructor(){this.currentUser=null,this.gameState=null,this.tickTimer=null,this.currentSystemId=null,this.planetTypes=new Map,this.pb=null,window.uiController=this,this.expandedView=document.getElementById("expanded-view-container"),this.expandedView?(this.expandedView.classList.add("hidden","floating-panel"),this.expandedView.style.left="-2000px",this.expandedView.style.top="-2000px"):console.error("#expanded-view-container not found during UIController construction")}setPocketBase(e){this.pb=e,this.loadPlanetTypes()}async loadPlanetTypes(){try{if(!this.pb)return;const e=await this.pb.collection("planet_types").getFullList();this.planetTypes.clear(),e.forEach(t=>{const i={name:t.name,icon:t.icon||""};this.planetTypes.set(t.name.toLowerCase(),i),this.planetTypes.set(t.id,i)})}catch(e){console.warn("Failed to load planet types:",e)}}getPlanetTypeIcon(e){if(!e)return'<img src="/placeholder-planet.svg" class="w-6 h-6" alt="Unknown planet type" />';let t=this.planetTypes.get(e);if(t||(t=this.planetTypes.get(e.toLowerCase())),t&&t.icon){const s={highlands:"border-green-400",abundant:"border-emerald-400",fertile:"border-lime-400",mountain:"border-stone-400",desert:"border-yellow-400",volcanic:"border-red-400",swamp:"border-blue-400",barren:"border-gray-400",radiant:"border-purple-400",barred:"border-red-600"}[t.name.toLowerCase()]||"border-space-300";return`<img src="${t.icon}" class="w-6 h-6 rounded border-2 ${s}" alt="${t.name}" title="${t.name}" />`}return'<img src="/placeholder-planet.svg" class="w-6 h-6" alt="Unknown planet type" />'}getPlanetTypeName(e){if(!e)return"Unknown";let t=this.planetTypes.get(e);return t||(t=this.planetTypes.get(e.toLowerCase())),t?t.name:"Unknown"}getPlanetAnimatedGif(e){if(!e)return null;const t="/planets/default.gif",i={highlands:"/planets/highlands.gif",abundant:"/planets/abundant.gif",fertile:"/planets/fertile.gif",mountain:"/planets/mountain.gif",desert:"/planets/desert.gif",volcanic:"/planets/volcanic.gif",swamp:"/planets/swamp.gif",barren:"/planets/barren.gif",radiant:"/planets/radiant.gif",barred:"/planets/barred.gif",null:"/planets/null.gif"};let s=this.planetTypes.get(e);s||(s=this.planetTypes.get(e.toLowerCase()));const n=s?s.name.toLowerCase():e.toLowerCase();return`<img src="${i[n]||t}" class="w-12 h-12 rounded-full border-2 border-space-400 shadow-lg" alt="${n} planet" title="${n} planet" />`}getPlanetTypeGradient(e){if(!e)return"from-nebula-900/30 to-plasma-900/30";let t=this.planetTypes.get(e);return t||(t=this.planetTypes.get(e.toLowerCase())),t&&{highlands:"from-green-900/30 to-emerald-800/30",abundant:"from-green-800/30 to-lime-700/30",fertile:"from-green-700/30 to-green-600/30",mountain:"from-gray-800/30 to-slate-700/30",desert:"from-yellow-800/30 to-orange-700/30",volcanic:"from-red-900/30 to-orange-800/30",swamp:"from-cyan-900/30 to-teal-800/30",barren:"from-gray-900/30 to-gray-800/30",radiant:"from-yellow-600/30 to-amber-500/30",barred:"from-red-800/30 to-red-900/30"}[t.name.toLowerCase()]||"from-nebula-900/30 to-plasma-900/30"}getSystemGradient(e){if(!e||e.length===0)return"from-nebula-900/30 to-plasma-900/30";const t={};e.forEach(o=>{const r=o.planet_type||o.type;if(r){let a=this.planetTypes.get(r);if(a||(a=this.planetTypes.get(r.toLowerCase())),a){const l=a.name.toLowerCase();t[l]=(t[l]||0)+1}}});let i="unknown",s=0;for(const[o,r]of Object.entries(t))r>s&&(s=r,i=o);return{highlands:"from-green-900/30 to-emerald-800/30",abundant:"from-green-800/30 to-lime-700/30",fertile:"from-green-700/30 to-green-600/30",mountain:"from-gray-800/30 to-slate-700/30",desert:"from-yellow-800/30 to-orange-700/30",volcanic:"from-red-900/30 to-orange-800/30",swamp:"from-cyan-900/30 to-teal-800/30",barren:"from-gray-900/30 to-gray-800/30",radiant:"from-yellow-600/30 to-amber-500/30",barred:"from-red-800/30 to-red-900/30"}[i]||"from-nebula-900/30 to-plasma-900/30"}async getResourceNodes(e){if(!this.pb)return[];try{return await this.pb.collection("resource_nodes").getFullList({filter:`planet_id = "${e}"`,expand:"resource_type"})}catch(t){return console.warn("Failed to load resource nodes:",t),[]}}async loadResourceTypes(){if(!this.pb)return[];try{return await this.pb.collection("resource_types").getFullList()}catch(e){return console.warn("Failed to load resource types:",e),[]}}async getResourceIcons(e){const t=[];if(e.resourceNodes&&e.resourceNodes.length>0){const i=await this.loadResourceTypes(),s={};i.forEach(o=>{s[o.id]=o});const n=new Set;e.resourceNodes.forEach(o=>{let r;if(o.expand&&o.expand.resource_type?r=o.expand.resource_type:r=s[o.resource_type],r){const a=r.name.toLowerCase();if(!n.has(a)){n.add(a);const l=r.icon||"/placeholder-planet.svg",c=r.name;t.push(`<img src="${l}" class="w-5 h-5" title="${c}" alt="${c}" />`)}}})}return t}clearExpandedView(){this.expandedView&&(this.expandedView._dragCleanup&&(this.expandedView._dragCleanup(),delete this.expandedView._dragCleanup),this.expandedView.classList.add("hidden"),this.expandedView.style.left="-2000px",this.expandedView.style.top="-2000px",this.expandedView.style.right="auto"),this.currentSystemId=null}positionPanel(e,t,i){const s=e.classList.contains("hidden");s&&(e.classList.remove("hidden"),e.style.left="-9999px",e.style.top="-9999px");const n=e.offsetWidth,o=e.offsetHeight,r=window.innerWidth,a=window.innerHeight,l=20,c=120;let h=i-c,d=t+c;const u=[{left:t+c,top:i-c},{left:t-n-c,top:i-c},{left:t+c,top:i+c},{left:t-n-c,top:i+c},{left:t+c,top:i-o/2},{left:t-n-c,top:i-o/2}];let m=u[0];for(const f of u)if(f.left>=l&&f.left+n+l<=r&&f.top>=l&&f.top+o+l<=a){m=f;break}d=m.left,h=m.top,d<l&&(d=l),d+n+l>r&&(d=r-n-l),h<l&&(h=l),h+o+l>a&&(h=a-o-l),e.style.left=`${d}px`,e.style.top=`${h}px`,s&&e.style.left==="-9999px"&&e.classList.add("hidden")}async displaySystemView(e,t,i,s){var h;const n=this.expandedView;if(!n){console.error("#expanded-view-container not found in displaySystemView");return}this.currentSystemId===e.id&&n.classList.contains("hidden"),n.className="floating-panel",this.currentSystemId=e.id;let o=0;const r=(h=this.currentUser)==null?void 0:h.id;t&&t.length>0&&t.forEach(d=>{d.colonized_by&&d.colonized_by,o+=d.Pop||0}),t&&t.length>0&&t.map(d=>{const u=d.name||`Planet ${d.id.slice(-4)}`,m=d.planet_type||d.type,f=this.getPlanetTypeIcon(m),g=this.getPlanetTypeName(m),y=d.colonized_by===r;d.Pop,d.MaxPopulation;let x="";d.colonized_by?y?x='<span class="text-xs text-green-400 flex items-center gap-1"><span class="material-icons text-xs">check_circle</span>Your Colony</span>':x=`<span class="text-xs text-red-400 flex items-center gap-1"><span class="material-icons text-xs">block</span>${d.colonized_by_name||"Occupied"}</span>`:x='<span class="text-xs text-gray-400 flex items-center gap-1"><span class="material-icons text-xs">radio_button_unchecked</span>Uncolonized</span>';const b=this.getResourceIcons(d);let T="";return b.length>0&&(T=`
            <div class="mt-2 flex gap-1 items-center">
              ${b.join("")}
            </div>
          `),`
          <li class="mb-2 p-3 bg-space-700 hover:bg-space-600 rounded-md cursor-pointer transition-all duration-200 border border-transparent hover:border-space-500"
              onclick="window.uiController.displayPlanetView(JSON.parse(decodeURIComponent('${encodeURIComponent(JSON.stringify(d))}')))">
            <div class="flex items-start justify-between">
              <div class="flex-1">
                <div class="flex items-center gap-2">
                  <div class="flex items-center justify-center w-8 h-8">${f}</div>
                  <div>
                    <div class="font-semibold">${u}</div>
                    <div class="text-xs text-space-300">${g} • Size ${d.size||"N/A"}</div>
                  </div>
                </div>
                ${T}
              </div>
              <div class="text-right">
                ${x}
              </div>
            </div>
          </li>
        `}).join(""),n.innerHTML=`
      <div class="floating-panel-content">
        <div id="system-header" class="panel-header flex justify-between items-center p-3 cursor-move border-b border-space-700/50 bg-gradient-to-r from-nebula-900/30 to-plasma-900/30" draggable="false">
          <div class="flex items-center gap-2">
            <span class="material-icons text-space-400 drag-handle">drag_indicator</span>
            <span id="system-name" class="text-xl font-bold text-nebula-200"></span>
          </div>
          <div class="flex items-center gap-4">
            <div class="text-right">
              <div id="system-seed" class="font-semibold text-nebula-200 text-sm"></div>
              <div id="system-coords" class="font-mono text-xs text-gray-500"></div>
            </div>
            <button onclick="window.uiController.clearExpandedView()"
                    class="btn-icon hover:bg-space-700 rounded">
              <span class="material-icons text-sm">close</span>
            </button>
          </div>
        </div>
        <div class="p-4">

          <div class="flex-1 overflow-hidden flex flex-col">
            <div class="flex justify-end mb-2">
              <div class="text-xs text-space-400">
                <kbd class="px-1 py-0.5 bg-space-700 rounded text-xs">Click</kbd> Fleet to Select • <kbd class="px-1 py-0.5 bg-space-700 rounded text-xs">Shift+Click</kbd> System to Move • <kbd class="px-1 py-0.5 bg-space-700 rounded text-xs">↑↓←→</kbd> Navigate
              </div>
            </div>
            <ul id="system-planets-list" class="flex-1 overflow-y-auto pr-2 custom-scrollbar">
            </ul>
          </div>
        </div>
      </div>
      `;const a=this.getSystemGradient(t),l=n.querySelector("#system-header");l.className=`panel-header flex justify-between items-center p-3 cursor-move border-b border-space-700/50 bg-gradient-to-r ${a}`,n.querySelector("#system-name").textContent=e.name||`System ${e.id.slice(-4)}`,n.querySelector("#system-seed").textContent=`Seed: ${e.id.slice(-8)}`,n.querySelector("#system-coords").textContent=`${e.x}, ${e.y}`;const c=n.querySelector("#system-planets-list");await this.updatePlanetList(c,t,r),n.dataset.viewType="system",n.dataset.currentId=e.id,n.classList.remove("hidden"),i!==void 0&&s!==void 0?this.positionPanel(n,i,s):(n.style.left==="-2000px"||n.style.left==="-9999px"||!n.style.left)&&(n.style.top="20px",n.style.left="20px",n.style.right="auto"),this.makePanelDraggable(n)}makePanelDraggable(e){const t=e.querySelector(".panel-header");if(!t)return;e._dragCleanup&&e._dragCleanup();let i=!1,s,n,o,r;const a=d=>{if(d.target.closest(".panel-header")&&!d.target.closest("button")){const u=e.getBoundingClientRect();s=u.left,n=u.top,d.type==="touchstart"?(o=d.touches[0].clientX-s,r=d.touches[0].clientY-n):(o=d.clientX-s,r=d.clientY-n),i=!0,e.style.transition="none",e.style.right="auto",t.style.cursor="grabbing",d.preventDefault()}},l=()=>{i&&(i=!1,e.style.transition="",t.style.cursor="move")},c=d=>{if(i){d.preventDefault(),d.type==="touchmove"?(s=d.touches[0].clientX-o,n=d.touches[0].clientY-r):(s=d.clientX-o,n=d.clientY-r);const u=e.getBoundingClientRect(),m=window.innerWidth-u.width,f=window.innerHeight-u.height;s=Math.max(0,Math.min(s,m)),n=Math.max(0,Math.min(n,f)),e.style.left=`${s}px`,e.style.top=`${n}px`}};t.addEventListener("mousedown",a),document.addEventListener("mousemove",c),document.addEventListener("mouseup",l),t.addEventListener("touchstart",a),document.addEventListener("touchmove",c),document.addEventListener("touchend",l);const h=()=>{t.removeEventListener("mousedown",a),document.removeEventListener("mousemove",c),document.removeEventListener("mouseup",l),t.removeEventListener("touchstart",a),document.removeEventListener("touchmove",c),document.removeEventListener("touchend",l)};e._dragCleanup=h}async updatePlanetList(e,t,i){if(!t||t.length===0){e.innerHTML='<div class="text-sm text-space-400">No planets detected in this system.</div>';return}e.innerHTML="";for(const s of t){const n=await this.createEmbeddedPlanetContainer(s,i);e.appendChild(n)}}async createEmbeddedPlanetContainer(e,t){const i=e.id,s=e.name||`Planet ${e.id.slice(-4)}`,n=e.planet_type||e.type,o=this.getPlanetTypeName(n),r=this.getPlanetAnimatedGif(n),a=e.colonized_by===t,l=e.Pop||0,c=e.MaxPopulation||"N/A",h=await this.getResourceNodes(e.id);e.resourceNodes=h;const d=await this.getResourceIcons(e);let u="";e.colonized_by?a?u='<span class="text-xs text-green-400 flex items-center gap-1"><span class="material-icons text-xs">check_circle</span>Your Colony</span>':u=`<span class="text-xs text-red-400 flex items-center gap-1"><span class="material-icons text-xs">block</span>${e.colonized_by_name||"Occupied"}</span>`:u='<span class="text-xs text-gray-400 flex items-center gap-1"><span class="material-icons text-xs">radio_button_unchecked</span>Uncolonized</span>';const m=document.createElement("div");m.className="mb-3 p-3 bg-space-700/30 border border-space-600/50 rounded-lg hover:bg-space-650/40 transition-all duration-200 cursor-pointer",m.dataset.planetId=i,m.innerHTML=`
      <div class="flex items-start gap-4">
        <!-- Planet Icon -->
        <div class="flex-shrink-0">
          <div class="planet-icon-container w-16 h-16 flex items-center justify-center">
            <!-- GIF will be set via DOM manipulation -->
          </div>
        </div>

        <!-- Planet Info -->
        <div class="flex-1 min-w-0">
          <div class="flex items-start justify-between mb-2">
            <div>
              <h3 class="font-semibold text-lg text-nebula-200">${s}</h3>
              <div class="text-sm text-space-300">${o} • Size ${e.size||"N/A"}</div>
            </div>
            <div class="text-right">
              ${u}
              ${l>0?`<div class="text-sm text-green-400 mt-1">${l.toLocaleString()}/${c} pop</div>`:""}
            </div>
          </div>

          <!-- Resources -->
          ${d.length>0?`
            <div class="mb-2">
              <div class="text-xs text-space-400 mb-1">Resources:</div>
              <div class="flex items-center gap-1 flex-wrap">
                ${d.join("")}
              </div>
            </div>
          `:'<div class="text-xs text-space-500 mb-2">No resources detected</div>'}


        </div>
      </div>
    `;const f=m.querySelector(".planet-icon-container");return f&&r&&(f.innerHTML=r),m.onclick=()=>{window.uiController.displayPlanetView(e)},m}async displayPlanetView(e,t,i){var X,H,G,K,J,Z,Q,ee,te;const s=this.expandedView;if(!s){console.error("#expanded-view-container not found in displayPlanetView");return}const n=await this.getResourceNodes(e.id);e.resourceNodes=n,this.currentSystemId===e.id&&s.dataset.viewType==="planet"&&s.classList.contains("hidden"),s.className="floating-panel",this.currentSystemId=e.id,s.dataset.viewType="planet",s.dataset.currentId=e.id;const o=e.name||`Planet ${e.id.slice(-4)}`,r=e.planet_type||e.type,a=this.getPlanetTypeIcon(r),l=this.getPlanetTypeName(r),c=e.system_name||this.gameState&&((X=this.gameState.mapData.systems.find($=>$.id===e.system_id))==null?void 0:X.name)||e.system_id,h=e.MaxPopulation?Math.round((e.Pop||0)/e.MaxPopulation*100):0,d=h>80?"bg-green-500":h>50?"bg-yellow-500":"bg-orange-500";e.Credits!==void 0&&`${((H=e.Pop)==null?void 0:H.toLocaleString())||0}${((G=e.MaxPopulation)==null?void 0:G.toLocaleString())||"N/A"}${d}${h}${e.Morale||0}${e.Morale||0}${((K=e.Credits)==null?void 0:K.toLocaleString())||0}${((J=e.Food)==null?void 0:J.toLocaleString())||0}${((Z=e.Ore)==null?void 0:Z.toLocaleString())||0}${((Q=e.Goods)==null?void 0:Q.toLocaleString())||0}${((ee=e.Fuel)==null?void 0:ee.toLocaleString())||0}`;let u='<div class="text-sm text-space-400">No buildings constructed.</div>';e.Buildings&&Object.keys(e.Buildings).length>0&&(u=`<ul class="space-y-2">${Object.entries(e.Buildings).map(([M,j])=>{let _=M,N="🏢";if(this.gameState&&this.gameState.buildingTypes){const E=this.gameState.buildingTypes.find(L=>L.id===M||L.name.toLowerCase()===M.toLowerCase());E&&(_=E.name,_.toLowerCase().includes("farm")?N="🌾":_.toLowerCase().includes("mine")?N="⛏️":_.toLowerCase().includes("factory")?N="🏭":_.toLowerCase().includes("bank")?N="🏦":_.toLowerCase().includes("research")&&(N="🔬"))}return`
          <li class="p-3 bg-space-700 rounded-md flex items-center justify-between hover:bg-space-600 transition-colors">
            <div class="flex items-center gap-2">
              <span class="text-xl">${N}</span>
              <span class="font-semibold">${_}</span>
            </div>
            <span class="text-sm text-space-300">Level ${j}</span>
          </li>
        `}).join("")}</ul>`);const m=e.colonized_by&&e.colonized_by!=="",f=m&&e.colonized_by===((te=this.currentUser)==null?void 0:te.id),g=!m&&this.currentUser&&this.gameState;s.innerHTML=`
      <div class="floating-panel-content">
        <div id="planet-header" class="panel-header flex justify-between items-center p-3 cursor-move border-b border-space-700/50 bg-gradient-to-r from-nebula-900/30 to-plasma-900/30" draggable="false">
          <div class="flex items-center gap-2">
            <span class="material-icons text-space-400 drag-handle">drag_indicator</span>
            <span id="planet-icon" class="text-2xl"></span>
            <span id="planet-name" class="text-xl font-bold text-nebula-200"></span>
          </div>
          <div class="flex items-center gap-4">
            <div class="text-right">
              <div id="planet-seed" class="font-semibold text-nebula-200 text-sm"></div>
              <div id="planet-system" class="font-mono text-xs text-gray-500"></div>
            </div>
            <button onclick="window.uiController.clearExpandedView()"
                    class="btn-icon hover:bg-space-700 rounded">
              <span class="material-icons text-sm">close</span>
            </button>
          </div>
        </div>
        <div class="p-4">
          <div class="mb-4">
            <div id="planet-type-size" class="text-sm text-space-300 mb-3"></div>
            <div id="planet-resources-icons" class="flex gap-2 justify-center p-3 bg-gradient-to-r from-space-800/50 to-space-700/50 rounded-lg"></div>
          </div>

          <div id="planet-details-scroll-container" class="flex-1 overflow-y-auto pr-2 custom-scrollbar space-y-4">
            <div id="planet-resources-container" style="display: none;">
              <h3 class="text-lg font-semibold mb-3 text-nebula-200">Resources & Stats</h3>
              <div id="planet-resources-html"></div>
            </div>
            <div id="planet-buildings-container" style="display: none;">
              <h3 class="text-lg font-semibold mb-3 text-nebula-200">Buildings</h3>
              <div id="planet-buildings-html"></div>
            </div>
          </div>

          <div id="planet-actions-container" class="mt-4 space-y-2">
            <!-- Action buttons will be dynamically added here -->
          </div>
        </div>
      </div>
      `;const y=this.getPlanetTypeGradient(r),x=s.querySelector("#planet-header");x.className=`panel-header flex justify-between items-center p-3 cursor-move border-b border-space-700/50 bg-gradient-to-r ${y}`,s.querySelector("#planet-icon").innerHTML=this.getPlanetAnimatedGif(r)||a,s.querySelector("#planet-name").textContent=o,s.querySelector("#planet-seed").textContent=`Seed: ${e.id.slice(-8)}`,s.querySelector("#planet-system").textContent=c,s.querySelector("#planet-type-size").innerHTML=`
      <div class="text-center">
        <div class="font-medium">${l}</div>
        <div class="text-xs text-space-400">Size ${e.size||"N/A"} • ${c}</div>
      </div>
    `;const b=await this.getResourceIcons(e);s.querySelector("#planet-resources-icons").innerHTML=b.join("");let T='<div class="text-sm text-space-400">No resource deposits detected.</div>';if(n&&n.length>0){const M=await this.loadResourceTypes(),j={};M.forEach(E=>{j[E.id]=E});const _={};n.forEach(E=>{let L,F;E.expand&&E.expand.resource_type?(L=E.expand.resource_type.name,F=E.expand.resource_type):(F=j[E.resource_type],L=F?F.name:E.resource_type),L&&(_[L]||(_[L]={nodes:[],resourceTypeData:F}),_[L].nodes.push(E))}),T=`<ul class="space-y-2">${Object.entries(_).map(([E,L])=>{const{nodes:F,resourceTypeData:Y}=L,se=F.reduce((be,we)=>be+we.richness,0),ge=(se/F.length).toFixed(1),ie=F.length;return`
          <li class="p-3 bg-space-700 rounded-md flex items-center justify-between hover:bg-space-600 transition-colors">
            <div class="flex items-center gap-3">
              <img src="${(Y==null?void 0:Y.icon)||"/placeholder-planet.svg"}" class="w-6 h-6" title="${E}" alt="${E}" />
              <div>
                <span class="font-semibold">${E}</span>
                <div class="text-xs text-space-400">${ie} deposit${ie>1?"s":""}</div>
              </div>
            </div>
            <div class="text-right">
              <div class="text-sm font-medium">Richness: ${ge}</div>
              <div class="text-xs text-space-400">Total: ${se}</div>
            </div>
          </li>
        `}).join("")}</ul>`}const S=s.querySelector("#planet-resources-container"),v=s.querySelector("#planet-buildings-container");s.querySelector("#planet-resources-html").innerHTML=T,S.style.display="block";const O=S.querySelector("h3");O&&(O.textContent="Resource Deposits"),f?(s.querySelector("#planet-buildings-html").innerHTML=u,v.style.display="block"):v.style.display="none";const A=s.querySelector("#planet-actions-container");if(A.innerHTML="",g){if(this.getAvailableSettlerFleets(e.system_id).length>0){const M=document.createElement("button");M.className="w-full btn btn-success py-3 flex items-center justify-center gap-2",M.innerHTML='<span class="material-icons">rocket_launch</span> Colonize Planet (Settler Ship)',M.onclick=()=>window.uiController.colonizePlanetWrapper(e.id),A.appendChild(M)}}else if(!m&&this.currentUser&&this.gameState){const $=document.createElement("button");$.className="w-full btn btn-disabled py-3 flex items-center justify-center gap-2",$.innerHTML='<span class="material-icons">rocket_launch</span> Colonize Planet (Need Settler Ship)',$.disabled=!0,A.appendChild($)}if(f){const $=document.createElement("button");$.className="w-full btn btn-primary py-3 flex items-center justify-center gap-2",$.innerHTML="<span>🏗️</span> Construct Building",$.onclick=()=>window.uiController.showPlanetBuildModal(e),A.appendChild($)}const z=document.createElement("button");z.className="w-full btn btn-secondary py-3 flex items-center justify-center gap-2",z.textContent="← Back to System",z.onclick=()=>window.uiController.goBackToSystemView(e.system_id),A.appendChild(z),s.classList.remove("hidden"),t!==void 0&&i!==void 0?this.positionPanel(s,t,i):(s.style.left==="-2000px"||s.style.left==="-9999px"||!s.style.left)&&(s.style.top="20px",s.style.left="20px",s.style.right="auto"),this.makePanelDraggable(s)}showPlanetBuildModal(e){var o;if(!this.currentUser){this.showError("Please log in to construct buildings.");return}if(!e||!e.id){this.showError("Invalid planet data provided for construction.");return}const t=(o=this.gameState)==null?void 0:o.buildingTypes;if(!t||t.length===0){console.warn("Building types not available or empty in gameState for showPlanetBuildModal."),this.showModal(`Construct on ${e.name||`Planet ${e.id.slice(-4)}`}`,`<div class="text-space-400">No building types available or data is still loading.</div>
         <button class="w-full mt-2 btn btn-secondary" onclick="window.uiController.hideModal()">Close</button>`);return}const i=new Set;e.resourceNodes&&e.resourceNodes.length>0&&e.resourceNodes.forEach(r=>{r.expand&&r.expand.resource_type&&i.add(r.expand.resource_type.name.toLowerCase())});const s=t.map(r=>{var y,x;let a="Cost: ",l=!0,c=[];if(r.cost===void 0)a+="N/A (data missing)";else if(typeof r.cost=="number")a+=`${r.cost} Credits`;else if(typeof r.cost=="object"&&r.cost!==null){const b=(((y=this.gameState)==null?void 0:y.resourceTypes)||[]).reduce((S,v)=>(S[v.id]=v.name,S),{}),T=Object.entries(r.cost).map(([S,v])=>{const O=b[S]||S,A=i.has(O.toLowerCase());return A||(l=!1,c.push(O)),`<span class="${A?"text-green-400":"text-red-400"}">${v} ${O}</span>`});a+=T.join(", "),Object.keys(r.cost).length===0&&(a+="Free")}else a+="N/A";if(r.resource_nodes&&r.resource_nodes.length>0){const b=r.resource_nodes,T=(((x=this.gameState)==null?void 0:x.resourceTypes)||[]).reduce((S,v)=>(S[v.id]=v.name,S),{});b.forEach(S=>{const v=T[S]||S;i.has(v.toLowerCase())||(l=!1,c.push(v))})}const d=e.id.replace(/'/g,"\\'"),u=r.id.replace(/'/g,"\\'"),m=l?"w-full p-3 bg-space-700 hover:bg-space-600 rounded mb-2 text-left cursor-pointer":"w-full p-3 bg-space-800 rounded mb-2 text-left cursor-not-allowed opacity-60",f=l?`onclick="window.gameState.queueBuilding('${d}', '${u}'); window.uiController.hideModal();"`:"";let g="";return!l&&c.length>0&&(g=`<div class="text-xs text-red-400 mt-1">Missing: ${c.join(", ")}</div>`),`
      <button class="${m}" ${f} ${l?"":"disabled"}>
        <div class="font-semibold ${l?"":"text-space-400"}">${r.name||"Unknown Building"}</div>
        <div class="text-sm text-space-300">${r.description||"No description available."}</div>
        <div class="text-sm">${a}</div>
        ${g}
      </button>
    `}).join(""),n=i.size>0?`<div class="mb-4 p-3 bg-space-800 rounded">
           <div class="text-sm font-semibold mb-2">Available Resources:</div>
           <div class="text-xs text-space-300">${Array.from(i).map(r=>r.charAt(0).toUpperCase()+r.slice(1)).join(", ")}</div>
         </div>`:`<div class="mb-4 p-3 bg-space-800 rounded">
           <div class="text-sm text-red-400">No resource deposits found on this planet.</div>
         </div>`;this.showModal(`Construct on ${e.name||`Planet ${e.id.slice(-4)}`}`,`
      ${n}
      <div class="space-y-2 max-h-96 overflow-y-auto">
        ${s.length>0?s:'<div class="text-space-400">No buildings available to construct.</div>'}
      </div>
      <button class="w-full mt-4 btn btn-secondary" onclick="window.uiController.hideModal()">Cancel</button>
    `)}getAvailableSettlerFleets(e){return!this.gameState||!this.gameState.fleets?[]:this.gameState.fleets.filter(t=>{var i;return t.current_system!==e||t.owner_id!==((i=this.currentUser)==null?void 0:i.id)?!1:t.ships&&t.ships.some(s=>s.ship_type_name==="settler"&&s.count>0)})}colonizePlanetWrapper(e){if(!this.gameState||!this.gameState.mapData||!this.gameState.mapData.planets){this.showError("Game data not loaded. Cannot colonize.");return}const t=this.gameState.mapData.planets.find(i=>i.id===e);if(!t){this.showError("Planet data not found. Cannot colonize.");return}this.colonizePlanet(t.id,t.system_id)}async colonizePlanet(e,t=null){var i,s,n;try{const{pb:o}=await le(async()=>{const{pb:d}=await Promise.resolve().then(()=>Ae);return{pb:d}},void 0);if(!o.authStore.isValid){this.showError("Please log in first to colonize planets");return}let r=t;if(!r){const d=(n=(s=(i=this.gameState)==null?void 0:i.mapData)==null?void 0:s.planets)==null?void 0:n.find(u=>u.id===e);if(!d){this.showError("Planet not found in game data");return}r=d.system_id}const a=this.getAvailableSettlerFleets(r);if(a.length===0){this.showError("No settler ships available at this system");return}const l=a[0],c=await fetch(`${o.baseUrl}/api/orders/colonize`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:o.authStore.token},body:JSON.stringify({planet_id:e,fleet_id:l.id})}),h=await c.json();if(c.ok&&h.success){this.hideModal();const{gameState:d}=await le(async()=>{const{gameState:u}=await Promise.resolve().then(()=>Ne);return{gameState:u}},void 0);await d.refreshGameData(),this.gameState&&this.gameState.selectedSystem&&this.gameState.selectedSystem.id===r&&setTimeout(()=>{this.displaySystemView(this.gameState.selectedSystem)},100),this.showSuccessMessage("Planet colonized successfully! Your settler ship has established a new colony.")}else throw new Error(h.message||"Colonization failed")}catch(o){console.error("Colonization error:",o),this.showError(`Failed to colonize planet: ${o.message}`)}}goBackToSystemView(e){if(!this.gameState||!this.gameState.mapData||!this.gameState.mapData.systems){this.showError("Game data not fully loaded."),this.clearExpandedView();return}const t=this.gameState.mapData.systems.find(i=>i.id===e);if(t){let i=[];this.gameState.mapData.planets&&(i=this.gameState.mapData.planets.filter(s=>Array.isArray(s.system_id)?s.system_id.includes(t.id):s.system_id===t.id)),this.displaySystemView(t,i)}else this.showError("System data not found. Cannot go back."),this.clearExpandedView()}manageColony(e){if(!this.gameState||!this.gameState.mapData||!this.gameState.mapData.planets){this.showError("Game data not loaded. Cannot manage colony.");return}const t=this.gameState.mapData.planets.find(s=>s.id===e);if(!t){this.showError("Planet data not found.");return}const i=this.gameState.mapData.systems.find(s=>s.id===t.system_id);i?this.showBuildModal(i):this.showError("System for this planet not found.")}updateAuthUI(e){this.currentUser=e;const t=document.getElementById("login-btn"),i=document.getElementById("user-info"),s=document.getElementById("username");e?(t.classList.add("hidden"),i.classList.remove("hidden"),s.textContent=e.username):(t.classList.remove("hidden"),i.classList.add("hidden"),s.textContent="")}updateGameUI(e){this.gameState=e,this.updateResourcesUI(e.playerResources),this.updateGameStatusUI(e)}updateResourcesUI(e){var s,n;document.getElementById("credits").textContent=(s=e.credits)==null?void 0:s.toLocaleString();const t=document.getElementById("credit-income");((n=this.gameState)==null?void 0:n.creditIncome)>0?(t.textContent=`(+${this.gameState.creditIncome}/tick)`,t.style.display="inline"):t.style.display="none";const i=document.getElementById("credits-btn");i&&(i.onclick=()=>this.showCreditsBreakdown())}updateGameStatusUI(e){const t=document.getElementById("game-tick-display");if(t){const s=t.textContent,n=`Tick: ${e.currentTick}`;t.textContent=n,s!==n&&s!=="Tick: 0"&&(t.style.animation="none",t.offsetHeight,t.style.animation="flash 0.5s ease-out")}const i=document.getElementById("next-tick-display");if(i&&!this.tickTimer){const s=e.ticksPerMinute||6,n=Math.round(60/s);i.textContent=`Next Tick: (${n}s period)`}}startTickTimer(e){this.tickTimer&&clearInterval(this.tickTimer);const t=document.getElementById("next-tick-display"),i=()=>{const n=e-new Date;if(n<=0){t&&(t.textContent="Next Tick: Processing..."),clearInterval(this.tickTimer),this.tickTimer=null;return}const o=Math.floor(n/6e4),r=Math.floor(n%6e4/1e3);t&&(t.textContent=`Next Tick: ${o}:${r.toString().padStart(2,"0")}`)};i(),this.tickTimer=setInterval(i,1e3)}showModal(e,t){const i=document.getElementById("modal-overlay"),s=document.getElementById("modal-content");s.innerHTML=`
      <div class="flex justify-between items-center mb-4">
        <h2 class="text-xl font-bold">${e}</h2>
        <button id="modal-close" class="text-space-400 hover:text-space-200">&times;</button>
      </div>
      ${t}
    `,i.classList.remove("hidden"),document.getElementById("modal-close").addEventListener("click",()=>{this.hideModal()})}hideModal(){document.getElementById("modal-overlay").classList.add("hidden")}showError(e){this.showModal("Error",`
      <div class="text-red-400 mb-4">${e}</div>
      <button class="w-full btn btn-secondary" onclick="document.getElementById('modal-overlay').classList.add('hidden')">
        OK
      </button>
    `)}showBuildModal(e){var s;const t=(s=this.gameState)==null?void 0:s.buildingTypes;if(!t||t.length===0){console.warn("Building types not available or empty in gameState."),this.showModal(`Build in ${e.name||`System ${e.id.slice(-3)}`}`,'<div class="text-space-400">No buildings available to construct or building types are still loading.</div>');return}const i=t.map(n=>{var r;let o="Cost: ";if(typeof n.cost=="number")o+=`${n.cost} Credits`;else if(typeof n.cost=="object"){const a=(((r=this.gameState)==null?void 0:r.resourceTypes)||[]).reduce((l,c)=>(l[c.id]=c.name,l),{});o+=Object.entries(n.cost).map(([l,c])=>{const h=a[l]||l;return`${c} ${h}`}).join(", ")}else o+="N/A";return`
      <button class="w-full p-3 bg-space-700 hover:bg-space-600 rounded mb-2 text-left"
              onclick="window.gameState.queueBuilding('${e.id}', '${n.id}')">
        <div class="font-semibold">${n.name||"Unknown Building"}</div>
        <div class="text-sm text-space-300">${n.description||"No description available."}</div>
        <div class="text-sm text-green-400">${o}</div>
      </button>
    `}).join("");this.showModal(`Build in ${e.name||`System ${e.id.slice(-3)}`}`,`
      <div class="space-y-2">
        ${i.length>0?i:'<div class="text-space-400">No buildings available to construct.</div>'}
      </div>
    `)}showSendFleetModal(e){var s;const t=((s=this.gameState)==null?void 0:s.getOwnedSystems())||[];if(t.length===0){this.showError("You need to own at least one system to send fleets");return}const i=t.map(n=>`<option value="${n.id}">${n.name||`System ${n.id.slice(-3)}`}</option>`).join("");this.showModal("Send Fleet",`
      <form id="fleet-form" class="space-y-4">
        <div>
          <label class="block text-sm font-medium mb-1">From System:</label>
          <select id="from-system" class="w-full p-2 bg-space-700 border border-space-600 rounded">
            ${i}
          </select>
        </div>
        <div>
          <label class="block text-sm font-medium mb-1">To System:</label>
          <input type="text" id="to-system" value="${e.name||`System ${e.id.slice(-3)}`}"
                 class="w-full p-2 bg-space-700 border border-space-600 rounded" readonly>
          <input type="hidden" id="to-system-id" value="${e.id}">
        </div>
        <div>
          <label class="block text-sm font-medium mb-1">Fleet Strength:</label>
          <input type="number" id="fleet-strength" min="1" max="100" value="10"
                 class="w-full p-2 bg-space-700 border border-space-600 rounded">
        </div>
        <div class="flex space-x-2">
          <button type="submit" class="flex-1 btn btn-danger">
            Send Fleet
          </button>
          <button type="button" onclick="document.getElementById('modal-overlay').classList.add('hidden')"
                  class="flex-1 btn btn-secondary">
            Cancel
          </button>
        </div>
      </form>
    `),document.getElementById("fleet-form").addEventListener("submit",async n=>{n.preventDefault();try{const o=document.getElementById("from-system").value,r=document.getElementById("to-system-id").value,a=parseInt(document.getElementById("fleet-strength").value);await this.gameState.sendFleet(o,r,a),this.hideModal()}catch(o){this.showError(`Failed to send fleet: ${o.message}`)}})}showTradeRouteModal(e){var o;const t=((o=this.gameState)==null?void 0:o.getOwnedSystems())||[];if(t.length===0){this.showError("You need to own at least one system to create trade routes");return}const i=t.map(r=>`<option value="${r.id}">${r.name||`System ${r.id.slice(-3)}`}</option>`).join(""),n=["food","ore","goods","fuel"].map(r=>`<option value="${r}">${r.charAt(0).toUpperCase()+r.slice(1)}</option>`).join("");this.showModal("Create Trade Route",`
      <form id="trade-form" class="space-y-4">
        <div>
          <label class="block text-sm font-medium mb-1">From System:</label>
          <select id="trade-from-system" class="w-full p-2 bg-space-700 border border-space-600 rounded">
            ${i}
          </select>
        </div>
        <div>
          <label class="block text-sm font-medium mb-1">To System:</label>
          <input type="text" value="${e.name||`System ${e.id.slice(-3)}`}"
                 class="w-full p-2 bg-space-700 border border-space-600 rounded" readonly>
          <input type="hidden" id="trade-to-system-id" value="${e.id}">
        </div>
        <div>
          <label class="block text-sm font-medium mb-1">Cargo Type:</label>
          <select id="cargo-type" class="w-full p-2 bg-space-700 border border-space-600 rounded">
            ${n}
          </select>
        </div>
        <div>
          <label class="block text-sm font-medium mb-1">Cargo Capacity:</label>
          <input type="number" id="cargo-capacity" min="1" max="1000" value="100"
                 class="w-full p-2 bg-space-700 border border-space-600 rounded">
        </div>
        <div class="flex space-x-2">
          <button type="submit" class="flex-1 btn btn-success">
            Create Route
          </button>
          <button type="button" onclick="document.getElementById('modal-overlay').classList.add('hidden')"
                  class="flex-1 btn btn-secondary">
            Cancel
          </button>
        </div>
      </form>
    `),document.getElementById("trade-form").addEventListener("submit",async r=>{r.preventDefault();try{const a=document.getElementById("trade-from-system").value,l=document.getElementById("trade-to-system-id").value,c=document.getElementById("cargo-type").value,h=parseInt(document.getElementById("cargo-capacity").value);await this.gameState.createTradeRoute(a,l,c,h),this.hideModal()}catch(a){this.showError(`Failed to create trade route: ${a.message}`)}})}showFleetPanel(){var i;const e=((i=this.gameState)==null?void 0:i.getPlayerFleets())||[],t=e.length>0?e.map(s=>`
      <div class="bg-space-700 p-3 rounded mb-2">
        <div class="font-semibold">Fleet ${s.id.slice(-3)}</div>
        <div class="text-sm text-space-300">
          <div>From: ${s.from_name||s.from_id}</div>
          <div>To: ${s.to_name||s.to_id}</div>
          <div>Strength: ${s.strength}</div>
          <div>ETA: ${s.eta_tick?`Tick ${s.eta_tick}`:"Unknown"}</div>
        </div>
      </div>
    `).join(""):'<div class="text-space-400">No fleets in transit</div>';this.showModal("Your Fleets",t)}showTradePanel(){var i;const e=((i=this.gameState)==null?void 0:i.getPlayerTrades())||[],t=e.length>0?e.map(s=>`
      <div class="bg-space-700 p-3 rounded mb-2">
        <div class="font-semibold">Trade Route ${s.id.slice(-3)}</div>
        <div class="text-sm text-space-300">
          <div>From: ${s.from_name||s.from_id}</div>
          <div>To: ${s.to_name||s.to_id}</div>
          <div>Cargo: ${s.cargo}</div>
          <div>Capacity: ${s.cap}</div>
          <div>ETA: ${s.eta_tick?`Tick ${s.eta_tick}`:"Unknown"}</div>
        </div>
      </div>
    `).join(""):'<div class="text-space-400">No active trade routes</div>';this.showModal("Your Trade Routes",t)}showDiplomacyPanel(){this.showModal("Diplomacy",`
      <div class="text-center text-space-400 py-8">
        Diplomacy features coming soon!
      </div>
    `)}showBuildingsPanel(){var r;const e=((r=this.gameState)==null?void 0:r.getPlayerBuildings())||[],i=e.filter(a=>a.credits_per_tick>0).reduce((a,l)=>a+l.credits_per_tick,0),s=e.reduce((a,l)=>(a[l.type]||(a[l.type]=[]),a[l.type].push(l),a),{}),n={};if(this.gameState&&this.gameState.buildingTypes)for(const a of this.gameState.buildingTypes)n[a.id]=a.name||a.id;else console.warn("Building types not available in gameState for building panel.");const o=Object.entries(s).map(([a,l])=>`
      <div class="mb-4">
        <h3 class="text-lg font-semibold text-plasma-300 mb-2">${n[a]||a} (${l.length})</h3>
        <div class="space-y-2">
          ${l.map(c=>`
            <div class="bg-space-700 p-3 rounded">
              <div class="font-semibold text-nebula-300">${c.name||`${n[c.type]||c.type} ${c.id.slice(-3)}`}</div>
              <div class="text-sm text-space-300">
                <div>System: ${c.system_name||c.system_id}</div>
                ${c.credits_per_tick>0?`<div class="text-nebula-300">Income: ${c.credits_per_tick} credits/tick</div>`:""}
                <div class="text-xs ${c.active!==!1?"text-green-400":"text-red-400"}">
                  ${c.active!==!1?"Active":"Inactive"}
                </div>
              </div>
            </div>
          `).join("")}
        </div>
      </div>
    `).join("");this.showModal("Buildings Overview",`
      ${i>0?`
        <div class="mb-4 p-3 bg-space-800 rounded">
          <div class="text-lg font-semibold text-plasma-300">Credit Income: ${i} credits/tick</div>
          <div class="text-sm text-space-400">${i*6} credits/minute • ${i*360} credits/hour</div>
        </div>
      `:""}

      ${o||'<div class="text-space-400 text-center py-8">No buildings constructed</div>'}

      <div class="mt-4 text-xs text-space-400 border-t border-space-600 pt-2">
        💡 Build structures at your systems to improve production and defense
      </div>
    `)}showColonizeModal(e){if(!this.currentUser){this.showError("Please log in to colonize planets");return}fetch(`http://localhost:8090/api/planets?system_id=${e.id}`).then(t=>t.json()).then(t=>{const i=t.items||[];if(i.length===0){this.showError("No planets found in this system");return}const s=i.map(n=>{const o=n.colonized_by!=null&&n.colonized_by!=="",r=this.getPlanetTypeName(n.type)||"Unknown";return`
            <div class="p-3 bg-space-700 rounded mb-2 ${o?"opacity-50":"hover:bg-space-600 cursor-pointer"}"
                 ${o?"":`onclick="window.uiController.colonizePlanet('${n.id}')"`}>
              <div class="font-semibold">${n.name}</div>
              <div class="text-sm text-space-300">Type: ${r}</div>
              <div class="text-sm text-space-300">Size: ${n.size}</div>
              ${o?'<div class="text-sm text-red-400">Already colonized</div>':'<div class="text-sm text-emerald-400">Available for colonization</div>'}
            </div>
          `}).join("");this.showModal(`Colonize Planet in ${e.name||`System ${e.id.slice(-3)}`}`,`
          <div class="space-y-2">
            <div class="text-sm text-space-300 mb-4">
              Select a planet to establish a new colony:
            </div>
            ${s}
          </div>
        `),window.uiController=this}).catch(t=>{console.error("Error fetching planets:",t),this.showError("Failed to load planets in this system")})}showToast(e,t="success",i=4e3){const s=document.getElementById("fleet-toast");s&&s.remove();const n=document.createElement("div");n.id="fleet-toast",n.className="fixed bottom-20 left-1/2 transform -translate-x-1/2 z-50 p-4 rounded-lg shadow-lg border transition-all duration-300 max-w-sm",t==="success"?n.className+=" bg-emerald-900/90 border-emerald-600 text-emerald-200":t==="error"?n.className+=" bg-red-900/90 border-red-600 text-red-200":t==="info"?n.className+=" bg-blue-900/90 border-blue-600 text-blue-200":t==="ticket"&&(n.className+=" bg-slate-900/95 border-slate-600 text-slate-200",n.style.maxWidth="400px"),n.innerHTML=`
      <div class="flex items-center justify-between">
        <div class="flex items-center gap-2">
          <span class="material-icons text-sm">${t==="success"?"check_circle":t==="error"?"error":t==="ticket"?"confirmation_number":"info"}</span>
          <span class="text-sm">${e}</span>
        </div>
        <button onclick="this.parentElement.parentElement.remove()" class="ml-2 text-current opacity-70 hover:opacity-100">
          <span class="material-icons text-sm">close</span>
        </button>
      </div>
      <div class="text-xs mt-1 opacity-70">Press Space or Esc to dismiss</div>
    `,document.body.appendChild(n),i>0&&setTimeout(()=>{n.parentElement&&n.remove()},i);const o=r=>{(r.code==="Space"||r.code==="Escape")&&(r.preventDefault(),n.parentElement&&n.remove(),document.removeEventListener("keydown",o))};document.addEventListener("keydown",o)}showSuccessMessage(e){this.showToast(e,"success")}showCreditsBreakdown(){var o,r,a;if(!this.currentUser){this.showError("Please log in to view credit breakdown");return}const t=(((o=this.gameState)==null?void 0:o.getPlayerBuildings())||[]).filter(l=>{var h,d,u;return((u=(d=(h=this.gameState)==null?void 0:h.buildingTypes)==null?void 0:d.find(m=>m.id===l.type))==null?void 0:u.name)==="crypto_server"});let i=((a=(r=this.gameState)==null?void 0:r.playerResources)==null?void 0:a.credits)||0,s=0;t.forEach(l=>{l.credits_per_tick&&(s+=l.credits_per_tick)});const n=t.length>0?t.map(l=>{var d;const c=l.system_name||`System ${(d=l.system_id)==null?void 0:d.slice(-3)}`;l.stored_credits;const h=l.credits_per_tick||1;return`
            <div class="bg-space-700 p-3 rounded mb-2">
              <div class="flex justify-between items-center">
                <div>
                  <div class="font-semibold text-nebula-300">Crypto Server</div>
                  <div class="text-sm text-space-300">Location: ${c}</div>
                </div>
                <div class="text-right">
                  <div class="text-nebula-300">+${h}/tick</div>
                  <div class="text-xs text-space-400">Level ${l.level||1}</div>
                </div>
              </div>
            </div>
          `}).join(""):'<div class="text-space-400 text-center py-4">No crypto servers found</div>';this.showModal('<span class="flex items-center gap-2"><span class="material-icons">account_balance_wallet</span>Credits Breakdown</span>',`
          <div class="space-y-4">
            <div class="bg-space-800 p-4 rounded-lg">
              <div class="grid grid-cols-2 gap-4 text-center">
                <div>
                  <div class="text-2xl font-bold text-nebula-300">${i.toLocaleString()}</div>
                  <div class="text-sm text-space-400">Total Credits</div>
                </div>
                <div>
                  <div class="text-2xl font-bold text-plasma-300">+${s}</div>
                  <div class="text-sm text-space-400">Per Tick</div>
                </div>
              </div>
            </div>

            <div>
              <h3 class="text-lg font-semibold mb-3 text-nebula-200">Credit Sources</h3>
              <div class="max-h-60 overflow-y-auto custom-scrollbar">
                ${n}
              </div>
            </div>

            ${t.length===0?`
              <div class="bg-amber-900/20 border border-amber-600/30 p-3 rounded">
                <div class="text-amber-300 text-sm">
                  💡 <strong>Tip:</strong> Build Crypto Servers on your planets to generate credits over time!
                </div>
              </div>
            `:""}
          </div>

          <button class="w-full btn btn-secondary mt-4" onclick="document.getElementById('modal-overlay').classList.add('hidden')">
            Close
          </button>
        `)}}const je=new ze;window.gameState=k;window.uiController=je;class qe{constructor(){this.mapRenderer=null,this.fleetRoutes=new Map,this.init()}async init(){console.log("Initializing Xan Nation..."),this.uiController=window.uiController,this.uiController.setPocketBase(w),this.mapRenderer=new Ue("game-canvas");const e=P.getUser();e&&this.mapRenderer.setCurrentUserId(e.id),P.subscribe(t=>{this.handleAuthChange(t)}),k.subscribe(t=>{this.handleGameStateChange(t)}),this.setupEventListeners(),console.log("Xandaris initialized")}handleAuthChange(e){this.uiController.updateAuthUI(e),this.mapRenderer&&this.mapRenderer.setCurrentUserId((e==null?void 0:e.id)||null),e?console.log("User logged in:",e.username):console.log("User logged out")}handleGameStateChange(e){var t,i;this.mapRenderer&&(this.mapRenderer.setSystems(e.systems),this.mapRenderer.setFleets(e.fleets),this.mapRenderer.setTrades(e.trades),((t=this.mapRenderer.selectedSystem)==null?void 0:t.id)!==((i=e.selectedSystem)==null?void 0:i.id)&&this.mapRenderer.setSelectedSystem(e.selectedSystem),e.mapData&&e.mapData.lanes&&this.mapRenderer.setLanes(e.mapData.lanes),e.centerOnFleetSystem&&!this.mapRenderer.hasCenteredOnFleet?(this.mapRenderer.centerOnSystem(e.centerOnFleetSystem),this.mapRenderer.hasCenteredOnFleet=!0,this.mapRenderer.zoom=.8):e.systems.length>0&&!this.mapRenderer.hasInitialFit&&(this.mapRenderer.fitToSystems(),this.mapRenderer.hasInitialFit=!0)),this.uiController.updateGameUI(e)}setupEventListeners(){const e=document.getElementById("game-canvas");e.addEventListener("systemSelected",s=>{const n=s.detail.system,o=s.detail.planets,r=s.detail.screenX,a=s.detail.screenY;(!k.selectedSystem||k.selectedSystem.id!==n.id)&&k.selectSystem(n.id),this.uiController.displaySystemView(n,o,r,a)}),e.addEventListener("fleetMoveRequested",s=>{const n=s.detail.fromFleet,o=s.detail.toSystem;this.handleMultiMoveFleet(n,o)}),e.addEventListener("fleetSelected",s=>{const n=s.detail.fleet;this.displaySelectedFleetInfo(n)});const t=document.getElementById("context-menu");t.addEventListener("click",s=>{const n=s.target.dataset.action,o=t.dataset.systemId;n&&o&&(this.handleContextMenuAction(n,o),t.classList.add("hidden"))}),e.addEventListener("mouseleave",()=>{document.getElementById("tooltip").classList.add("hidden")}),document.getElementById("fleet-btn").addEventListener("click",()=>{this.uiController.showFleetPanel()}),document.getElementById("trade-btn").addEventListener("click",()=>{this.uiController.showTradePanel()}),document.getElementById("diplo-btn").addEventListener("click",()=>{this.uiController.showDiplomacyPanel()}),document.getElementById("buildings-btn").addEventListener("click",()=>{this.uiController.showBuildingsPanel()}),document.getElementById("login-btn").addEventListener("click",()=>{this.handleLogin()}),document.getElementById("logout-btn").addEventListener("click",()=>{this.handleLogout()}),document.addEventListener("keydown",s=>{this.handleKeyboardInput(s)});const i=document.getElementById("modal-overlay");i.addEventListener("click",s=>{s.target===i&&this.uiController.hideModal()})}async handleLogin(){try{await P.loginWithDiscord()}catch(e){console.error("Login failed:",e),this.uiController.showError("Login failed. Please try again.")}}handleLogout(){P.logout()}handleContextMenuAction(e,t){const i=k.systems.find(s=>s.id===t);if(i)switch(e){case"view":k.selectSystem(t),this.mapRenderer.centerOnSystem(t);break;case"fleet":this.uiController.showSendFleetModal(i);break;case"trade":this.uiController.showTradeRouteModal(i);break}}handleBuildAction(){const e=k.getSelectedSystem();if(!e){this.uiController.showError("Please select a system first");return}if(!P.isLoggedIn()){this.uiController.showError("Please log in first");return}this.uiController.showBuildModal(e)}handleSendFleetAction(){const e=k.getSelectedSystem();if(!e){this.uiController.showError("Please select a system first");return}if(!P.isLoggedIn()){this.uiController.showError("Please log in first");return}this.uiController.showSendFleetModal(e)}handleTradeRouteAction(){const e=k.getSelectedSystem();if(!e){this.uiController.showError("Please select a system first");return}if(!P.isLoggedIn()){this.uiController.showError("Please log in first");return}this.uiController.showTradeRouteModal(e)}handleColonizeAction(){const e=k.getSelectedSystem();if(!e){this.uiController.showError("Please select a system first");return}if(!P.isLoggedIn()){this.uiController.showError("Please log in first");return}this.uiController.showColonizeModal(e)}getConnectedSystems(e){if(!e||!k.systems)return{};const t={},i=e.x,s=e.y;return k.systems.forEach(n=>{if(n.id===e.id)return;const o=n.x-i,r=n.y-s,a=Math.sqrt(o*o+r*r);if(a>800)return;const l=Math.atan2(r,o)*180/Math.PI;l>=-45&&l<=45?(!t.right||a<t.right.distance)&&(t.right={system:n,distance:a}):l>=45&&l<=135?(!t.down||a<t.down.distance)&&(t.down={system:n,distance:a}):l>=135||l<=-135?(!t.left||a<t.left.distance)&&(t.left={system:n,distance:a}):(!t.up||a<t.up.distance)&&(t.up={system:n,distance:a})}),t}navigateToSystem(e){var n,o;const t=k.getSelectedSystem();if(!t)return;const s=this.getConnectedSystems(t)[e];if(s&&s.system){k.selectSystem(s.system.id),this.mapRenderer.centerOnSystem(s.system.id);const r=((o=(n=k.mapData)==null?void 0:n.planets)==null?void 0:o.filter(a=>a.system_id===s.system.id))||[];this.uiController.displaySystemView(s.system,r)}}async sendFleetToSystem(e){var o;const t=k.getSelectedSystem();if(!t){this.uiController.showToast("Select a system first","error");return}if(!P.isLoggedIn()){this.uiController.showToast("Please log in to send fleets","error");return}const s=this.getConnectedSystems(t)[e];if(!s||!s.system){this.uiController.showToast(`No system found to the ${e}`,"error");return}if((((o=k.fleets)==null?void 0:o.filter(r=>{var a;return r.owner_id===((a=P.getUser())==null?void 0:a.id)&&r.current_system===t.id&&!r.destination_system}))||[]).length===0){this.uiController.showToast("No available fleets at this system","error");return}try{await C.sendFleet(t.id,s.system.id,10)&&(this.uiController.showToast(`🚀 Fleet dispatched to ${s.system.name||`System ${s.system.id.slice(-4)}`}`),this.mapRenderer.showFleetRoute(t,s.system))}catch(r){console.error("Failed to send fleet:",r),this.uiController.showToast(`Failed to send fleet: ${r.message||"Unknown error"}`,"error")}}async handleMultiMoveFleet(e,t){var n;if(!P.isLoggedIn()){this.uiController.showToast("Please log in to send fleets","error");return}if(e.owner_id!==((n=P.getUser())==null?void 0:n.id)){this.uiController.showToast("You don't own this fleet","error");return}if(e.destination_system){this.uiController.showToast("Fleet is already moving","error");return}const i=this.mapRenderer.systems.find(o=>o.id===e.current_system);if(!i){this.uiController.showToast("Fleet's location not found","error");return}const s=this.findFleetPath(i,t);if(!s||s.length<2){this.uiController.showToast("No valid route found to target system","error");return}this.fleetRoutes.set(e.id,{fullPath:s,currentHop:0,targetSystem:t}),await this.sendNextFleetHop(e.id,s)}async sendNextFleetHop(e,t){const i=this.fleetRoutes.get(e);if(!i||i.currentHop>=t.length-1){this.fleetRoutes.delete(e);return}const s=i.currentHop+1,n=t[s],o=t[i.currentHop],r=n.x-o.x,a=n.y-o.y,l=Math.sqrt(r*r+a*a),c=Math.max(1,Math.round(l/100));try{if(await C.sendMultiMoveFleet(e,n.id,c)){i.currentHop=s;const d=s===t.length-1,u=n.name||`System ${n.id.slice(-4)}`;if(d){const m=t.map(f=>f.name||`System ${f.id.slice(-4)}`).join(" → ");this.uiController.showToast(`Fleet dispatched via: ${m}`,"info",3e3),this.mapRenderer.showMultiFleetRoute(t)}else this.uiController.showToast(`Fleet en route to ${u} (hop ${s}/${t.length-1})`,"info",2e3)}}catch(h){console.error("Failed to send fleet hop:",h),this.uiController.showToast("Failed to dispatch fleet. Try again.","error"),this.fleetRoutes.delete(e)}}onFleetArrival(e){const t=this.fleetRoutes.get(e);t&&setTimeout(()=>{this.sendNextFleetHop(e,t.fullPath)},500)}findFleetPath(e,t){var r,a;const i=new Set,s=[{system:e,path:[e]}],n=800,o=15;for(console.log(`🗺️ Pathfinding from ${e.name||e.id.slice(-4)} to ${t.name||t.id.slice(-4)}`);s.length>0;){const l=s.shift(),c=l.system;if(c.id===t.id)return console.log(`✅ Path found with ${l.path.length} hops:`,l.path.map(d=>d.name||d.id.slice(-4))),l.path;if(i.has(c.id)||l.path.length>o)continue;i.add(c.id);const h=((a=(r=k.mapData)==null?void 0:r.systems)==null?void 0:a.filter(d=>{if(d.id===c.id||i.has(d.id))return!1;const u=d.x-c.x,m=d.y-c.y;return Math.sqrt(u*u+m*m)<=n}))||[];console.log(`🔍 From ${c.name||c.id.slice(-4)}: found ${h.length} reachable systems (hop ${l.path.length})`),h.forEach(d=>{i.has(d.id)||s.push({system:d,path:[...l.path,d]})})}return console.log(`❌ No path found from ${e.name||e.id.slice(-4)} to ${t.name||t.id.slice(-4)}`),null}calculatePathDistance(e){let t=0;for(let i=0;i<e.length-1;i++){const s=e[i],n=e[i+1],o=n.x-s.x,r=n.y-s.y,a=Math.sqrt(o*o+r*r);t+=a}return t}displaySelectedFleetInfo(e){const t=e.name||`Fleet ${e.id.slice(-4)}`,i=this.mapRenderer.systems.find(o=>o.id===e.current_system),s=i?i.name||`System ${i.id.slice(-4)}`:"Unknown";let n="";if(e.destination_system){const o=this.mapRenderer.systems.find(h=>h.id===e.destination_system),r=o?o.name||`System ${o.id.slice(-4)}`:"Unknown",a=this.mapRenderer.systems.find(h=>h.id===e.next_stop),l=a?a.name||`System ${a.id.slice(-4)}`:null;let c="Unknown";if(e.eta){const h=new Date(e.eta),d=new Date,u=h.getTime()-d.getTime(),m=Math.ceil(u/(1e3*60));c=m>0?`${m}m`:"Arriving"}n=`
        <div class="font-mono text-xs bg-slate-800 p-3 rounded border">
          <div class="text-center text-slate-400 mb-2 text-xs">TRANSIT AUTHORIZATION</div>
          <div class="space-y-1">
            <div><span class="text-slate-400">FLEET:</span> ${t}</div>
            <div><span class="text-slate-400">FROM:</span> ${s}</div>
            ${l&&l!==r?`<div><span class="text-slate-400">NEXT:</span> ${l}</div>`:""}
            <div><span class="text-slate-400">DEST:</span> ${r}</div>
            <div><span class="text-slate-400">ETA:</span> ${c}</div>
          </div>
          <div class="text-center text-xs text-slate-500 mt-2 pt-2 border-t border-slate-700">
            Press any key to dismiss
          </div>
        </div>
      `}else{let o="No ships";e.ships&&e.ships.length>0&&(o=e.ships.map(r=>`${r.count}x ${r.ship_type_name||"Unknown"}`).join(", ")),n=`
        <div class="font-mono text-xs bg-slate-800 p-3 rounded border">
          <div class="text-center text-slate-400 mb-2 text-xs">FLEET SELECTED</div>
          <div class="space-y-1">
            <div><span class="text-slate-400">FLEET:</span> ${t}</div>
            <div><span class="text-slate-400">LOCATION:</span> ${s}</div>
            <div><span class="text-slate-400">SHIPS:</span> ${o}</div>
            <div><span class="text-slate-400">STATUS:</span> Docked</div>
          </div>
          <div class="text-center text-xs text-slate-500 mt-2 pt-2 border-t border-slate-700">
            Shift+Click system to move • Press any key to dismiss
          </div>
        </div>
      `}this.uiController.showToast(n,"ticket",0)}handleKeyboardInput(e){if(!(e.target.tagName==="INPUT"||e.target.tagName==="TEXTAREA"))switch(e.key.toLowerCase()){case"escape":this.uiController.hideModal(),document.getElementById("context-menu").classList.add("hidden");break;case"arrowup":e.preventDefault(),e.shiftKey?this.sendFleetToSystem("up"):this.navigateToSystem("up");break;case"arrowdown":e.preventDefault(),e.shiftKey?this.sendFleetToSystem("down"):this.navigateToSystem("down");break;case"arrowleft":e.preventDefault(),e.shiftKey?this.sendFleetToSystem("left"):this.navigateToSystem("left");break;case"arrowright":e.preventDefault(),e.shiftKey?this.sendFleetToSystem("right"):this.navigateToSystem("right");break;case"f":this.handleSendFleetAction();break;case"t":this.handleTradeRouteAction();break;case"b":this.handleBuildAction();break;case"c":k.getSelectedSystem()&&this.mapRenderer.centerOnSystem(k.getSelectedSystem().id);break;case"o":this.handleColonizeAction();break;case"h":this.mapRenderer.fitToSystems();break}}}const Ye=new qe;window.app=Ye;
